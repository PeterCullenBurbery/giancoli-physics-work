(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1405212,      26300]
NotebookOptionsPosition[   1268451,      23624]
NotebookOutlinePosition[   1382135,      25797]
CellTagsIndexPosition[   1381734,      25783]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chapter 5-CIRCULAR MOTION\[LongDash]GRAVITATION", "Title",
 CellChangeTimes->{3.881610740280302*^9},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.881610794583128*^9, 3.8816107971836367`*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Closed]],

Cell[CellGroupData[{

Cell["5-1 to 5-3 Uniform Circular Motion", "Section",
 CellChangeTimes->{{3.881610819746584*^9, 3.881610827434469*^9}},
 FontFamily->"JetBrains Mono",
 CellID->352246167,ExpressionUUID->"9efd37b7-cd99-4e6b-b973-3b2277098ece"],

Cell[CellGroupData[{

Cell[TextData[{
 "1. (I) A child sitting 1.20 m from the center of a merry-go-round moves \
with a speed of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.10", " ", 
    RowBox[{
     StyleBox["m",
      FontSlant->"Plain"], 
     StyleBox["\[CenterDot]",
      FontSlant->"Plain"], 
     SuperscriptBox[
      StyleBox["s",
       FontSlant->"Plain"], 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2944c2fa-ca90-4b55-a2ef-0a81bc0122f9"],
 ". Calculate {a} the centripetal acceleration of the child and {b} the net \
horizontal force exerted on the child (mass=22.5 kg)."
}], "Subsection",
 CellChangeTimes->{{3.881610834585342*^9, 3.8816109544075317`*^9}},
 FontFamily->"JetBrains Mono",
 FontWeight->"Normal",
 CellID->419785375,ExpressionUUID->"eec9b955-6fc8-46c0-a5d7-62eea6df38c3"],

Cell["View possible formulas for centripetal acceleration:", "Text",
 CellChangeTimes->{{3.8816110216738567`*^9, 3.881611030924717*^9}},
 FontFamily->"JetBrains Mono",
 CellID->48786411,ExpressionUUID->"19f5c568-5339-4c81-8c48-4f290debef71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociationMap", "[", "FormulaData", "]"}], "[", 
  RowBox[{"FormulaLookup", "[", "\"\<CentripetalAcceleration\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8816109560169153`*^9, 3.881610988227192*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[58]:=",
 CellID->13339840,ExpressionUUID->"59f61926-5b2d-429c-a6e7-0f27a365dd94"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", 
      ",", "\<\"RotationSpeed\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     FractionBox[
      SuperscriptBox[
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], 
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", 
      ",", "\<\"AngularVelocity\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     RowBox[{
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )], " ", 
      SuperscriptBox[
       TemplateBox[{"\"\[Omega]\"", "\"AngularVelocity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular velocity"}], TooltipStyle -> 
          "TextStyling"]& )], "2"]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", 
      ",", "\<\"AngularVelocity\"\>", ",", "\<\"Diameter\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      TemplateBox[{"\"d\"", "\"Diameter\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " diameter"}], TooltipStyle -> 
         "TextStyling"]& )], " ", 
      SuperscriptBox[
       TemplateBox[{"\"\[Omega]\"", "\"AngularVelocity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular velocity"}], TooltipStyle -> 
          "TextStyling"]& )], "2"]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", 
      ",", "\<\"AngularVelocity\"\>", ",", "\<\"OrbitDistance\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     RowBox[{
      SuperscriptBox[
       TemplateBox[{"\"\[Omega]\"", "\"AngularVelocity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular velocity"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], " ", 
      TemplateBox[{
        SubscriptBox["\"d\"", "\"o\""], "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"OrbitSpeed\"\>"}], 
     "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     FractionBox[
      SuperscriptBox[
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], 
      TemplateBox[{
        SubscriptBox["\"d\"", "\"o\""], "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"OrbitSpeed\"\>", 
      ",", "\<\"Diameter\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox[
        TemplateBox[{"\"v\"", "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )], "2"]}], 
      TemplateBox[{"\"d\"", "\"Diameter\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " diameter"}], TooltipStyle -> 
         "TextStyling"]& )]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"OrbitSpeed\"\>", 
      ",", "\<\"Radius\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     FractionBox[
      SuperscriptBox[
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], 
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"RotationRate\"\>"}],
      "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       TemplateBox[{
         RowBox[{"4", " ", 
           SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"rev\"", "2"]}], "per revolutions squared", 
         FractionBox["1", 
          SuperscriptBox["\"Revolutions\"", "2"]]},
        "Quantity"], ")"}], " ", 
      SuperscriptBox[
       TemplateBox[{"\"n\"", "\"RevolutionRate\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " revolution rate"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], " ", 
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"RotationRate\"\>", 
      ",", "\<\"Diameter\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       TemplateBox[{
         RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"rev\"", "2"]}], "per revolutions squared", 
         FractionBox["1", 
          SuperscriptBox["\"Revolutions\"", "2"]]},
        "Quantity"], ")"}], " ", 
      TemplateBox[{"\"d\"", "\"Diameter\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " diameter"}], TooltipStyle -> 
         "TextStyling"]& )], " ", 
      SuperscriptBox[
       TemplateBox[{"\"n\"", "\"RevolutionRate\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " revolution rate"}], TooltipStyle -> 
          "TextStyling"]& )], "2"]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"RotationRate\"\>", 
      ",", "\<\"OrbitDistance\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       TemplateBox[{
         RowBox[{"4", " ", 
           SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"rev\"", "2"]}], "per revolutions squared", 
         FractionBox["1", 
          SuperscriptBox["\"Revolutions\"", "2"]]},
        "Quantity"], ")"}], " ", 
      SuperscriptBox[
       TemplateBox[{"\"n\"", "\"RevolutionRate\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " revolution rate"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], " ", 
      TemplateBox[{
        SubscriptBox["\"d\"", "\"o\""], "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"RotationSpeed\"\>", 
      ",", "\<\"Diameter\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox[
        TemplateBox[{"\"v\"", "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )], "2"]}], 
      TemplateBox[{"\"d\"", "\"Diameter\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " diameter"}], TooltipStyle -> 
         "TextStyling"]& )]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CentripetalAcceleration\"\>", ",", "\<\"RotationSpeed\"\>", 
      ",", "\<\"OrbitDistance\"\>"}], "}"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"a\"", "\"Acceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Equal]", 
     FractionBox[
      SuperscriptBox[
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], 
      TemplateBox[{
        SubscriptBox["\"d\"", "\"o\""], "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )]]}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8816109954045935`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[58]=",
 CellID->17273215,ExpressionUUID->"54216b74-ecad-432b-814e-a8c5184e1d52"]
}, Open  ]],

Cell["\<\
I will use the formula CentripetalAcceleration with RotationSpeed.\
\>", "Text",
 CellChangeTimes->{{3.8816110036848745`*^9, 3.881611018580103*^9}},
 FontFamily->"JetBrains Mono",
 CellID->21875308,ExpressionUUID->"31758bf6-655f-4fc7-b77b-b6b6ef764d19"],

Cell["Get data for the formula:", "Text",
 CellChangeTimes->{{3.8816110455723534`*^9, 3.881611049698476*^9}},
 FontFamily->"JetBrains Mono",
 CellID->135913308,ExpressionUUID->"87f143a2-d0d7-4873-8774-406fdd577eba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<CentripetalAcceleration\>\"", ",", " ", "\"\<RotationSpeed\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.881611050870327*^9, 3.881611067664051*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[60]:=",
 CellID->57211722,ExpressionUUID->"c3429413-a9c5-404c-9ce5-9936c24403e6"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"a\"", "\"Acceleration\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  FractionBox[
   SuperscriptBox[
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "2"], 
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )]]}]], "Output",
 CellChangeTimes->{{3.88161106107351*^9, 3.881611068210925*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[60]=",
 CellID->67539503,ExpressionUUID->"2884c406-331a-4d95-b11f-a21ad661320b"]
}, Open  ]],

Cell["The table has lots of helpful information:", "Text",
 CellChangeTimes->{{3.881611081269068*^9, 3.881611089283528*^9}},
 FontFamily->"JetBrains Mono",
 CellID->124390632,ExpressionUUID->"c001e019-c79c-4812-87ca-0a5a5f8651bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<CentripetalAcceleration\>\"", ",", " ", "\"\<RotationSpeed\>\""}], 
    "}"}], ",", "\"\<QuantityVariableTable\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.881611050870327*^9, 3.881611078737775*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[61]:=",
 CellID->144791410,ExpressionUUID->"eabb2ec0-ea13-4104-bba2-055b379060e9"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", "\
\<\"dimensions\"\>"},
     {"\<\"a\"\>", "\<\"centripetal acceleration\"\>", "\<\"Acceleration\"\>", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\<\"TimeUnit\"\>", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
     {"\<\"r\"\>", "\<\"radius\"\>", "\<\"Radius\"\>", 
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
     {"\<\"v\"\>", "\<\"tangential speed\"\>", "\<\"Speed\"\>", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\<\"TimeUnit\"\>", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.881611079003401*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[61]=",
 CellID->815537168,ExpressionUUID->"9fd02551-ca68-4f29-acb1-69659c7b75ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formula Classes", "Subsubsection",
 CellChangeTimes->{{3.8816111280880985`*^9, 3.8816111305284343`*^9}},
 FontFamily->"JetBrains Mono",
 CellID->142185041,ExpressionUUID->"a7ea8008-32a5-48d7-bff4-46b229692fbf"],

Cell["I wonder what classes this formula is in.", "Text",
 CellChangeTimes->{{3.8816110927991924`*^9, 3.881611099142973*^9}},
 FontFamily->"JetBrains Mono",
 CellID->253076874,ExpressionUUID->"777dbff7-63d1-4ad0-be22-6116d989c5c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<CentripetalAcceleration\>\"", ",", " ", "\"\<RotationSpeed\>\""}], 
    "}"}], ",", "\"\<Classes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.881611050870327*^9, 3.8816111038930087`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[62]:=",
 CellID->639453072,ExpressionUUID->"e5b58bd3-5f23-4c3a-a6c5-5cb0650ce595"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Physics\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Physics\"\>", ",", "\<\"Mechanics\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8816111043304863`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[62]=",
 CellID->119887387,ExpressionUUID->"61a441a9-479c-4dd6-acf4-94d2fe11ea01"]
}, Open  ]],

Cell["I wonder what other formulas are in the classes:", "Text",
 CellChangeTimes->{{3.881611106971155*^9, 3.881611118568746*^9}, {
  3.8816116365184216`*^9, 3.8816116366902947`*^9}},
 FontFamily->"JetBrains Mono",
 CellID->75015327,ExpressionUUID->"16bcf0d7-7e13-4de9-8df7-90d0a33d9573"],

Cell["Make a word cloud for each class:", "Text",
 CellChangeTimes->{{3.8816111561711845`*^9, 3.8816111585930753`*^9}, {
  3.8816116228366413`*^9, 3.8816116265710597`*^9}},
 FontFamily->"JetBrains Mono",
 CellID->433974508,ExpressionUUID->"4b395f63-fffd-425e-8944-3f993567b6c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", "\"\<FromCamelCase\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.881611163889948*^9, 3.8816111644056*^9}, {
  3.881611211743408*^9, 3.881611215669671*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[64]:=",
 CellID->664121034,ExpressionUUID->"6befaeb9-cd87-43f5-83e2-cc2366f21456"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored FromCamelCase as an initialization \
symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Peter/AppData/Roaming/Wolfram/Objects/\
Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/Peter/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a26948126643545590777$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored FromCamelCase as an initialization \
symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/Peter/AppData/Roaming/Wolfram/Objects/\
Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/Peter/AppData/Roaming/Wolfram/Objects/\
Persistence", 
                    Hold[Persistence`Data`a26948126643545590777$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "InstalledResourceFunction", <|
   "MessageTemplate" :> 
    "Successfully stored `symName` as an initialization symbol.", 
    "MessageParameters" -> <|"symName" -> "FromCamelCase"|>, 
    "PersistenceLocation" -> 
    PersistenceLocation[
     "Local", "file:///C:/Users/Peter/AppData/Roaming/Wolfram/Objects/\
Persistence", 
      Hold[Persistence`Data`a26948126643545590777$7]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8816112279056654`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[64]=",
 CellID->80828597,ExpressionUUID->"ff4a7b84-5a15-40cf-8b78-42570646b4e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"TextWords", "[", 
      RowBox[{"FromCamelCase", "[", "#", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"FormulaLookup", "[", "\"\<Physics\>\"", "]"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881611344481157*^9, 3.8816113463092875`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[73]:=",
 CellID->2302898,ExpressionUUID->"3f596d90-64ce-40c6-b3ec-7e542a855f2f"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Frequency\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12894688250138486`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Speed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.16587677725118485`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-0.5, 48.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Number\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.14925832461377486`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-11.5, -45.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Angular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11786791407644488`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {8.5, -88.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Wavelength\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08093801932664493],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-5.5, 86.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Acceleration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09386348248907492],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, 115.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1012494614390349],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, -126.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Relativistic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08463100880162493],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-0.5, 145.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Velocity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07724502985166494],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {114.5, -148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Capacitance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058780082476764944`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-72.5, -149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Broglie\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07355204037668493],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-117.5, -82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rolling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07170554563919493],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-105.5, -114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Distance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07724502985166494],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-0.5, 173.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Momentum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06616606142672493],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-0.5, -171.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Harmonic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06616606142672493],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {119.5, -118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Oscillator\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06616606142672493],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {120.5, 163.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Permittivity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04770111405182496],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {137.5, 18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Law\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10309595617652491`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {123.5, 44.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Gravitational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05508709300178495],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-123.5, 167.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04400812457684496],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-137.5, 44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Moment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06616606142672493],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {134.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Relations\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058780082476764944`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-139.5, 61.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Equation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049547608789314954`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {127.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Angle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.062473071951744945`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {137.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Doppler\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049547608789314954`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {113.5, 87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Inertia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06616606142672493],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {128.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Circular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05693358773927495],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-131.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Standard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05139410352680496],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {145.5, 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Diameter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049547608789314954`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {122.5, 131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Thermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.053240598264294954`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-145.5, 102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Radius\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058780082476764944`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-153.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Centripetal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03477565088939497],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-129.5, 24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pressure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04770111405182496],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {153.5, -11.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Kinetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05139410352680496],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-148.5, -25.5}, \
Center, Automatic], InsetBox[
    StyleBox["\<\"Mass\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06431956668923494],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-143.5, -46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Of\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09201698775158491],
     FontColor->RGBColor[1, 0.75, 0]], {-117.5, 127.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Damping\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03662214562688497],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {111.5, -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mechanical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03846864036437496],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-106.5, -169.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058780082476764944`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {94.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Electric\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04770111405182496],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {152.5, -178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Driving\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040315135101864956`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-163.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Density\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03846864036437496],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-160.5, -133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Diffraction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03846864036437496],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {94.5, 182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Inclined\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04400812457684496],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {21.5, 187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"De\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07724502985166494],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {178.5, 40.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Heat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05693358773927495],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {174.5, 84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rayleigh\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03292915615190497],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-0.5, -190.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Period\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04770111405182496],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-87.5, 185.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Transfer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040315135101864956`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-58.5, -191.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Coefficient\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03477565088939497],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {59.5, -193.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Conductivity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025543177201944975`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-145.5, -63.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Black\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049547608789314954`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-174.5, -105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Slope\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040315135101864956`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-157.5, 136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Charge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03292915615190497],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-98.5, -133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Power\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04216162983935497],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-111.5, -183.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Factor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04216162983935497],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-163.5, -147.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Length\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03292915615190497],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-138.5, 148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Advantage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025543177201944975`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {53.5, -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ratio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04770111405182496],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-137.5, 184.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hole\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049547608789314954`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-167.5, -165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Scattering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025543177201944975`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {144.5, 1.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pendulum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {123.5, -193.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Plane\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04216162983935497],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {151.5, 181.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Sphere\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {178.5, 142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Initial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04216162983935497],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-158.5, -184.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Force\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04216162983935497],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-186.5, 17.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cycle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03477565088939497],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {185.5, -27.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Constant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-13.5, 200.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hohmann\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029236166676924972`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {177.5, -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gravity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027389671939434975`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {117.5, 143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rotation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-186.5, -72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Magnetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {1.5, 15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Spring\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029236166676924972`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-188.5, -38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Current\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-185.5, -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Radiation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027389671939434975`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {37.5, 201.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Shift\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040315135101864956`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {185.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Orbit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03846864036437496],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {184.5, -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Parallel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-61.5, 200.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040315135101864956`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-60.5, -25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Particle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029236166676924972`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-26.5, -204.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Average\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {61.5, 15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03662214562688497],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-193.5, 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Area\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03846864036437496],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-190.5, -53.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Self\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040315135101864956`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-195.5, -18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Formula\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025543177201944975`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {189.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Volume\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025543177201944975`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-190.5, 75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Photon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027389671939434975`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-190.5, 85.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ideal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03292915615190497],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {77.5, 196.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Form\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-97.5, 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Horizon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {11.5, -205.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Linear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025543177201944975`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-74.5, 15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Friction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {44.5, -157.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Flow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029236166676924972`],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {5.5, -151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03477565088939497],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {193.5, -42.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Two\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03108266141441497],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {175.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Event\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-4.5, -25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mean\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {112.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Disk\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-13.5, 65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"To\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03292915615190497],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-197.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Coil\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023696682464454978`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {15.5, 65.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-212., 210.}, {-212., 207.}}]], "Output",
 CellChangeTimes->{3.8816113592835875`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[73]=",
 CellID->291924530,ExpressionUUID->"bfd419a2-876e-4075-9763-884f24ce36e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"TextWords", "[", 
      RowBox[{"FromCamelCase", "[", "#", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"FormulaLookup", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Physics\>\"", ",", "\"\<Mechanics\>\""}], "}"}], "]"}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.881611644190343*^9, 3.881611649596609*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[74]:=",
 CellID->292630481,ExpressionUUID->"097d8013-d26f-4716-b7ab-372b237ae5c3"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Speed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.18324607329842932`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Acceleration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13836948391922213`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, 48.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Angular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11593118922961855`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, -47.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Rolling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11593118922961855`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {12.5, -82.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Harmonic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1075168287210172],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, 85.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Oscillator\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1075168287210172],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, -116.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Distance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1131264023934181],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0.5, 117.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Moment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1075168287210172],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {56.5, 142.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Velocity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08507853403141362],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-104.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gravitational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07666417352281227],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {4.5, -144.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Frequency\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06544502617801047],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-70.5, 143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Inertia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1075168287210172],
     FontColor->RGBColor[1, 0.75, 0]], {-119.5, -163.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Centripetal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05983545250560958],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-124.5, -37.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Damping\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06264023934181003],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {118.5, -36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mechanical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06544502617801047],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, 167.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Angle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07946896035901273],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-124.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Driving\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06824981301421093],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {103.5, -59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Inclined\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07385938668661182],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {131.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Advantage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04581151832460733],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {129.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Slope\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06824981301421093],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-114.5, 76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05703066566940913],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {109.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08507853403141362],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {113.5, 94.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Period\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07385938668661182],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-120.5, 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pendulum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05422587883320868],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-126.5, -99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Diameter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05422587883320868],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {124.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Of\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11593118922961855`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-105.5, -126.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Plane\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07105459985041138],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-115.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Circular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05703066566940913],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {142.5, 16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Spring\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05142109199700823],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {123.5, -16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hohmann\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05142109199700823],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-0.5, -165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Initial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06544502617801047],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {114.5, -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Average\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04300673148840688],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-131.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rotation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04861630516080778],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {112.5, 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Radius\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05422587883320868],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {69.5, -166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06544502617801047],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {108.5, -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Momentum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {33.5, 20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Orbit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05983545250560958],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-85.5, 157.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Parameter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {91.5, 163.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Coefficient\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {133.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Kinetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04861630516080778],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-139.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Shape\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04300673148840688],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-149.5, -18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Sphere\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-151.5, -53.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Relativistic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {142.5, 172.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Displacement\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-6.5, -31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Torsion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04300673148840688],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-152.5, -137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Linear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04581151832460733],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-150.5, -116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Components\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-87.5, 172.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Collision\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04020194465220644],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-161.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Engineering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-28.5, 19.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Force\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04861630516080778],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {156.5, 34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Factor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04300673148840688],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-160.5, 39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mass\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05142109199700823],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {166.5, 46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Standard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-0.5, -180.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cylinder\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {166.5, -58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Form\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04861630516080778],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {164.5, -73.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Keplers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-167.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Position\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {49.5, -181.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Area\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04861630516080778],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {171.5, -18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Weight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-37.5, 181.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Friction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-167.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Impulse\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {164.5, -87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Constant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {6.5, 183.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Oscillations\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {56.5, 183.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Transfer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {152.5, 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Connected\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-57.5, 62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Torque\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {49.5, -31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Power\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-92.5, -53.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Delta\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04020194465220644],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-44.5, -181.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Density\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {164.5, 88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Height\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {164.5, 100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Work\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {160.5, -115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Length\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-76.5, 182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Stress\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-143.5, 140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Particle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {149.5, 135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Maximum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {168.5, 111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Law\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04300673148840688],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-172.5, 5.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Newtons\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-3.5, 62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Entrance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-166.5, 114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Elastic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03178758414360509],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {90.5, -182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Angles\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-173.5, 24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Surface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {152.5, -138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Rate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-175.5, -66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Massive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {86.5, 171.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hookes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-80.5, -184.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Coriolis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-163.5, 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Disk\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03459237097980553],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-170.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"To\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04861630516080778],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {176.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Orbital\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {144.5, 146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bodies\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {98.5, 182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Effect\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-172.5, 92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Total\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {139.5, 156.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Third\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {119.5, -173.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lead\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {35.5, 62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Final\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-106.5, -22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Axis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-169.5, 102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Exit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-50.5, -161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"No\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028982797307404638`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {95.5, 12.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2D\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {176.5, -6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"V\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037397157816005985`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-33.5, -6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"On\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02617801047120419],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-177.5, -7.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-191., 191.}, {-191., 188.}}]], "Output",
 CellChangeTimes->{3.8816116564187946`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[74]=",
 CellID->134461410,ExpressionUUID->"cb1fbc09-63fa-4450-975b-658d18ab29f9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["using the formula for part a", "Subsubsection",
 CellChangeTimes->{{3.8816117023285084`*^9, 3.88161171496103*^9}, {
  3.881612009775736*^9, 3.881612011603879*^9}},
 FontFamily->"JetBrains Mono",
 CellID->242507578,ExpressionUUID->"0f705a4a-be4c-4498-81cc-eaf3cb50749b"],

Cell[TextData[{
 "The child is sitting 1.20m from the merry-go-round so the radius is 1.20m. \
The speed or velocity is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.10", " ", 
    RowBox[{
     StyleBox["m",
      FontSlant->"Plain"], 
     StyleBox["\[CenterDot]",
      FontSlant->"Plain"], 
     SuperscriptBox[
      StyleBox["s",
       FontSlant->"Plain"], 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "b89e4e37-8298-4d65-9723-74f59adfab92"],
 "."
}], "Text",
 CellChangeTimes->{{3.8816117331741285`*^9, 3.881611788448131*^9}},
 FontFamily->"JetBrains Mono",
 CellID->709184363,ExpressionUUID->"fbd067d2-76ca-4e4b-85f0-1a4db4147fce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<CentripetalAcceleration\>\"", ",", " ", "\"\<RotationSpeed\>\""}], 
    "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.88161179002627*^9, 3.881611811206897*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[75]:=",
 CellID->369582274,ExpressionUUID->"3bb69e95-49fa-4ba7-8795-7af9fa609d31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"a\"", "\"Acceleration\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.8816118114571953`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[75]=",
 CellID->501691413,ExpressionUUID->"d13a7deb-7e2a-48f2-88ae-dfb90aaf7ffd"]
}, Open  ]],

Cell["I just need the rest of the variables, not a:", "Text",
 CellChangeTimes->{{3.881611817927625*^9, 3.881611829599577*^9}},
 FontFamily->"JetBrains Mono",
 CellID->613806891,ExpressionUUID->"042f8523-a784-4e0e-82aa-9807794e7d9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"FormulaData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<CentripetalAcceleration\>\"", ",", " ", "\"\<RotationSpeed\>\""}], 
     "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.881611814427613*^9, 3.881611815380746*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[76]:=",
 CellID->741795267,ExpressionUUID->"bfcd9fd9-510a-4330-9b1a-629d1ff3bd30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.8816118157401247`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[76]=",
 CellID->4656641,ExpressionUUID->"1c6f21eb-58fe-4573-b959-303c14debe01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"substitutionRules", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Rest", "[", 
     RowBox[{"FormulaData", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<CentripetalAcceleration\>\"", ",", " ", 
         "\"\<RotationSpeed\>\""}], "}"}], ",", "\"\<QuantityVariables\>\""}],
       "]"}], "]"}], "->", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"1.2`", "\"m\"", "meters", "\"Meters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.1`", 
        RowBox[{
         "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          "\"s\""}], "meters per second", 
        FractionBox["\"Meters\"", "\"Seconds\""]},
       "Quantity"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8816118350775156`*^9, 3.8816118896287127`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[79]:=",
 CellID->565534198,ExpressionUUID->"b2daba0b-7b51-4959-af16-9e47fb64acb2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"1.2`", "\"m\"", "meters", "\"Meters\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"1.1`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8816118900662136`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[79]=",
 CellID->21771389,ExpressionUUID->"657a42c4-00d4-4147-97c8-a7f9d02e4543"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FormulaData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<CentripetalAcceleration\>\"", ",", "\"\<RotationSpeed\>\""}],
     "}"}], "]"}], "/.", "substitutionRules"}]], "Input",
 CellChangeTimes->{{3.881611892831842*^9, 3.8816119077162113`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[80]:=",
 CellID->433127764,ExpressionUUID->"32adedaf-37bd-4f71-bdaf-90e100735f23"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"a\"", "\"Acceleration\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  TemplateBox[{"1.0083333333333335`", 
    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
      SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
    FractionBox["\"Meters\"", 
     SuperscriptBox["\"Seconds\"", "2"]]},
   "Quantity"]}]], "Output",
 CellChangeTimes->{3.8816119080130835`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[80]=",
 CellID->461947678,ExpressionUUID->"0c1a3e16-ab55-44ee-839f-ac890ab0dc47"]
}, Open  ]],

Cell["I'm curious what a rationalized form of this is.", "Text",
 CellChangeTimes->{{3.8816119138756046`*^9, 3.8816119224693713`*^9}},
 FontFamily->"JetBrains Mono",
 CellID->150525525,ExpressionUUID->"e3b26515-40fd-48e9-a983-5916594f4ac0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{"FormulaData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<CentripetalAcceleration\>\"", ",", "\"\<RotationSpeed\>\""}], "}"}],
     "]"}], "/.", "substitutionRules"}], "]"}]], "Input",
 CellChangeTimes->{{3.8816119565310063`*^9, 3.8816119754326887`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[87]:=",
 CellID->5034601,ExpressionUUID->"a5f165a8-ec62-4805-a00a-0db9b0e00399"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"a\"", "\"Acceleration\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " acceleration"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  TemplateBox[{
    FractionBox["121", "120"], 
    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
      SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
    FractionBox["\"Meters\"", 
     SuperscriptBox["\"Seconds\"", "2"]]},
   "Quantity"]}]], "Output",
 CellChangeTimes->{{3.8816119707418647`*^9, 3.881611976104539*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[87]=",
 CellID->109518477,ExpressionUUID->"b0bb4c1b-b8f5-40e4-99c0-cdbfc7d4926d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["part b", "Subsubsection",
 CellChangeTimes->{{3.881612015773429*^9, 3.8816120166171894`*^9}},
 FontFamily->"JetBrains Mono",
 CellID->44848217,ExpressionUUID->"07b0694d-6cdc-4927-b34c-7b13b72b3e2f"],

Cell[BoxData[
 RowBox[{"substitutionRules", "//=", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"First", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.881612023080922*^9, 3.8816120378255806`*^9}},
 FontFamily->"JetBrains Mono",
 CellID->174387449,ExpressionUUID->"c1f6d47f-d661-4654-b515-f15032ad79f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaLookup", "[", "\"\<CentripetalForce\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.881611986151459*^9, 3.8816119913426776`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[88]:=",
 CellID->62994514,ExpressionUUID->"55e44e02-29e0-4eff-b5a1-40d972136480"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"CentripetalForce\"\>", ",", "\<\"RotationSpeed\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CentripetalForce\"\>", ",", "\<\"AngularVelocity\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8816119966083207`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[88]=",
 CellID->310697778,ExpressionUUID->"cc798171-e676-4b84-8dd0-0c266011ed8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8816120427162223`*^9, 3.8816120520966506`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[89]:=",
 CellID->407071865,ExpressionUUID->"392dcc64-5da3-4309-8b75-1600b04effff"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"F\"", "\"Force\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  FractionBox[
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    SuperscriptBox[
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]}], 
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )]]}]], "Output",
 CellChangeTimes->{3.881612052409151*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[89]=",
 CellID->703730860,ExpressionUUID->"579adf49-fc71-4228-b413-87c43c067ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"FormulaData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
     "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8816120584248066`*^9, 3.8816120637060795`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[90]:=",
 CellID->119357657,ExpressionUUID->"1088decc-6cfb-4349-a7a5-bdd5c2fe9942"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"m\"", "\"Mass\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.8816120639716997`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[90]=",
 CellID->3756744,ExpressionUUID->"5a1acd96-9c9b-447d-a8ac-df80e51205f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"substitutionRules", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Rest", "[", 
     RowBox[{"FormulaData", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
        "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}], "->", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{"(", 
       TemplateBox[{"22.5`", "\"kg\"", "kilograms", "\"Kilograms\""},
        "Quantity"], ")"}], "]"}], "[", 
     RowBox[{"Values", "[", "substitutionRules", "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.88161206803932*^9, 3.8816121400583057`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[92]:=",
 CellID->122096255,ExpressionUUID->"c8023f26-cd8c-461a-953f-0fe430ecb5c0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"22.5`", "\"kg\"", "kilograms", "\"Kilograms\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"1.2`", "\"m\"", "meters", "\"Meters\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"1.1`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8816121410739355`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[92]=",
 CellID->54023871,ExpressionUUID->"4c2efaf4-6ae9-470b-bd32-1566d17dfa5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FormulaData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], "}"}],
    "]"}], "/.", "substitutionRules"}]], "Input",
 CellChangeTimes->{{3.8816121444350724`*^9, 3.8816121594979954`*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[93]:=",
 CellID->608897127,ExpressionUUID->"e9598d64-46b6-4bba-a353-9752bd1ff16d"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"F\"", "\"Force\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  TemplateBox[{"22.687500000000004`", 
    RowBox[{
     "\"kg\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", "\"/\"", 
      "\[InvisibleSpace]", 
      SuperscriptBox["\"s\"", "2"]}], "kilogram meters per second squared", 
    FractionBox[
     RowBox[{"\"Kilograms\"", " ", "\"Meters\""}], 
     SuperscriptBox["\"Seconds\"", "2"]]},
   "Quantity"]}]], "Output",
 CellChangeTimes->{3.881612159763596*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[93]=",
 CellID->274016423,ExpressionUUID->"441b377b-d027-42ef-8f8e-7e69b9816612"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{"FormulaData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
     "}"}], "]"}], "/.", "substitutionRules"}], "]"}]], "Input",
 CellChangeTimes->{{3.88161216101441*^9, 3.881612164295678*^9}},
 FontFamily->"JetBrains Mono",
 CellLabel->"In[94]:=",
 CellID->183316085,ExpressionUUID->"b6df3e09-995e-45f3-9610-1716daa6fac8"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"F\"", "\"Force\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  TemplateBox[{
    FractionBox["363", "16"], 
    RowBox[{
     "\"kg\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", "\"/\"", 
      "\[InvisibleSpace]", 
      SuperscriptBox["\"s\"", "2"]}], "kilogram meters per second squared", 
    FractionBox[
     RowBox[{"\"Kilograms\"", " ", "\"Meters\""}], 
     SuperscriptBox["\"Seconds\"", "2"]]},
   "Quantity"]}]], "Output",
 CellChangeTimes->{3.8816121646238127`*^9},
 FontFamily->"JetBrains Mono",
 CellLabel->"Out[94]=",
 CellID->593612404,ExpressionUUID->"a82ea720-ca30-4567-a192-2d2813772d6d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes", "Subsubsection",
 CellChangeTimes->{{3.881613687715988*^9, 3.881613688325358*^9}},
 CellID->50388709,ExpressionUUID->"7a4ab481-66ed-4066-95dd-a5e872941caa"],

Cell["I reworded the question.", "Text",
 CellChangeTimes->{{3.881613703212172*^9, 3.88161370780591*^9}},
 CellID->384396788,ExpressionUUID->"73c9475a-b672-465d-8ad0-40b2279d4acb"],

Cell["The original question was", "Text",
 CellChangeTimes->{{3.881613709040289*^9, 3.881613715243435*^9}},
 CellID->11232486,ExpressionUUID->"9969d60e-5d53-4ef7-acda-bf8625ab1eb2"],

Cell[TextData[{
 "A child sitting 1.20 m from the center of a merry-go-round moves with a \
speed of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.10", " ", 
    RowBox[{
     StyleBox["m",
      FontSlant->"Plain"], "/", 
     StyleBox["s",
      FontSlant->"Plain"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b41f3f1c-05ef-4147-96ca-573a6c27a334"],
 ". Calculate (a) the centripetal acceleration of the child and (b) the net \
horizontal force exerted on the child (mass=22.5 kg)."
}], "Text",
 CellChangeTimes->{{3.8816137177590857`*^9, 3.881613748769332*^9}},
 CellID->153587460,ExpressionUUID->"8f389563-2840-485c-844b-c3e51028aaf9"],

Cell[TextData[{
 "I think scientific notation is universally better to use than the oblique \
stroke / for division. For example  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.10", " ", 
    RowBox[{
     StyleBox["m",
      FontSlant->"Plain"], 
     StyleBox["\[CenterDot]",
      FontSlant->"Plain"], 
     SuperscriptBox[
      StyleBox["s",
       FontSlant->"Plain"], 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "68e5f1b3-2fdb-4bbe-b6bb-452c3c3c5ce1"],
 ", written in scientific notation, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.10", " ", 
    RowBox[{
     StyleBox["m",
      FontSlant->"Plain"], "/", 
     StyleBox["s",
      FontSlant->"Plain"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2c52a81c-fe9a-405c-9efe-5175f8f27c32"],
 ", written with the oblique stroke for division, are equivalent. However, I \
would like to mention that scientific notation requires less parentheses and \
often leads to less confusion. Scientific notation is a powerful way to cover \
complicated cases whereas division is not. For example, here are several \
things scientific notation can do that you can't do very well with the / \
marker or not at all."
}], "Text",
 CellChangeTimes->{{3.881613751050587*^9, 3.8816137970698786`*^9}, {
  3.881613838335576*^9, 3.8816139621842446`*^9}},
 CellID->835482792,ExpressionUUID->"f485437c-5902-445e-a4a6-bf02163bae55"],

Cell[TextData[{
 "The zeroeth exponent. ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "0"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "617a4fed-46cb-4112-be50-fa6b455d9e96"],
 ". This has the value 1 except for when you have ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", "0"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8d870cfb-4d02-48f2-888c-1e1ddf2ab5dd"],
 ". I guess you could write m/m, but I think ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "0"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fdcfe6f9-4d0a-4e5a-ac55-96f3a9dc7a5c"],
 " is easier to understand."
}], "Text",
 CellChangeTimes->{{3.8816139641061115`*^9, 3.881614023481063*^9}},
 CellID->42215326,ExpressionUUID->"d65acbcd-4804-494a-ad1a-7c4247f002bb"],

Cell[TextData[{
 "The plus one exponent. For example ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "1"], TraditionalForm]],ExpressionUUID->
  "e5b7f3e4-3e48-4ec8-a8b8-ee80f088d81f"],
 " has the value 1."
}], "Text",
 CellChangeTimes->{{3.881614591972438*^9, 3.881614605224846*^9}, {
  3.881615275920293*^9, 3.881615278055791*^9}, {3.881616519365756*^9, 
  3.881616519537628*^9}},
 CellID->85804393,ExpressionUUID->"888b5d55-ddec-4f1e-8d6c-065eeee47d1b"],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["0", "0"]], "Input",
 CellChangeTimes->{{3.8816139923904753`*^9, 3.8816139930964794`*^9}},
 CellLabel->"In[130]:=",
 CellID->206400298,ExpressionUUID->"2b36520e-1b2d-469f-8338-24e7d413144b"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.8816139935184793`*^9},
 CellLabel->"Out[130]=",
 CellID->762686721,ExpressionUUID->"ed27e3a9-30a5-4bd1-8033-90164a51fb5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["100", 
  SuperscriptBox["2", 
   RowBox[{"-", "1"}]]]], "Input",
 CellChangeTimes->{{3.8816156566974974`*^9, 3.8816156605412865`*^9}},
 CellLabel->"In[131]:=",
 CellID->191719285,ExpressionUUID->"78329cc4-0def-439c-92e3-75b18037fc25"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.8816156609319024`*^9},
 CellLabel->"Out[131]=",
 CellID->831696361,ExpressionUUID->"ccd44e02-ce01-406a-8dcf-9033f1d9b64e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["100", 
  RowBox[{"(", 
   SuperscriptBox["2", 
    RowBox[{"-", "1"}]], ")"}]]], "Input",
 CellChangeTimes->{{3.8816156566974974`*^9, 3.881615671985144*^9}},
 CellLabel->"In[132]:=",
 CellID->236749731,ExpressionUUID->"361b8743-f842-4558-8671-fe3cf149ae28"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.8816156722976437`*^9},
 CellLabel->"Out[132]=",
 CellID->216377726,ExpressionUUID->"7edfc533-eea9-4ba0-8882-0722d7715505"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["a", 
  SuperscriptBox["b", 
   RowBox[{"-", "c"}]]]], "Input",
 CellChangeTimes->{{3.881615676282015*^9, 3.8816156789539146`*^9}},
 CellLabel->"In[133]:=",
 CellID->393667113,ExpressionUUID->"b61f2d21-8349-4a39-b8b9-f34e1845a24b"],

Cell[BoxData[
 SuperscriptBox["a", 
  SuperscriptBox["b", 
   RowBox[{"-", "c"}]]]], "Output",
 CellChangeTimes->{3.8816156793757854`*^9},
 CellLabel->"Out[133]=",
 CellID->182047581,ExpressionUUID->"68bec4d5-431d-4fd8-93fe-51aeccd9ff07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", 
   SuperscriptBox["b", 
    RowBox[{"-", "c"}]]], "===", 
  SuperscriptBox["a", 
   RowBox[{"(", 
    SuperscriptBox["b", 
     RowBox[{"-", "c"}]], ")"}]]}]], "Input",
 CellChangeTimes->{{3.881615676282015*^9, 3.881615689135264*^9}},
 CellLabel->"In[134]:=",
 CellID->234940268,ExpressionUUID->"d657d60c-c009-495c-9b24-e18e78e3ff4f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8816156894946384`*^9},
 CellLabel->"Out[134]=",
 CellID->42800650,ExpressionUUID->"8b63af43-eb3b-4e33-be95-44d3fd502952"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", 
   SuperscriptBox["b", 
    RowBox[{"-", 
     SuperscriptBox["c", 
      RowBox[{"-", "d"}]]}]]], "==", 
  SuperscriptBox["a", 
   RowBox[{"(", 
    SuperscriptBox["b", 
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["c", 
        RowBox[{"-", "d"}]]}], ")"}]], ")"}]]}]], "Input",
 CellChangeTimes->{{3.8816157555804*^9, 3.8816157814729548`*^9}},
 CellLabel->"In[135]:=",
 CellID->54959966,ExpressionUUID->"23656e62-76b6-44d9-af7c-1949b62338c0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.881615781957321*^9},
 CellLabel->"Out[135]=",
 CellID->578357756,ExpressionUUID->"91d028ac-d244-4315-971d-0279d4b9df91"]
}, Open  ]],

Cell["\<\
I wrote down some more of my thoughts on the benefits of this. The files were \
too large but I made them available in a Google Photos link.\
\>", "Text",
 CellChangeTimes->{{3.881616676629068*^9, 3.8816166867734528`*^9}, {
  3.881618040183735*^9, 3.8816180570431943`*^9}},
 CellID->86429511,ExpressionUUID->"1f9c0120-0759-4e64-bdd9-b88089e9cac4"],

Cell["\<\
I wrote down some more of my thoughts on the benefits of this at \
https://photos.app.goo.gl/yWMGanjf6bZ7AMh58 and \
https://photos.app.goo.gl/dPKd678dtDfkTd3n6.\
\>", "Text",
 CellChangeTimes->{{3.881616676629068*^9, 3.8816166867734528`*^9}, {
  3.8816179475548973`*^9, 3.8816179665876923`*^9}},
 CellID->739541637,ExpressionUUID->"73d05e85-c943-4059-92b3-7d7232c569cf"],

Cell[TextData[{
 "This is from the ",
 ButtonBox["quaternion page on wikipedia",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Quaternion"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Quaternion"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8816181707823353`*^9, 3.881618183939573*^9}},
 CellID->83226331,ExpressionUUID->"63f126fe-6686-4a35-a862-b39bcf8878b9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
s6z4ok2iDaZ7+uHSRsPz/ll25bS5Q+kxW8wx5azMs2GISO1Szspkb9LFtsQv
xaMp0b5tobeOtIU5SlM7sQIt7RD1lm5yB0i0DpWsTMQdLi1AYwsw0awswZIm
nZWJxmurrC2zsj2a17mvFtncyUzbxIlxTcsH+u7heL5zLYxfz1SjZ+uK3VsM
+a2oVFfOJLMyW/GM193aF3M8wSGTxKnAMiOloZxLG8z+7fMWrdp/NpUz3tRc
ZP0uo1OUlU38Oi5z4OIXlNd9yr7pXLKyGbmOp5qVyZOSR1Y2sKfcOCrlWUg5
B2pzDHqfl1zaYIZbVs8Pbu0e8V2BHlmZ35qcdBtMj3UljibP848b41WY1gpg
am7mwtbLmTMQM8M0l6xMab/pm7klutR67yHqW4eMKe3R38rh2t8CAOBGIe8K
XJpbivs959/RYsmYsy7WtGRl5vRt49tqark0BFCzMsudp3dW5uguLJbLWeqk
TSIrS7pv/1SzstHj2/MW5apVx0ePbHK7jXf0WhMZ0Xtw9fiTotEjcbw7aHnH
KAsf677DpWvlRHNx9u1v7f9Hn1TOneXdI5O4x/bsE3hjh+tkvYNHr46vN8jn
i4lmZV5d7gdrB10nO+GsLNUZKUN8N40/j6zsPb0j+vgr4ewLpe9UWVurKnMy
S9tGLJMylnSwJmhZFhkZpZiVOfr2jwzqf1B2vX929mR1prYgYwJZmVeHw7mi
H/sU22CK/vxd67SkdjQl2LctxF9V1CnLmMhYabLn//gpSO0/PNE6dPTtb80A
tYXNmF9wwLWrmWSzsgRLmnRWJp614wUYerVu21bv+mCxq4ayOKN91bmWC65o
1LmuuirP55UZXqnIaP+2vDuDakuxS90bU8/KUl05k8zKLD26h1vX5cQauzlm
5HvI+J8KxElPaSqrdoHu6Nt/tEfbiCI98zl8puci63MZHZ+irGzC13GXHq7E
NdS98t5MXMdTzsrk6UW/47L3Wj/aU11xyDgqZfUz8+I12negtnKtPW9UOPr2
P2+8p8B/Bfr17e+1Jkc6NuZYDlX5BtvJZmVGlSrlwBQHRdYiyysGVHo1sLJj
9bZwTGRcSo0vZ4f8ysgX5Fss40Nk1TJ9ZPtH1m7NbJmbg+95w3sPEZlnfJ+8
1L//Ob0SoPs7rwEANwifbvxFjw3WjlnGlbTH8TOhrMzST4Lrg2H81ZDWH2tN
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
gyL9lTmZi3cNyP+NDDSWr7gzKyMzPefOgsdqe8wp6VFPSUOodd2ibO2jol3b
CxwzGty3LD2nqs/lkXR0sK2qWPtiRvbCFRWHzg81FMe+Kyer1uCyDhk901pZ
umxhjmhGuiC3aHPj4CV9eF+10ry0uj+2+KHdpbnz9IHzg6VVLWfM5eyv1Epb
H2op0xYte+EDdYNyLmcGGzYXiolr4+8xF9ZWr2xkQCuD92QPDg4erCjQly5z
XnDN7pDHypdZ2dGhruoS5xx9llR3SSvnquCCTDGLVeUHB0ZcVrIseqjmMWNM
bTPlWWehjldf1pS26/TFY68/uLwpbWnTvIc768/8H2WEP13o7Sl7uGXu0qa0
vJb8LT29v4/N0paV/f703i3td+XrE9HGzP3u6+aYoq5U96G+1/O1T/Nbyv9D
nb700enmznxZgEd7TnxojY8i/8f8dO7ytrJ9py+qS/3hueadHXK+t32jo7rj
3OXY1y6e6av+bsttS/WP7vpud/OZj2LfkdM/p082X85UlPYPb++V4+e3PdEc
m45czDPn6qvaxEctj+wduKAW4A9eBdDXyc7vtszLE7P4ZsfO3tgSmfXKLhxb
KYonfvSVaa9X5jnx+IZ75BvGmomX2duYIPOiaDR66dKlRN+YODUr0353zcq0
MsjyyJaPZvvH2VOvzKuEAAAAAIBrTMJ6ZWfr8jIyy7uVsOx4VVbGkt0iKgu3
rZmXkZ1XVttyNNTTVrsuLzs9p6ThvDFaekZ2Vk7uxgPdPW11h86GG4oz04sb
lTkN7s+PZ26qwQOrsrTJPlnXdbS7YWthVk5hQX5yWdnZuoKMzHkPVDUcCfUc
bd3/ZGFWRmZWWcfI+PjImVDL1mXpGWtqtKKe0QaMj/bvycuJjXyksfKB+ekZ
uZXH5ZLqoVZWTnZwg1aG1v3tg2IuS4LB+XJhW55br303vaBONlNVs7LR41VB
7bsrxGTlOrFOdnEwd17e+po289PC/e+5rXmRlWXlGHPsOrBJnaPPkmrF0Vd1
cM22g909cgVmZBYccGtQe6m7PCczSxZGG3PHGq3k6cE9p1xCAhG53N9yV17b
Ez892d11rLy0KW1pS/V/ydAlcq65fa4eNPU09w4cau5emd+Ultde/1sxITUr
+/DkE3lNc7/ZsbdjoLv3ZP3ejruWapN9/YQYUeQ/TXPz26o7tIkc633fVobI
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
rvID+qctBzYV5GRmrW515qGnfpybnpGd92Rd11FR1IL5WQvmZ/llZU1p+e3V
zSe7u3qf+GZTWp6Zzxix1V3f7WnuHTjU3L0yX/lUrVdW06JNJHdr76Hege6O
nrKSprn5TXOTzMpic8n9nj6X5r1GH19GfBQZrn+0yZx4c32nXob7u41XWH54
uvp+rUht5Vrhe0/sXCve6flfeqx1ua/7rqVNc0s767v0Ij3yTfV1nylnZWnW
4sXf2mktwN7vtc01P73Q92Be09xvduzUPzpZv7dDK89d//ttRxtMEeuVdDf3
vn3hj9aS+Ew8lazsww8/vOWWW/Ly8uR/ZXvDj3/849PdnNCWlZnBmjbfZcuW
3XzzzTL+0v4rU6xQKJ4ST21WNi6qlt1xxx3aXP7qr/6qtbVVm6k2Qe3ft99+
e8WKFZ/85CfV9xQ4S7h8+XK1hLJTR++23gAAAACA2UdkZR693Fu7kRet89a1
j9gmEA7VrltxZ5bsOOuBioaB2AheHYLJ2mixTs+8hEN7SoN6V1rzCioaznRX
qpXfwqHdpbnz9Jgrt3RXKHxeW4RY28NLgw2bZS/32Qvz1uw+Mjhycs/ijOzy
oyKqujRQs1oUNRYcjZ5prZSTkuMfNfOkiWdlmpEBc7Lzg6V7ut4b9ZzshPsr
81/Skf79sZ7KjLXk2rd/JNyzy+jPf15wVfmB/nC4Y12Ga5U/I2DpPdyZv1x0
qPXd17svqJ2f/+lCb0/Zwy1zlzal5bXkV/We+H1slmpHXpH3e/ca/fnf9o32
J3769oXfnyjTa3/pLR4TZWVyLq8/8g359Y6dx/rKlapW+sT3vSaLp3eSX3Xs
9B+Uxf7wXPNOY9bzHu6sP2O+dDJy8Uxf9XdbZPKmLdeh+PsoU87Kqrve2Ssm
NXd52xPN5y6qq/0P8QLohe/6bbwa3tDJ6lhPZZYvWrKyyDlt5ctXIfyXoySe
E0+tb//vfOc7N998c11d3XPPPXf77bcHAoFgMDjdzQnLy8vr6+vN39VKaM8/
//zf/M3f1NbWvvTSS7m5uVp5/uIv/kLN7qY8K9OcOnVq9erVMpeT1ca+8IUv
fOxjH7v77rvfeOMN2/TNEppfUUtIVgYAAAAASCxi6fQsOf2VyTQUxTTy7zwf
tlzrWhWNRkOh0Nq1a1955ZWf/exngUDAv/nklFCzsmeffVado1aed95551//
9V+feeaZcDislceWhk1HVjYuaoj9+te/1kq1a9curTyvvvrqwMCAa/26hCUE
AAAAAMDfaHeFpdOzpJCVzTiyskSui6xMVV5e7v/WyCmckZmVHThwwCuda2tr
08rz9NNPqwOnKSubGNcSAgAAAADgZahj+7at6/NyMhdX93u8O9MLWdmMIytL
5PrKysbGxr74xS9++tOf/sMf/jDd81KzMu2XDRs2uI724IMPBgKBQ4cOqQMP
Hz5sy8qmu3c1H7KEv/zlL2eqAAAAAACAa8vgC3rn+QvL6gYvJR7ZiqxsxpGV
JXK9ZGXRaHTLli333XdfIBC49dZb165dO91Vy2xZmZl9qSPI3sBuuukmrWBa
8cyPZkm9Mp8SAgAAAAAA4Nols7JyxVV4D6bat//y5cudI5hF0n5RsztbvbL8
/PwZqVfmU0IAAAAAAAAgeRUVFY2NjebvmuS/29nZuWbNGvl7V1dXaWkp/eoD
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuGYM
NxZnZBYfDDs+CDcUZ6YXNzo/sOqvzMhMr+6fnsJNoSQXZ3IiI6cObqrpv4pz
nBR927ltetuCjIcPlqRnlDQMX82yXQuOV6VnZFYev0rTDx/dU9k2K/YmZX/w
38m9dzB/1t1vclIow1B7RcGibG2dpxc9v3c6Dt7Zflidrl7alLbr9EwXI6av
O21pe/2F1L8YGTq0uXBhTqa2KYvqh6a+YPA1XWeq6T7finuhdM+fqr5r4Jou
TfTEqxoO7a5undgklBNp42w8/CaxaL5mcPew3oerC5jKUWO5JI0MNDxZ2zcN
ZU3OLHuy0Fdjqhfr6dofxGaq8tg0YqazZ70leS4631icMzP3Qn4r03IIzLId
Mln+O+G07S2zdtVN911EItNy2z+Rs5NtG03iZOX/vDZVc5lxZGVTSKzM2GE4
+/cK76uYZUFm4UP97HBVs7KpePyZItOelVl3v8lJugyRkDZm1ortLUdDPf3/
dWA6Dt7ZflhdL1lZSDtwsgt2tPYcDfWdH536gsHPtJ2ppvt8O9K/f8f2bcbP
+gLtxqZg/bb4kI6ha+CaLk3BJuirnvCds3oiHZqFh9/EFy2B2ZKVWRZwolmZ
byBzFcyyJwuysglK4lz0XuvGYOZM3Qv5rEzrR7Nsh0zWzGRls3fVkZVZSlI1
BSmW7/PalM1lxk02K4NiKp/xrwKyssm5qmfdWZSVKa6jrMzzTDh1OKxSMtGs
jBU7o2bnmSpVrrf318pN0YxmZVfhRDo505aVzRYTzspUM52VzTJkZRPkey4S
NVLycmTFXbKyq+/qZGWzyUxnZdOCrOwqSDIruzTYsHlVcIF+TpsXXFV+cGAk
Ij9QTiBye53RxpTtX+YHS/f0qBMOh2oeK5ynjZ9zZ/GuUDjkt33Dodp1K+7M
EiMXPFYbn04k3PPcelnDP2tR4brnQuFI7Ctio/SEQ7tLc+VcCjY3Dl5yLo7z
/GAbMjrYVlUsZjGvoEJfIvVTfSmMVaHNIs9cRnEM+rTXGBlorZQF09dMVcsZ
8y+u8moyOHjQaLkwL7hmd8hzbxo9o01nmWxhlL4gt8i2jNXait1TGpwv10/5
wUHlD7ujsVlkL1xde+qSx1XMviCxZ8+B/v2xzaesWGE4ts7ti+acsu8eMjLQ
Ur0mtputqWwzCy8Xrbtvl16AecGqrhFlpenja0skJjXSXyNLssC27HHx/WS1
2MFiYw61mStnj21/KxLrU/8oT9k01rPu0Ktr5mVkF++LzVT74i7XZfE5mlw2
hD59S+Mgl0PGtkRiu1um6b3v6fvzbmN3Ekt3NKx8sqc0zzgG9f18WJ2dpV5Z
X2hPsVx1KyoaBkZiE7DvYCMDjeWuB7VjqdXdT37TY8dw8t3J9XuzCufZQyxR
vL1V5XHn6cLnsJrgck3ZYSUzpWN9jyxvSstrWflT0ewpEu7e23FXflPa0qbb
vtFR3XHusvKNy2f6qr/bcttS/dO7vtvdfOYjMVitV6b/vrL53Onmzvx8Odrr
3Rf+5DfHP5xr3pnqHLVyvt+777WV39CHaz/zvtmx89j7lrl4ZWXuu4TYWM79
R+VzRFv5XlBkEabklC6uoc4ftUWVz1zqQy1l2r6XvfCBusFxv+uj2xLGrsgL
ckufGxjVd1G5xhJdIr3WoeuZyvNM6HtWd643213uBO8EkuSXlZ3qr1tXMIlT
QYIztnO1yCl7n8N9TnrOu2jrEHE7YZus5SDy6KXBfeU7TqTOb+o3V8Zlxbj8
+Z7MjTsx/cpy6PyQVjBZHuezmHWI11zcF81zq8l1FWpdp5Uh586iA4NJ32T6
brKEN0LmFNrXWzbfSMc6bWqr4w1IxQgVXaPm7upYQHnUHB3qqi7xn9e4cmXX
0zbbiSiFmxbLGtMHelx2jU3lsgeOWw9A282eWIRh3zn63jB4zDHhzZ7X04p+
9BnfEjfkp4w7oMSni/BRj8cc38PWtvObdyba04o8RnzSD78T1KXBFrmT6Ht1
x9B57WTuWckwucNt3D8rk6eLeQ/UnjqS4sN+wi3l+xy623xGaB8a8kh1HIeA
3CFDQ0diz4a2a7rvTm7juQcm3CU8lyvBTmiO6L+3JH8mHPd+FPVYdfG5TPUy
OiR8ajuiz8K489ll3VIep45TP14izrTqXPorczIX7xpIsOqsnHV3k3sUTeIc
qP13NFSek5llPfxHuyucB5djGyU6WXmtUtfntQnPJenVOAOSysrE78E12w52
9xztbthaqC1IwQHZEYUtK1sSDM7PK6ttORpqeW69/veCgjqjwwrt/i2o7Qyr
KrWJtNWuy8sOBnO9To/a6StLP4VWNRwJdR2sKtL2jeD2vlG9I5qG1doupN3Y
t+olqV6l7e1ZqxuH4vdpuVoBiqobu8xPvx8adV0c7wcBMfdssRRiIjm5wcXm
DUO3vivmra9pC+kF2LEmqC1+cM8prQAfDPa0VeVlZJa+oH00OGI9R2mPIUG9
YYK+RHLxtaJWHo/fFSwO5s6TkzU+Ldz/ntv2OltXEFszPUdb9z+pb4usso6R
+GbKDcqVfKSx8gFtb8wuP2rsiad+rK3w7Lwn6+TKWbi6xH3T2xdErtjsrBy5
YkMtu9QVOz7av0fb0EaRjJmai2aVzB6SU6gX/mhrTdkybdGC1f3xzZeTPU9v
2dHdcLB/xLrStJ2kQJtU8aaN2tbf1ap/vTRXXXaVdT+RYy5Zt6FkXt6m/Udi
kzJKNdq1Wbs0LFun72/aR9tL9briubsHzMUxHgfE9s3O29FvzG+0f7e2EeWG
iO2KlmVxP5qcq0tMf3So72htaUZm3latGC7NWmJLFNu4YprBWGH89j3tHnux
9tGm/fr+bFlp2rcWZ2QXPFmnN6Vpq9UXPKeiZ9ScnZKV5Wj7xrKNB8Qut0Kf
+Lb++I5t7mDhNj1LlJveKEZOScN5x1I7dj/fHcPOdycPt6ydb25NufvJs8fo
+X45U7GGQ4MfOM9+nofVhJdryg4rPVNqmpvXUvbTk90dvYfORsb/+PbObzal
5bdXN5/s7j1Zv7P9tqVNd+06LcOry33dd2njf7Njb8dAd0fPI9qYee3NeiRl
z8ruuL9lbn77Tjna/eZobnP88HS1PkJbuT7HE3u/1zY3qTl+1F2lf+uRfSe6
ewcONb+uz2Vpy863IrG5eGRlnrvE6FB/qGXrsvSMZZVtsf3HwveItvK9oEzd
KX18ZFDbc+I/3fsfu9OclO9uoM8lKyc7uEHb21v3tw/6Xx8d6zBUvkC/Iu9u
Mw7wgoLC5LIy73XoPFMlPBN6n9Xt603NyiZ+J5Ak76xMO90Zi9O6e2KnggRn
bOdq8d/ZfE96vg/dxmTVtZ1T0jKsH0Q1azPT86taXFsxe698x4nU/tXBfdo+
ZpzxetrqNurXi+x17e7PPIMHVmVlKKsop7AgP6mszHsuLovmt9X0daWdonP1
q1tb3aGzyd9k+m4y/xshlbg/j6+f41UijjAf2UYOlWWm67d/5u7qWEBx1GhX
GTmvrgObPOelXNlHzsiz6JoabZ2cGUnxpsWyxnwuu+Oee+C4MyvTTgtZyskq
NprbHH1vGLznmPBmz/1pRe4SpTv0nc1695jgdCEfc4KlYrvIxxzLjpdUVjbS
vl48K+0xdqS8kuJ8z6zMb1ePDO4v0hffvJHLKijMSy4r8z2ofbOytgojdE2t
YkzCLeV9cH3QsS4nftVbl7esePUy16zMcQiIHVI7Lcs950jdRss13W8nt5fe
cw9MuEt4LleCnTB2UvLfW1I6E/o8irqvOsvz9dQuY6q7h37XFFsJ+iN8lvnX
B59Tx9k67bpW3q1cDfWz8RI52RQv/ephleSjaMJzoDHNvmpt1lV98R1PWxuZ
6WtbbZdY9zO858nKe5U6n9cmPpcUVuMMSCYrk1XsQuZHo10bsheWtppbUMnK
Mhdvjd+RqnvFqV1LLEst90nX06OMRjcrO6V2VC7IreweGWlbo+1Llco978iR
iqzYqpZ/pChWOnPWdxv15j+ZrOyD1lLrk7g8tOWn4Y6K4AJLmYcOFMaXwqu/
ssjA7sX67/EzZ2SwpsByFKQvruox//Dt3Yrh1AvLFgar+uIrYLTn+9ZlzFBW
ssi9PZervsTzr8YujcUyC/YN2mbaoy/O0P4CfWONWI7NbPeTWMI9JMNyXAy+
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
AAAAAACATeP73/++j3LDDTdUVFR8+9vf3uwUAQAAAAAAAAAAAACwCaTT6Yce
euixxx5TXq+srJSWlt5+++3Km5udLgAAAAAAAAAAAAAANpqVlZV77rln27Zt
ygvlv5/97Gff9ra3YScmAAAAAAAAAAAAANgYmCrlkng8bvdFT/dROH/+vP76
v/7rv/TX6XT6lVdeYa/r6urKysqglQEAAAAAAAAAAACADSCdTvt8Ppcy15e/
/OWBgQH94mAw2NfXx16Pjo7+3d/9nfvnzszMNDc366/37dtnTsNrr732lre8
5ZFHHnF/WwAAAAAAAAAAAAAAsiAcDnd0dFy9etXn8/3mN7+58847+cVdZlZW
Vt73vve9/PLL+jtBCns9Ojp6//33u3+6QSurqKgwBCVT/rt79+57770XwcoA
AAAAAAAAAAAAwHrzgx/84Pbbb/dp3HHHHfLVZU8++eTNN9/MK1cGrWwt68oM
WpnyurKysrGxUXmhfOohVwAAAAAAAAAAAADXFee6Cgqbxi6v7SaXI33dU3Hn
6yyIneqo2VFSUFhUUD8eW1sqckR8rLGooHsxi2+Gw+E3vOENv/3bv/22t73t
xz/+sVwr27t3b1tbG/9ObrUy/enpdPq2226777770hQlbfZLyxY7C7PMOyN5
ritQ2LXg5rKa4SiLmnZlebC5slR5bmFJZySZ9aOdELIWn+vvDGkGS5pAUee5
dXvyGohPNBW4KM+1koqdbq/d5leqoKh+dJ1aodisEstjDwxp+XJtdZyzoiWT
U8eVIzNYOl5Z82jU01fii+OdzdWs/AvKK+sPDM1nna91yFHOee2bp950W/i5
zU6GRnx0/xNv6n3F03eS54eaA2Wkvvxd82twWrkxY9qCGidc9cB8h/tSbp5u
QjKoEBq+13vmozEDAAAAAIAtSy60soXuooLG8Wy0slREGeQX1x2dnIvML8bW
TyjxQpZaWTgc9vl83/jGN5R/z5w54/f7lXfsLmZhzZ5//nn+zXXSyjo6Oj76
0Y9WaLzjHe9YJ60ssdhfQ+b7TtpOcrEnUNF5Tq3t2GhDQWHlwZHw/Fwk+np2
T3YDnzVxapnHs7AN0soiSgmU1BybUqpg4dI6tUKhWYn52jStTHBcuTKDK+Gg
v/bkq24vj000FSs+cEdt65GjPceOdh6goqW/uudcNhWxLjnKNc/1PvGm/S+8
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
aWWxkzVk6B7VR/tXwsFydQWLZCsTfWIFH7M9MdNRrA/CpVtCYrHYjTfeePPN
N1+9epW9853vfMfn8w0NDRmLaLojUC4MzslGPyFfRY1c0PKF7hI1X+pcNbMH
Khnp2mm/v+a///u/y8rK3vWud6VS5AsrKyu7d+9WkvQv//Ivltdb8sUvflFf
D8Yj0crS6fTdd9+tPOi73/0ue+cf//Eflf92d3fr1+dYKyNzkwZ1NqSQig7u
KtMUWluctLLkbLvxEAd+D6bcWlg9HpyxSwIx0eL2cCIzIVUeV6LNNx3ilSlf
1O9LjUfNO3nt7+AXjCXDSpJsWp+I1+ws9VZkZqAKV+hePFY4dD1ezQluwVgq
SvLLBBmahaoTtiHlyZ0LuTsrPuSE7kPkezBpue3smtfySJY88a0pGQ4qpXds
cdW1Vma60lg1YiFk3JedVkbriw8RptR72bY9w9HV5cFd24UpMy1GPRl2Oxbd
VJy1P9EL/LhSlUfd7DVLnmdR/kq21bV1jkzNn48lRUVFXncGzDnKyrDNaHKT
Liux9V2cykSFLFXpYqIWt3yLfp0qaVxgf+2emsJGP9K+RZefCfqbuqJMPxRA
XSqWkd1snsgnzPCRbWB/aTfquAeT6mxcP8vWsnIVoWNUq45E9I+SM4eKd7RM
XjJ9h6aNt+rYaJO+wi05Rypx8AJ3/avDNTYdrvHpvJmlFjv1liJ1PvJBhVV+
tZZCO1/FXDMbkJVepsZGITQZMzXXEtZgPRozAAAAAADYIljMZNmIlyycoENc
TqdKnGorKKw2RJams62O2SRVKnYN8zNqus7HhVYWn5KIWvZaWeL0fuMT1REy
G/Taa2UrKyuHDx/2+Xw9PT36O/fff7/yziuvuDizjAyt1XKguWjgJ5uZIn11
uKqwKChMYqInbdaVKQk4ePCgkoCjR4+yd9LpdGVl5Tvf+U73IdSUK//kT/5k
bGzM/JFBK7vvvvv0j0ZHR5Xn7t69W3/Ql770JeWdubk5/foca2UXlRlWUeD+
4YWLHn6cd9LKLMqW08ocrMUhrNal8frCovpj0/NzEf2PLmNgX3GK7R/hbpWR
TWgQ7z1HT3P3ZGsz6NeNrU/Ea3Zo4YgTaipM0cIh4fe3HxyJ8LmjS/Lopw7B
fLgWp0Nn3FX0xEZnrYybwptaEy2i7lxqZcVGCylRdSdrrSw+udd92DGaDK0o
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
5/Jd/5MxZ1T61eTH598eCZkkqWUjtDLDw+vFl309QwsfhVT5tAVaZdWbRmVn
gos/5roEsdfKIipo1MpofEnfwnMt4g9FNgWeznHj77rwrxestLIYZzB5pxIS
HPFkgLpuZq570BneoscK7agf4BULE7mD1NiFOq6VSV6FdezYWpm8T0lIaipU
KtphCk8Q7CkR4b5MWhl1s9C3XR7GycXKk3joXKj+9AHvz9Zambkibewr864s
vHL6GPe07BVjuyXHmK1PWmplnbGVtVYW+TpRK9P0c6P/ieeWv56yzDCqlXN3
5k3FtrranxMsXdv/RLh9iZv6yeJTsk9MH0h7eudPy/xL8yZ3U6N7505l/UPx
7Vc22D0ier5MnMmrLSi1kXT2n8ZRUIvroFZmNpdxhLa77DRjr5XFGkcmR2ET
/nhlME+43z1ksMOgn+jci8UiNo5WJkcZdE7QD9m0ZzCDHtvPat4UwzqbAES3
IJHRLhKUa5KSVyTjOqTt8DP0RsP5Aj+6ieXQunsG0+nb8Zy/EKMFMPmBWKsg
6wK0HSTqJ9C6WSsjkzrO/yufAbUm4zvzr/i+66bbZ/JnpbyfuOw2btNeKzMv
vzurlely+2coFV7oXfWj2ZSUKoHf/iAkpJVn7WvHbw/kdlhVIvQKXXa+9Ca3
Q4e0Mi8LkDrhtr1WJlXz6n3G2xWv0crCyRWv3fCHniZ9l0E5IaO0sghztT/x
8S0uYo5KZqLU43l+szndZMfvvqQbUb3cfaEkq2RYtoyx6BU6Y9prZdrUmrNH
Lc2tI1pZRHUkGpfL2cdp8WDdt9NZ0Q1KiSJJHuGpFHkWRKlxq87n+5/TwZBg
2ufG+aJ7zDy4SUM84v2ZaZuRWpn+4aF0Fry/0esan95ln2TERAqN4zl3kjXW
JYi9VhZRQaNW5mcr8sozmTTdCykeunfir7dJK62sWdlISxV388Tq8vP43a9x
sbOZf6n/Wsdc9/AXuNY9NrIdVQPcxkTCFixNF+qsVkZLFyGzh5gGNoZWJs10
dNmc+0zpAIXeYZrsKWN2X5G5/aWczDRmE08WvDzw2snFypO0qq9zobqstr/w
oltrZcaKRM9fPF9ZSfode3hqemrSPze3nOrL5UYEGcpWK+uMray1sqjX+Tdd
6vu50f+Y3HK1+CrTLyb1ZUnyb6mVxZk3w6mJqWzMbkbXV/3zdXpQOpxY+TDs
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
yufUP5eKi8M9vdMbZ6Xzz3U32kolE4Nj+f3T87OD1RdOOJacP3OrXDuc7nfq
RY89P9ycySb9l8pIGkXjctX5pPtMZhAnBkwvXTaajeolL8Bw/rB0flb+f5el
DaeNnhWKdB4z1EzV3ckksw8znfsc2XROyUeWDx2D7F18NdeU2iuV7M++3nBe
fbw965Swd2Trn2ZkGwUqyi3Wz05+ne7uX9bljR/UTNxiVOBUJj0kaWWJlNtM
JztzfjN9rZwfFpzONvXBMUtFEeeyruirviwc9uUjN2Rm4hinvDbEP2x4o6mZ
Omk9czMp+FZefZ5MPF9jn3Q6wPrcVK8kDOqhQno/mt10ZKt0Js1rfbg55fiB
odezkwPu4F0ccUZZbqfqtVe0VqYeU4JWNpTOOONr9bDkvi41Ufw3+DRJOdG3
i1f+6WX+J7G0apO8e9Q7vHF8kOcCYO1gxukAKiGl8amQZucZC7vH3kjvzeQ/
NbyyWbmXpuA81WaxKblkdm3Xalxf8iGTXWR/+r+fAq8LEuU/k4lUhk0Hh9sf
v3SpUvIrxBb/dpl3OobXJx3jp9MZSStTu2jmThX+k01SrbEJAAAAAAAA+Nmh
aMiL75rexXmq5C31w+ke8ZNOSM7UhnC+MraZR3wC0yiebZMkIWhlXw+m/GCW
SvLHROuLfnZ0rndk47Pw+i/bOTfYoThosdT6S+N4LvFkuhgWo+gVQ4slvy71
03knbPwP/YbCLvGvhpRrijOYTmDVCg8bJeexbpHov3MfhF0WNxXHIO5L9Y+t
7oz0pBZOhIC1cbrQCt/sz2BSMz3Ni5U+dp7jSnl8Y8nssfZQouIUYUpIfP2P
0wp0uUBEGwWfShabExJoC9pIuCdQhC5pZUJ3YobqHXMDduMZzMrvToReOPe0
O8eeQrLxoxkmZSR7Xh3VWx8eWru6iXijRTN1wHqRzSTB1dF04cJ7Ef/n8x3L
wFRzR7o3xMiS4tipbD3r65mkZOl2WllTOaYErUySl78Fhq1CKzO1C+8kgsM4
+SX5aOpAJ5bRhsPM6HqrQzZO3qo2Lt6wjYhOmX1x+KaykfMEsdjuRZXay77k
glkiBqb9GUwL/5n9ENxO1ulKya8QWvzq/VO5k5B0JmplOhet9J/MIfSN/3kf
MwAAAAAAAAAAvjcUtkjRENtd0zfzl2IPBQsYXcnL+5UgPoiREWkL3jFMOoDp
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
ONafnl4tHUh5ipx3rb/OPaEc/oOZ0bd7V60n3dQvdrxMZbwkho1SZ5szzx8n
KI907u32RSt8ihPMNr+VNybpISymiwjE2P+XvJc6xXuxsFtWX0kY3NTxrVJc
mnYT+DwZnnpfqt2InxTMe300nxtopS4PIpgu8WRkfudS+5yImhrVnqaxjeSK
RlmsUdlf4M/pzy3sfj4N3oOpbabG1frEI5YnXHF1Ap0yfiruYGm6Ybtw0Jjf
uSke34vsGPpm6pT1YmS9u6l+/HU40Zt8NLl2XpOv1egYcbQy9vHS6lSmnyrF
jMM2NanO4mnHFLfS6dU6GZkNW6Ff6bSyprFd6pdbXmost1SqbwSYhJJ6nPZa
ZGrpQNOfferlgzyvLDmik388y7erlclmsS15ME2cYWDKWlnwdeGy2fvPrlTK
aMNWT0s9Hn9fuvjD9gxm2H+K+QSglQEAAAAAAAB8KF2YLG0BcBcoL7lrBxbz
Dr3XHCr+EZEuKXioWCTq7wrd2JIHvh+qG3UtoSuhpS3QAAAAAAAAAECw80e2
FzgC0DHKa+knw6uCRMEyTfUmDVtW7GFHFFML553dZnWPYTnwH3x+8jvSyrqy
JQ90ifrHVwPpN8JeOJ4Zr73OzzKzBTegAgAAAAAAAECzXt6aTAYToQPwHeAZ
rnjeobNScV3KAHZrasXJpJit/QemXt4eT3VkP97dchda2U39fCljf/cuuHPo
1mY3ySHPjKdLCxlJ5feRRODCXAAAAAAAAMDPjptJ2/3p8A16AFhQL+++HfMy
TY3MrGvyF7XH9d744MKJ4saBHwjK49T6UdwJ+5D47lpZSbIetpY9FFi6y6yX
FnKqUNSkhYzg69HM4OuPX6M/CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgbf4/8ZqK+g==
    "], {{0, 270.0234020281757}, {981.6850793735456, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{981.6850793735456, 270.0234020281757},
  PlotRange->{{0, 981.6850793735456}, {0, 270.0234020281757}}]], "Input",
 CellID->755622316,ExpressionUUID->"28bc09d8-521b-4cf9-b534-6fd286a3fa99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3. (I) A horizontal force of 310 N is exerted on a 2.0-kg ball as it rotates \
(at arm's length) uniformly in a horizontal circle of radius 900 mm. \
Calculate the speed of the ball.\
\>", "Subsection",
 CellChangeTimes->{{3.8816121850242224`*^9, 3.8816122674196434`*^9}, {
  3.881612338005475*^9, 3.881612352536775*^9}},
 FontFamily->"JetBrains Mono",
 CellID->469011730,ExpressionUUID->"ca64d37d-ad96-4bd0-8a41-b6b2a3ad0f43"],

Cell[CellGroupData[{

Cell["Initial work", "Subsubsection",
 CellChangeTimes->{{3.8816129245166955`*^9, 3.881612926527264*^9}},
 CellID->302402564,ExpressionUUID->"104e8ce4-3a09-44f0-8ef1-c69ef38aafd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881612355396171*^9, 3.881612370985628*^9}},
 CellLabel->"In[102]:=",
 CellID->616551503,ExpressionUUID->"b2a33f2b-ead6-43bc-8219-59aacfd15663"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"F\"", "\"Force\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  FractionBox[
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    SuperscriptBox[
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]}], 
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )]]}]], "Output",
 CellChangeTimes->{3.8816123712981176`*^9},
 CellLabel->"Out[102]=",
 CellID->242244555,ExpressionUUID->"ff658528-25cc-4f76-ace9-32f5ec4703cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], "}"}],
    ",", "\"\<QuantityVariableTable\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.881612355396171*^9, 3.881612398701023*^9}},
 CellLabel->"In[104]:=",
 CellID->513164712,ExpressionUUID->"5df4d1b5-989a-41a0-a770-7c373dada49f"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", "\
\<\"dimensions\"\>"},
     {"\<\"F\"\>", "\<\"centripetal force\"\>", "\<\"Force\"\>", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\<\"TimeUnit\"\>", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
     {"\<\"m\"\>", "\<\"mass\"\>", "\<\"Mass\"\>", 
      RowBox[{"{", 
       RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]},
     {"\<\"r\"\>", "\<\"radius\"\>", "\<\"Radius\"\>", 
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
     {"\<\"v\"\>", "\<\"tangential speed\"\>", "\<\"Speed\"\>", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\<\"TimeUnit\"\>", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.881612398935382*^9},
 CellLabel->"Out[104]=",
 CellID->7889767,ExpressionUUID->"d2b900cc-9f85-4812-9e72-b5838a3b3709"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"FormulaData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
      "}"}], ",", "\"\<Formula\>\""}], "]"}], ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )]}], "]"}]], "Input",
 CellChangeTimes->{{3.881612414359766*^9, 3.8816124404505897`*^9}},
 CellLabel->"In[108]:=",
 CellID->22094146,ExpressionUUID->"e3f6cf70-f7db-46ba-952c-79a289a45e36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         TemplateBox[{"\"F\"", "\"Force\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
            "TextStyling"]& )]], " ", 
        SqrtBox[
         TemplateBox[{"\"r\"", "\"Radius\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
            "TextStyling"]& )]]}], 
       SqrtBox[
        TemplateBox[{"\"m\"", "\"Mass\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
           "TextStyling"]& )]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], "\[Rule]", 
     FractionBox[
      RowBox[{
       SqrtBox[
        TemplateBox[{"\"F\"", "\"Force\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
           "TextStyling"]& )]], " ", 
       SqrtBox[
        TemplateBox[{"\"r\"", "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )]]}], 
      SqrtBox[
       TemplateBox[{"\"m\"", "\"Mass\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
          "TextStyling"]& )]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8816124411537156`*^9},
 CellLabel->"Out[108]=",
 CellID->138865763,ExpressionUUID->"1978f978-ba50-494a-ae60-b75ee2f71e4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"FormulaData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
      "}"}], ",", "\"\<Formula\>\""}], "]"}], ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{},
    "PositiveReals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.881612414359766*^9, 3.881612448813929*^9}},
 CellLabel->"In[109]:=",
 CellID->421867238,ExpressionUUID->"8f9ccfa3-71d2-4a23-92e5-ab12117f6877"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{
      SqrtBox[
       FractionBox[
        RowBox[{
          
          TemplateBox[{"\"F\"", "\"Force\""}, "QuantityVariable", 
           DisplayFunction -> (TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
             "TextStyling"]& )], " ", 
          
          TemplateBox[{"\"r\"", "\"Radius\""}, "QuantityVariable", 
           DisplayFunction -> (TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
             "TextStyling"]& )]}], 
        TemplateBox[{"\"m\"", "\"Mass\""}, "QuantityVariable", 
         DisplayFunction -> (TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
           "TextStyling"]& )]]], 
      RowBox[{
        RowBox[{
          
          TemplateBox[{"\"F\"", "\"Force\""}, "QuantityVariable", 
           DisplayFunction -> (TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
             "TextStyling"]& )], ">", "0"}], "&&", 
        RowBox[{
          
          TemplateBox[{"\"m\"", "\"Mass\""}, "QuantityVariable", 
           DisplayFunction -> (TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
             "TextStyling"]& )], ">", "0"}], "&&", 
        RowBox[{
          
          TemplateBox[{"\"r\"", "\"Radius\""}, "QuantityVariable", 
           DisplayFunction -> (TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
             "TextStyling"]& )], ">", "0"}]}]},
     "ConditionalExpression"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.881612449360794*^9},
 CellLabel->"Out[109]=",
 CellID->455042421,ExpressionUUID->"4631825d-f5f3-4930-b9bb-581ada1aaa68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", ">", "0"}], "&"}], "/@", 
  RowBox[{"FormulaData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
     "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8816124657046165`*^9, 3.8816124804077387`*^9}},
 CellLabel->"In[111]:=",
 CellID->88506436,ExpressionUUID->"98919788-1c3e-44b3-b139-b7e0c6fc6f12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"F\"", "\"Force\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
       "TextStyling"]& )], ">", "0"}], ",", 
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], ">", "0"}], ",", 
   RowBox[{
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], ">", "0"}], ",", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], ">", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8816124758289237`*^9, 3.881612480704601*^9}},
 CellLabel->"Out[111]=",
 CellID->694431784,ExpressionUUID->"f8624951-ab3c-4cfe-aa56-b4e73a912a8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Apply", "[", "And", "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", ">", "0"}], "&"}], "/@", 
   RowBox[{"Most", "[", 
    RowBox[{"FormulaData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
       "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8816124825483694`*^9, 3.8816125196103106`*^9}},
 CellLabel->"In[114]:=",
 CellID->58868773,ExpressionUUID->"9c6b5e4b-416b-4777-821b-f125e5542017"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"\"F\"", "\"Force\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
      "TextStyling"]& )], ">", "0"}], "&&", 
  RowBox[{
   TemplateBox[{"\"m\"", "\"Mass\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
      "TextStyling"]& )], ">", "0"}], "&&", 
  RowBox[{
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )], ">", "0"}]}]], "Output",
 CellChangeTimes->{{3.8816124836577554`*^9, 3.8816125200790424`*^9}},
 CellLabel->"Out[114]=",
 CellID->553381406,ExpressionUUID->"bc3d4e2d-036b-4bd0-a4fa-c8b976b2244b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"FormulaData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
      "}"}], ",", "\"\<Formula\>\""}], "]"}], ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{},
    "PositiveReals"], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"Apply", "[", "And", "]"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], "/@", 
      RowBox[{"Most", "[", 
       RowBox[{"FormulaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
          "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881612414359766*^9, 3.8816124590327196`*^9}, {
  3.881612525204049*^9, 3.881612525938446*^9}},
 CellLabel->"In[115]:=",
 CellID->282328,ExpressionUUID->"fd317f80-43d8-481d-81ec-b5a632acf172"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       TemplateBox[{"\"F\"", "\"Force\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
          "TextStyling"]& )], " ", 
       TemplateBox[{"\"r\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )]}], 
      TemplateBox[{"\"m\"", "\"Mass\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
         "TextStyling"]& )]]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.881612527157447*^9},
 CellLabel->"Out[115]=",
 CellID->488494368,ExpressionUUID->"10affd17-fe34-476f-8d9b-32f5eec27ed3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"substitutionRules", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"F\"", "\"Force\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"m\"", "\"Mass\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"310", "\"N\"", "newtons", "\"Newtons\""},
       "Quantity"], ",", 
      TemplateBox[{"900", "\"mm\"", "millimeters", "\"Millimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"2.`", "\"kg\"", "kilograms", "\"Kilograms\""},
       "Quantity"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.881612548665213*^9, 3.881612616522896*^9}},
 CellLabel->"In[122]:=",
 CellID->408595476,ExpressionUUID->"c9e88a5c-2acd-46e5-8eaa-7bf9e82497f7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"F\"", "\"Force\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"310", "\"N\"", "newtons", "\"Newtons\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"900", "\"mm\"", "millimeters", "\"Millimeters\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"2.`", "\"kg\"", "kilograms", "\"Kilograms\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8816126171791477`*^9},
 CellLabel->"Out[122]=",
 CellID->386394247,ExpressionUUID->"e3074817-589a-4f8e-a56e-9eb066ac7c1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
       "}"}], ",", "\"\<Formula\>\""}], "]"}], ",", 
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], ",", 
    TemplateBox[{},
     "PositiveReals"], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{
      RowBox[{"Apply", "[", "And", "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], "/@", 
       RowBox[{"Most", "[", 
        RowBox[{"FormulaData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}],
            "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]}], 
      "]"}]}]}], "]"}], "/.", "substitutionRules"}]], "Input",
 CellChangeTimes->{{3.881612618897922*^9, 3.8816126419655957`*^9}},
 CellLabel->"In[125]:=",
 CellID->395192145,ExpressionUUID->"da51eefa-93d0-468c-a684-9b25fc49db49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"373.49698793966195`", 
      RowBox[{
        SqrtBox["\"mm\""], "\[InvisibleSpace]", 
        SqrtBox["\"N\""], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SqrtBox["\"kg\""]}], 
      "square root millimeter square root newtons per square root kilogram", 
      FractionBox[
       RowBox[{
         SqrtBox["\"Millimeters\""], " ", 
         SqrtBox["\"Newtons\""]}], 
       SqrtBox["\"Kilograms\""]]},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8816126255654707`*^9, 3.881612642231227*^9}},
 CellLabel->"Out[125]=",
 CellID->148514775,ExpressionUUID->"0caa504d-c33a-4daf-8873-57f706e0e74a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"FormulaData", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
        "}"}], ",", "\"\<Formula\>\""}], "]"}], ",", 
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{},
      "PositiveReals"], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"Apply", "[", "And", "]"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}], "/@", 
        RowBox[{"Most", "[", 
         RowBox[{"FormulaData", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], "}"}],
            ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]}], "]"}]}]}], 
    "]"}], "/.", "substitutionRules"}], "]"}]], "Input",
 CellChangeTimes->{{3.881612645856263*^9, 3.8816126489812536`*^9}},
 CellLabel->"In[126]:=",
 CellID->263206040,ExpressionUUID->"96852588-378b-4819-bcf9-cfe0841d6c96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"11.811011811017718`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.881612649309373*^9},
 CellLabel->"Out[126]=",
 CellID->798619011,ExpressionUUID->"54351f27-2de7-4c2d-bbb9-da192b88252e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{"UnitSimplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"FormulaData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
         "}"}], ",", "\"\<Formula\>\""}], "]"}], ",", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{},
       "PositiveReals"], ",", 
      RowBox[{"Assumptions", "->", 
       RowBox[{
        RowBox[{"Apply", "[", "And", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], "/@", 
         RowBox[{"Most", "[", 
          RowBox[{"FormulaData", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
             "}"}], ",", "\"\<QuantityVariables\>\""}], "]"}], "]"}]}], 
        "]"}]}]}], "]"}], "/.", "substitutionRules"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.881612651202812*^9, 3.8816126527965727`*^9}},
 CellLabel->"In[127]:=",
 CellID->8222612,ExpressionUUID->"efb94e13-70b4-4360-bcb7-3cbafdbf4c30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"11.811011811017718`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.881612653218446*^9},
 CellLabel->"Out[127]=",
 CellID->590391408,ExpressionUUID->"89ebb7a5-791b-43a5-b74e-4d95cbda2561"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes and comments", "Subsubsection",
 CellChangeTimes->{{3.881612937488764*^9, 3.8816129401137686`*^9}},
 CellID->310200589,ExpressionUUID->"8d569d15-b59e-4390-a978-96ab32f28c17"],

Cell[TextData[{
 "I reworded this problem slightly to use millimeters in place of millimeters \
to be in accordance with ",
 ButtonBox["NIST SP 811 Chapter 7 Section 9 Choosing SI Prefixes",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.nist.gov/pml/special-publication-811/nist-guide-si-\
chapter-7-rules-and-style-conventions-expressing-values#79"], None},
  ButtonNote->
   "https://www.nist.gov/pml/special-publication-811/nist-guide-si-chapter-7-\
rules-and-style-conventions-expressing-values#79"],
 ButtonBox[".",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.nist.gov/pml/special-publication-811/nist-guide-si-\
chapter-7-rules-and-style-conventions-expressing-values"], None},
  ButtonNote->
   "https://www.nist.gov/pml/special-publication-811/nist-guide-si-chapter-7-\
rules-and-style-conventions-expressing-values"],
 " The original wording was"
}], "Text",
 CellChangeTimes->{{3.881612941957515*^9, 3.8816130145362883`*^9}, {
  3.881613070451062*^9, 3.881613097218788*^9}},
 CellID->15397758,ExpressionUUID->"377bdd96-6756-49ec-8bb3-5a99d48586b8"],

Cell["\<\
A horizontal force of 310 N is exerted on a 2.0-kg ball as it rotates (at arm\
\[CloseCurlyQuote]s length) uniformly in a horizontal circle of radius 0.90 \
m. Calculate the speed of the ball.\
\>", "Text",
 CellChangeTimes->{{3.881613104140937*^9, 3.8816131128083076`*^9}},
 CellID->111000613,ExpressionUUID->"bcfc1c5f-934b-4a63-8e31-715a72b5e53c"],

Cell["\<\
There is a discrepancy here in that when I say 900 mm I have three \
significant figures but 0.90 m has only two significant figures. I changed \
this to 900 mm even though there was a discrepancy because it realistic to \
measure something to nearest millimeter instead of to the nearest centimeter, \
which is the practice in metric architecture and CAD where all dimensions are \
in millimeters. If this discrepancy is to be avoided, the problem should \
solved with something like 9.0E2 mm. If 3 significant figures were known, as \
is the case for 900 mm, I would write 9.00E2 mm.\
\>", "Text",
 CellChangeTimes->{{3.8816131154326525`*^9, 3.881613294460663*^9}},
 CellID->48370094,ExpressionUUID->"9b0e4ef4-468f-4068-8393-6a8226a065f1"],

Cell[TextData[{
 "There is one other thing with this that I think should be changed which \
instead of saying a 2.0-kg ball, something like a ball of mass 2.0 kg is \
better. This is explained in ",
 ButtonBox["NIST SP 811 Chapter 7 Section 2 Space between numerical value and \
unit symbol",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.nist.gov/pml/special-publication-811/nist-guide-si-\
chapter-7-rules-and-style-conventions-expressing-values#72"], None},
  ButtonNote->
   "https://www.nist.gov/pml/special-publication-811/nist-guide-si-chapter-7-\
rules-and-style-conventions-expressing-values#72"],
 "."
}], "Text",
 CellChangeTimes->{{3.8816132960700655`*^9, 3.881613385655511*^9}},
 CellID->532950141,ExpressionUUID->"6a0c8b42-638d-4c25-bb38-f13dfab0ca15"],

Cell["\<\
In summary, I would revise the question to something like this:\
\>", "Text",
 CellChangeTimes->{{3.881613387858654*^9, 3.881613399701685*^9}},
 CellID->952788274,ExpressionUUID->"43d3eac3-87b5-4169-9644-0e7b6aaf4084"],

Cell["\<\
A horizontal force of 310 N is exerted on a ball of mass 2.0 kg as it rotates \
(at arm\[CloseCurlyQuote]s length) uniformly in a horizontal circle of radius \
900 mm. Calculate the speed of the ball.\
\>", "Text",
 CellChangeTimes->{{3.8816134117398467`*^9, 3.881613424921897*^9}},
 CellID->425974014,ExpressionUUID->"b626bd0b-4fa0-4ed6-8c51-656408e336d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
5. (II) A 0.55-kg ball, attached to the end of a horizontal cord, is revolved \
in a circle of radius 1.3 m on a frictionless horizontal surface. If the cord \
will break when the tension in it exceeds 75 N, what is the maximum speed the \
ball can have?\
\>", "Subsection",
 CellChangeTimes->{{3.881612699325782*^9, 3.881612725312913*^9}, {
  3.8816199338930807`*^9, 3.8816199734327464`*^9}},
 CellID->481610273,ExpressionUUID->"bd6fc047-8784-494d-a329-a1f479e29b38"],

Cell["I will reword this to:", "Text",
 CellChangeTimes->{{3.881620035711435*^9, 3.8816200394770613`*^9}},
 CellID->733354051,ExpressionUUID->"504c3028-6cf7-41e5-9585-d7610613ac7e"],

Cell["\<\
A ball of mass 550g, attached to the end of a horizontal cord, is revolved in \
a circle of radius 1.3 m on a frictionless horizontal surface. If the cord \
will break when the tension in it exceeds 75 N, what is the maximum speed the \
ball can have?\
\>", "Text",
 CellChangeTimes->{{3.8816200461862116`*^9, 3.8816200543460255`*^9}},
 CellID->222683407,ExpressionUUID->"5fc1aa5c-613b-4242-a66e-404235047e47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"substitutionRules", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"m\"", "\"Mass\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"F\"", "\"Force\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"550", "\"g\"", "grams", "\"Grams\""},
       "Quantity"], ",", 
      TemplateBox[{"1.3`", "\"m\"", "meters", "\"Meters\""},
       "Quantity"], ",", 
      TemplateBox[{"75", "\"N\"", "newtons", "\"Newtons\""},
       "Quantity"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8816199999420004`*^9, 3.8816200856386623`*^9}},
 CellLabel->"In[180]:=",
 CellID->27925776,ExpressionUUID->"3d34ce51-4887-4ce9-a1bd-cba24cacd04f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"550", "\"g\"", "grams", "\"Grams\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"1.3`", "\"m\"", "meters", "\"Meters\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"F\"", "\"Force\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"75", "\"N\"", "newtons", "\"Newtons\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8816200870076246`*^9},
 CellLabel->"Out[180]=",
 CellID->488700563,ExpressionUUID->"f00f1c90-e439-44fd-b2ae-cd5a11f218ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FormulaData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
     "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", 
  "substitutionRules"}]], "Input",
 CellChangeTimes->{{3.8816199743902817`*^9, 3.881619993332643*^9}, {
  3.881620090257627*^9, 3.881620096485397*^9}},
 CellLabel->"In[181]:=",
 CellID->178732759,ExpressionUUID->"4c48732d-b271-4396-93de-18596d5da1db"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"75", "\"N\"", "newtons", "\"Newtons\""},
   "Quantity"], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    TemplateBox[{"423.07692307692304`", 
      RowBox[{
       "\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"m\""}], 
      "grams per meter", 
      FractionBox["\"Grams\"", "\"Meters\""]},
     "Quantity"], ")"}], " ", 
   SuperscriptBox[
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "2"]}]}]], "Output",
 CellChangeTimes->{3.8816200967822676`*^9},
 CellLabel->"Out[181]=",
 CellID->186462973,ExpressionUUID->"89ddc45c-600e-47c8-af5e-002dea4b15f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
       "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", "substitutionRules"}], 
   ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{},
    "PositiveReals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.881620098563512*^9, 3.8816201144879527`*^9}},
 CellLabel->"In[183]:=",
 CellID->356690338,ExpressionUUID->"b6b246b6-cf0f-491a-948a-0cbae82bfe71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"13.314380468978918`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8816201150973377`*^9},
 CellLabel->"Out[183]=",
 CellID->53938758,ExpressionUUID->"36fbd680-028f-44a6-af73-d19c638d5645"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"v\"", "\"Velocity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
        "TextStyling"]& )], "==", 
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )]}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FormulaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
          "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", "substitutionRules"}],
       ",", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{},
       "PositiveReals"]}], "]"}]}], ",", 
   SuperscriptBox["10", 
    RowBox[{"-", "12"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8816201171285768`*^9, 3.8816201517571845`*^9}, {
  3.8816202168399496`*^9, 3.8816202208818398`*^9}},
 CellLabel->"In[190]:=",
 CellID->486450643,ExpressionUUID->"65ff9407-95cf-465c-a7de-f208d025b531"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{
     FractionBox["4608866", "346157"], 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8816201531634264`*^9, 3.881620221326475*^9},
 CellLabel->"Out[190]=",
 CellID->1039887709,ExpressionUUID->"795429b4-a2e7-4927-8eb8-d5d51cbd177b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Rationalize", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      TemplateBox[{"\"v\"", "\"Velocity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
         "TextStyling"]& )], "==", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )]}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulaData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}],
            "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", 
        "substitutionRules"}], ",", 
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], ",", 
       TemplateBox[{},
        "PositiveReals"]}], "]"}]}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "12"}]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.881620237590782*^9, 3.8816202379814143`*^9}},
 CellLabel->"In[193]:=",
 CellID->68925169,ExpressionUUID->"d7988c34-551a-4e19-9823-fd3de0bc3d72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{"13.31438046897795`", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.88162023837202*^9},
 CellLabel->"Out[193]=",
 CellID->34731986,ExpressionUUID->"fb977762-7423-4d51-a433-dd223c9d2a54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"v\"", "\"Velocity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
        "TextStyling"]& )], "==", 
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )]}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FormulaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
          "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", "substitutionRules"}],
       ",", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{},
       "PositiveReals"]}], "]"}]}], ",", 
   SuperscriptBox["10", 
    RowBox[{"-", "18"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8816201171285768`*^9, 3.8816201517571845`*^9}, {
  3.8816202168399496`*^9, 3.8816202290315704`*^9}},
 CellLabel->"In[191]:=",
 CellID->223044631,ExpressionUUID->"08a5148d-58fc-4f7c-b996-5e20f06428fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{
     FractionBox["436898813", "32814055"], 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8816202294640627`*^9},
 CellLabel->"Out[191]=",
 CellID->404274715,ExpressionUUID->"b5171f39-7575-44b8-ab68-9e7ac1e0a3ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Rationalize", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      TemplateBox[{"\"v\"", "\"Velocity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
         "TextStyling"]& )], "==", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )]}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulaData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}],
            "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", 
        "substitutionRules"}], ",", 
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], ",", 
       TemplateBox[{},
        "PositiveReals"]}], "]"}]}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8816202336845155`*^9, 3.881620234278263*^9}},
 CellLabel->"In[192]:=",
 CellID->225575827,ExpressionUUID->"538b3f24-388d-46d9-a539-2f8db9a31458"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{"13.314380468978918`", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8816202347001305`*^9},
 CellLabel->"Out[192]=",
 CellID->150481278,ExpressionUUID->"cf0b4e03-b513-4bf4-9693-1fd018ab564f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
49. (II) Calculate the period of a satellite orbiting the Moon 95 km above \
the Moon's surface. Ignore effects of the Earth. The radius of the Moon is \
1740 km.\
\>", "Subsection",
 CellChangeTimes->{{3.881612699325782*^9, 3.881612725312913*^9}, {
  3.8816199338930807`*^9, 3.8816199734327464`*^9}, {3.8816202927112675`*^9, 
  3.881620322161101*^9}},
 CellID->35064338,ExpressionUUID->"3dd02d54-e846-4637-bff2-0d4121de84da"],

Cell["I will reword this to:", "Text",
 CellChangeTimes->{{3.881620035711435*^9, 3.8816200394770613`*^9}},
 CellID->89811106,ExpressionUUID->"975216cc-3411-4371-972e-24f56e91c6bc"],

Cell["\<\
I) Calculate the period of a satellite orbiting the Moon 95 km above the Moon\
\[CloseCurlyQuote]s surface. Ignore effects of the Earth. The radius of the \
Moon is 1.740 Mm.\
\>", "Text",
 CellChangeTimes->{{3.8816200461862116`*^9, 3.8816200543460255`*^9}, {
  3.8816203280528994`*^9, 3.8816203341530895`*^9}},
 CellID->186926570,ExpressionUUID->"8b23e39a-59a6-4751-b415-f6704a2def32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaLookup", "[", "\"\<Mechanics\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8816203419840126`*^9, 3.881620352052372*^9}},
 CellLabel->"In[194]:=",
 CellID->700969104,ExpressionUUID->"49ace90c-d57d-4562-bb33-095fe806dbb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"HollowCylinderMechanicalStress\"\>", 
   ",", "\<\"LeverMechanicalAdvantage\"\>", ",", "\<\"MechanicalStress\"\>", 
   ",", "\<\"PulleySystemMechanicalAdvantage\"\>", 
   ",", "\<\"WheelAndAxleMechanicalAdvantage\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CylinderMechanicalStress\"\>", ",", "\<\"Diameter\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CylinderMechanicalStress\"\>", ",", "\<\"Radius\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"InclinedPlaneMechanicalAdvantage\"\>", 
     ",", "\<\"LengthHeight\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"InclinedPlaneMechanicalAdvantage\"\>", 
     ",", "\<\"Slope\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ScrewMechanicalAdvantage\"\>", ",", "\<\"Lead\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ScrewMechanicalAdvantage\"\>", ",", "\<\"LeadAngle\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WedgeMechanicalAdvantage\"\>", ",", "\<\"Angle\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WedgeMechanicalAdvantage\"\>", 
     ",", "\<\"LengthThickness\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MechanicalPower\"\>", ",", "\<\"Force\"\>", 
     ",", "\<\"Speed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MechanicalPower\"\>", ",", "\<\"Work\"\>", 
     ",", "\<\"Time\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MechanicalPower\"\>", ",", "\<\"Force\"\>", 
     ",", "\<\"Speed\"\>", ",", "\<\"Angle\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8816203544742546`*^9},
 CellLabel->"Out[194]=",
 CellID->47966404,ExpressionUUID->"5e29555c-51ad-4e60-b23a-7a7f4b375aa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{"\"\<StefanBoltzmannLaw\>\"", ",", "\"\<Classes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8816203419840126`*^9, 3.8816203900057263`*^9}},
 CellLabel->"In[197]:=",
 CellID->865863297,ExpressionUUID->"73c44ea1-9458-4bc5-a628-1a549fed1a9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Physics\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Physics\"\>", ",", "\<\"Thermodynamics\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8816203675080595`*^9, 3.881620390427582*^9}},
 CellLabel->"Out[197]=",
 CellID->3439827,ExpressionUUID->"b6ccb670-64e0-4b87-9721-3397bfad6246"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", 
  RowBox[{"\"\<LuminosityEnergy\>\"", ",", "\"\<Classes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8816203419840126`*^9, 3.881620401453025*^9}},
 CellLabel->"In[198]:=",
 CellID->74842701,ExpressionUUID->"29598cb2-94b6-4c0b-af12-1e149597a013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Space\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Space\"\>", ",", "\<\"Astronomy\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8816204016874304`*^9},
 CellLabel->"Out[198]=",
 CellID->4835052,ExpressionUUID->"e11e6e63-a3c8-4987-a7c5-4e92f50fc9b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaLookup", "[", "\"\<Space\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.881620403774279*^9, 3.8816204080815187`*^9}},
 CellLabel->"In[199]:=",
 CellID->426838715,ExpressionUUID->"293ed9fe-f2d9-4ac5-8177-03c23f010097"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ApparentMagnitudeIntensity\"\>", 
   ",", "\<\"DistanceModulus\"\>", ",", "\<\"DrakeEquation\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JeansLength\"\>", ",", "\<\"SoundSpeed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JeansLength\"\>", ",", "\<\"Temperature\"\>", 
     ",", "\<\"MeanMass\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JeansMass\"\>", ",", "\<\"SoundSpeed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JeansMass\"\>", ",", "\<\"Temperature\"\>", 
     ",", "\<\"MeanMass\"\>"}], "}"}], 
   ",", "\<\"LuminosityAbsoluteMagnitude\"\>", 
   ",", "\<\"LuminosityApparentMagnitudeDistance\"\>", 
   ",", "\<\"LuminosityDistance\"\>", ",", "\<\"LuminosityEnergy\"\>", 
   ",", "\<\"MassLuminosityRelationship\"\>", ",", "\<\"ParallaxDistance\"\>",
    ",", "\<\"SeagerEquation\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEntropy\"\>", ",", "\<\"Standard\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEntropy\"\>", ",", "\<\"Charge\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEntropy\"\>", ",", "\<\"Charge\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEntropy\"\>", ",", "\<\"AngularMomentum\"\>"}], 
    "}"}], ",", "\<\"BlackHoleHawkingRadiationPower\"\>", 
   ",", "\<\"BlackHoleLifetime\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleSurfaceGravity\"\>", ",", "\<\"Standard\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleSurfaceGravity\"\>", ",", "\<\"Charge\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleSurfaceGravity\"\>", ",", "\<\"Charge\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleSurfaceGravity\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleTemperature\"\>", ",", "\<\"Standard\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleTemperature\"\>", ",", "\<\"Charge\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleTemperature\"\>", ",", "\<\"Charge\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleTemperature\"\>", ",", "\<\"AngularMomentum\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonRadius\"\>", ",", "\<\"Standard\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonRadius\"\>", ",", "\<\"Charge\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonRadius\"\>", ",", "\<\"Charge\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonRadius\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonArea\"\>", ",", "\<\"Standard\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonArea\"\>", ",", "\<\"Charge\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonArea\"\>", ",", "\<\"Charge\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackHoleEventHorizonArea\"\>", 
     ",", "\<\"AngularMomentum\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RedshiftWavelength\"\>", ",", "\<\"Wavelength\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RedshiftWavelength\"\>", ",", "\<\"Frequency\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CircularOrbitSpeed\"\>", ",", "\<\"OrbitRadius\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CircularOrbitSpeed\"\>", ",", "\<\"Altitude\"\>"}], "}"}], 
   ",", "\<\"EarthCircularOrbitPeriod\"\>", 
   ",", "\<\"EllipticOrbitFormula\"\>", ",", "\<\"EscapeVelocity\"\>", 
   ",", "\<\"HohmannAngularAlignment\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannEntranceDeltaV\"\>", ",", "\<\"Mass\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannEntranceDeltaV\"\>", 
     ",", "\<\"GravitationalParameter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannExitDeltaV\"\>", ",", "\<\"Mass\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannExitDeltaV\"\>", 
     ",", "\<\"GravitationalParameter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannTotalDeltaV\"\>", ",", "\<\"Mass\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannTotalDeltaV\"\>", 
     ",", "\<\"GravitationalParameter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannTransferTime\"\>", ",", "\<\"OrbitalRadii\"\>", 
     ",", "\<\"Mass\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannTransferTime\"\>", ",", "\<\"OrbitalRadii\"\>", 
     ",", "\<\"GravitationalParameter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannTransferTime\"\>", ",", "\<\"SemimajorAxis\"\>", 
     ",", "\<\"Mass\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HohmannTransferTime\"\>", ",", "\<\"SemimajorAxis\"\>", 
     ",", "\<\"GravitationalParameter\"\>"}], "}"}], 
   ",", "\<\"KeplersFirstLaw\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KeplersThirdLaw\"\>", ",", "\<\"Sun\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KeplersThirdLaw\"\>", ",", "\<\"SingleMass\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KeplersThirdLaw\"\>", ",", "\<\"Masses\"\>"}], "}"}], 
   ",", "\<\"RocketEquation\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VisViva\"\>", ",", "\<\"Mass\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VisViva\"\>", ",", "\<\"GravitationalParameter\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BussardRamjet\"\>", ",", "\<\"PhotonDrive\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BussardRamjet\"\>", ",", "\<\"MatterDrive\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackbodyLuminosity\"\>", ",", "\<\"Radius\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BlackbodyLuminosity\"\>", ",", "\<\"Diameter\"\>"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.881620408409671*^9},
 CellLabel->"Out[199]=",
 CellID->390124170,ExpressionUUID->"bc4fee39-3299-4d3b-855b-adddfd8b92a5"]
}, Closed]],

Cell[BoxData[
 RowBox[{"FormulaData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.88162041097215*^9, 3.8816204137157507`*^9}},
 CellID->18310671,ExpressionUUID->"1c69ee69-1292-4909-ad6c-e95a3f75aaaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Moon\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
    "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", "\"planetary moon\""},
   "Entity"], "[", "\"\<Mass\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.881620494178564*^9, 3.8816205018900385`*^9}},
 CellLabel->"In[201]:=",
 CellID->62237398,ExpressionUUID->"53c24add-256d-4056-8192-93355740ab3b"],

Cell[BoxData[
 TemplateBox[{
  "7.3459006322855173653772`4.995678626217362*^22", "\"kg\"", "kilograms", 
   "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.881620502671279*^9},
 CellLabel->"Out[201]=",
 CellID->301186560,ExpressionUUID->"6b2a5705-48e6-494b-94d3-2c8f2774537c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"gravitational constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalConstant\"", ",", "\"GravitationalConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalConstant\\\", \\\"GravitationalConstant\
\\\"]\"", "\"physical constant\""},
      "Entity"], 
     FractionBox[
      RowBox[{"(", 
       TemplateBox[{"\"m\"", "\"Mass\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
          "TextStyling"]& )], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         TemplateBox[{"\"h\"", "\"Height\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
            "TextStyling"]& )], "+", 
         RowBox[{
          TemplateBox[{"\"Moon\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
            "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", 
            "\"planetary moon\""},
           "Entity"], "[", "\"\<Radius\>\"", "]"}]}], ")"}], "2"]]}], "==", 
    RowBox[{
     TemplateBox[{"\"m\"", "\"Mass\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
        "TextStyling"]& )], " ", 
     FractionBox[
      SuperscriptBox[
       TemplateBox[{
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"\"(\"", 
                 
                 TemplateBox[{"\"h\"", "\"Height\""}, "QuantityVariable", 
                  DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
                    "TextStyling"]& )]}], "+", 
               RowBox[{
                 TemplateBox[{"\"Moon\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
                   "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", 
                   "\"planetary moon\""}, "Entity"], "[", 
                 "\:f3b5Radius\:f3b5", "]"}]}], ")"}], "\:f3b5\:f3b5"}], 
         "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"\"h\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )], "+", 
        RowBox[{
         TemplateBox[{"\"Moon\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
           "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", 
           "\"planetary moon\""},
          "Entity"], "[", "\"\<Radius\>\"", "]"}]}], ")"}]]}]}], ","}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881620511307885*^9, 3.881620615787979*^9}},
 CellID->50671645,ExpressionUUID->"b27d810a-ead4-408a-b156-7963ec3bdfe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"substitutionRules", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"m\"", "\"Mass\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"F\"", "\"Force\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"550", "\"g\"", "grams", "\"Grams\""},
       "Quantity"], ",", 
      TemplateBox[{"1.3`", "\"m\"", "meters", "\"Meters\""},
       "Quantity"], ",", 
      TemplateBox[{"75", "\"N\"", "newtons", "\"Newtons\""},
       "Quantity"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8816199999420004`*^9, 3.8816200856386623`*^9}},
 CellLabel->"In[180]:=",
 CellID->563812493,ExpressionUUID->"bde72998-e77a-40e4-bb9b-6fa1bbd7c549"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"550", "\"g\"", "grams", "\"Grams\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"1.3`", "\"m\"", "meters", "\"Meters\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"F\"", "\"Force\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " force"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"75", "\"N\"", "newtons", "\"Newtons\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8816200870076246`*^9},
 CellLabel->"Out[180]=",
 CellID->567321252,ExpressionUUID->"f95aa01b-712a-4e48-8163-7e48787c3043"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FormulaData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
     "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", 
  "substitutionRules"}]], "Input",
 CellChangeTimes->{{3.8816199743902817`*^9, 3.881619993332643*^9}, {
  3.881620090257627*^9, 3.881620096485397*^9}},
 CellLabel->"In[181]:=",
 CellID->24885021,ExpressionUUID->"20e42f27-18e0-4f8e-b8b4-d3e22a746b0b"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"75", "\"N\"", "newtons", "\"Newtons\""},
   "Quantity"], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    TemplateBox[{"423.07692307692304`", 
      RowBox[{
       "\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"m\""}], 
      "grams per meter", 
      FractionBox["\"Grams\"", "\"Meters\""]},
     "Quantity"], ")"}], " ", 
   SuperscriptBox[
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "2"]}]}]], "Output",
 CellChangeTimes->{3.8816200967822676`*^9},
 CellLabel->"Out[181]=",
 CellID->74900162,ExpressionUUID->"fd450ca1-cceb-4d11-a5ef-b2ab97229c1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
       "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", "substitutionRules"}], 
   ",", 
   TemplateBox[{"\"v\"", "\"Speed\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{},
    "PositiveReals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.881620098563512*^9, 3.8816201144879527`*^9}},
 CellLabel->"In[183]:=",
 CellID->332312475,ExpressionUUID->"fd38d878-1892-4924-8eeb-e5e130f02c2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"v\"", "\"Speed\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"13.314380468978918`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8816201150973377`*^9},
 CellLabel->"Out[183]=",
 CellID->411423240,ExpressionUUID->"7e66b80d-39f0-4d56-b58c-84816b2fa915"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"v\"", "\"Velocity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
        "TextStyling"]& )], "==", 
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )]}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FormulaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
          "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", "substitutionRules"}],
       ",", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{},
       "PositiveReals"]}], "]"}]}], ",", 
   SuperscriptBox["10", 
    RowBox[{"-", "12"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8816201171285768`*^9, 3.8816201517571845`*^9}, {
  3.8816202168399496`*^9, 3.8816202208818398`*^9}},
 CellLabel->"In[190]:=",
 CellID->529367812,ExpressionUUID->"bc9412af-e468-43f9-a61e-0102bd6d43a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{
     FractionBox["4608866", "346157"], 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8816201531634264`*^9, 3.881620221326475*^9},
 CellLabel->"Out[190]=",
 CellID->489978164,ExpressionUUID->"9e17fba3-1180-4156-8af4-7a9697589ae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Rationalize", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      TemplateBox[{"\"v\"", "\"Velocity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
         "TextStyling"]& )], "==", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )]}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulaData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}],
            "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", 
        "substitutionRules"}], ",", 
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], ",", 
       TemplateBox[{},
        "PositiveReals"]}], "]"}]}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "12"}]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.881620237590782*^9, 3.8816202379814143`*^9}},
 CellLabel->"In[193]:=",
 CellID->213558705,ExpressionUUID->"65e6dfa7-29bb-43ab-89cd-a7e92de23fcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{"13.31438046897795`", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.88162023837202*^9},
 CellLabel->"Out[193]=",
 CellID->412668264,ExpressionUUID->"a96fce06-ceb4-4d65-b535-2b09805d930f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"v\"", "\"Velocity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
        "TextStyling"]& )], "==", 
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )]}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FormulaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}], 
          "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", "substitutionRules"}],
       ",", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{},
       "PositiveReals"]}], "]"}]}], ",", 
   SuperscriptBox["10", 
    RowBox[{"-", "18"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8816201171285768`*^9, 3.8816201517571845`*^9}, {
  3.8816202168399496`*^9, 3.8816202290315704`*^9}},
 CellLabel->"In[191]:=",
 CellID->814167080,ExpressionUUID->"81ac258c-bf97-4bdc-9820-40552834411c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{
     FractionBox["436898813", "32814055"], 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8816202294640627`*^9},
 CellLabel->"Out[191]=",
 CellID->910236428,ExpressionUUID->"8a7195cb-c055-44eb-acdd-5bef280063b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Rationalize", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      TemplateBox[{"\"v\"", "\"Velocity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
         "TextStyling"]& )], "==", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )]}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulaData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<CentripetalForce\>\"", ",", "\"\<RotationSpeed\>\""}],
            "}"}], ",", "\"\<Formula\>\""}], "]"}], "/.", 
        "substitutionRules"}], ",", 
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], ",", 
       TemplateBox[{},
        "PositiveReals"]}], "]"}]}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8816202336845155`*^9, 3.881620234278263*^9}},
 CellLabel->"In[192]:=",
 CellID->461084166,ExpressionUUID->"af675fba-dd5f-4795-aa41-2cf0f3ceaf1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"v\"", "\"Velocity\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " velocity"}], TooltipStyle -> 
      "TextStyling"]& )], "\[Equal]", 
   TemplateBox[{"13.314380468978918`", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meters per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8816202347001305`*^9},
 CellLabel->"Out[192]=",
 CellID->327260190,ExpressionUUID->"aaa59a96-4e2b-454a-be82-f14430108929"]
}, Open  ]],

Cell["The gravitational constant G:", "Text",
 CellChangeTimes->{{3.8816604560771613`*^9, 3.881660459762129*^9}},
 CellID->322552742,ExpressionUUID->"34f34fce-71be-45bc-9b56-d8c25e7b8c91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteMissing", "[", 
  RowBox[{
   TemplateBox[{"\"gravitational constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalConstant\"", ",", "\"GravitationalConstant\""}], 
       "]"}], "\"Entity[\\\"PhysicalConstant\\\", \\\"GravitationalConstant\\\
\"]\"", "\"physical constant\""},
    "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8816604523621287`*^9, 3.8816604806696396`*^9}, {
  3.881660528398507*^9, 3.881660534247965*^9}},
 CellLabel->"In[213]:=",
 CellID->260442654,ExpressionUUID->"47781a27-9db0-4d8f-84e2-2c3282e4cc64"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviation code\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"AbbreviationCode\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"AbbreviationCode\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"bg\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"ASCII description\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"ASCIIDescription\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"ASCIIDescription\\\"]\""},
     "EntityProperty"], 
    "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"CODATA constants\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"CODATA\""}], "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \\\"CODATA\\\"]\"", 
        "\"physical constants\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"cosmological constants\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"Cosmological\""}], "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \\\"Cosmological\\\"]\"", 
        "\"physical constants\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"gravitational constants\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"Gravitational\""}], "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \\\"Gravitational\\\"]\"", 
        "\"physical constants\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"Wolfram legacy package\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"WolframLegacyPackage\""}], 
          "]"}], "\"EntityClass[\\\"PhysicalConstant\\\", \
\\\"WolframLegacyPackage\\\"]\"", "\"physical constants\""},
       "EntityClass"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"conjectured value association\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PhysicalConstant\"", ",", "\"ConjecturedValueAssociation\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"ConjecturedValueAssociation\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Fuerth1929\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"F\[UDoubleDot]rth\"\>"}], 
         ",", 
         RowBox[{"\<\"DOI\"\>", "\[Rule]", "\<\"10.1007/BF01340273\"\>"}], 
         ",", 
         RowBox[{"\<\"ExternalLink\"\>", 
          "\[Rule]", \
"\<\"https://link.springer.com/article/10.1007/BF01340273\"\>"}], ",", 
         RowBox[{"\<\"Source\"\>", "\[Rule]", 
          RowBox[{"{", 
           
           RowBox[{"\<\"Alexander Kritov.   A New Large Number Numerical \
Coincidences.  PROGRESS IN PHYSICS, Volume 2, 25-28, 2013.\"\>", 
            ",", "\<\"R. F\[UDoubleDot]rth  ''\[CapitalUDoubleDot]ber einen \
Zusammenhang zwischen quantenmechanischer Unsc\[ADoubleDot]arfe und Struktur \
der Elementarteilchen und seine hierauf begr\[UDoubleDot]ndete Berechnung der \
Massen von Proton und Elektron,'' Zeitschrift f\[UDoubleDot]r Physik 57 \
(1929), 429--446.\"\>"}], "}"}]}], ",", 
         RowBox[{"\<\"Authors\"\>", "\[Rule]", 
          RowBox[{"{", "\<\"ReinholdFuerth\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          
          TemplateBox[{
           "1.74140606405375631288554949084099`8.610984828865769*^-45", 
            RowBox[{"\"\[HBar]\"", "\[ThinSpace]", 
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
              SubsuperscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"e\"", Italic, StripOnInput -> False], "2"]}], 
            "reduced Planck constant speed of light per electron mass \
squared", 
            FractionBox[
             RowBox[{"\"ReducedPlanckConstant\"", " ", "\"SpeedOfLight\""}], 
             SuperscriptBox["\"ElectronMass\"", "2"]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"Year\"\>", "\[Rule]", "1929"}]}], "}"}]}], ",", 
      RowBox[{"\<\"Good1970a\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Good\"\>"}], ",", 
         RowBox[{"\<\"DOI\"\>", 
          "\[Rule]", "\<\"10.1016/0375-9601(70)90843-1\"\>"}], ",", 
         RowBox[{"\<\"ExternalLink\"\>", 
          "\[Rule]", \
"\<\"http://www.sciencedirect.com/science/article/pii/0375960170908431\"\>"}],
          ",", 
         RowBox[{"\<\"Source\"\>", "\[Rule]", 
          RowBox[{
          "{", "\<\"Good, I.J.  The proton and neutron masses and a \
conjecture for the gravitational constant. Physics Letters 33A, 383-384, \
1970.\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Authors\"\>", "\[Rule]", 
          RowBox[{"{", "\<\"IJGood\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{
            
            RowBox[{"742152508482333333658670581797279093878779454435134458830\
374627054384976137819329710991160696038985158454890752258637548762597143650054\
931640625", "/", 
              RowBox[{"(", 
                
                RowBox[{
                 "103289995123476343586236766880120474973188231713168940513226\
37426162590488067364778518581413120551325743612687890989973504", " ", 
                  SuperscriptBox["\[Pi]", "136"]}], ")"}]}], 
            RowBox[{"\"\[HBar]\"", "\[ThinSpace]", 
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
              SubsuperscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"e\"", Italic, StripOnInput -> False], "2"]}], 
            "reduced Planck constant speed of light per electron mass \
squared", 
            FractionBox[
             RowBox[{"\"ReducedPlanckConstant\"", " ", "\"SpeedOfLight\""}], 
             SuperscriptBox["\"ElectronMass\"", "2"]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"Year\"\>", "\[Rule]", "1970"}]}], "}"}]}], ",", 
      RowBox[{"\<\"Good1970b\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Good\"\>"}], ",", 
         RowBox[{"\<\"DOI\"\>", 
          "\[Rule]", "\<\"10.1016/0375-9601(70)90843-1\"\>"}], ",", 
         RowBox[{"\<\"ExternalLink\"\>", 
          "\[Rule]", \
"\<\"http://www.sciencedirect.com/science/article/pii/0375960170908431\"\>"}],
          ",", 
         RowBox[{"\<\"Source\"\>", "\[Rule]", 
          RowBox[{
          "{", "\<\"Good, I.J.  The proton and neutron masses and a \
conjecture for the gravitational constant. Physics Letters 33A, 383-384, \
1970.\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Authors\"\>", "\[Rule]", 
          RowBox[{"{", "\<\"IJGood\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"9.327156560956508911960954181`8.51393796023821*^-50", 
            RowBox[{"\"\[HBar]\"", "\[ThinSpace]", 
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
              SuperscriptBox["\"\[Alpha]\"", "2"], "\[InvisibleSpace]", 
              SubsuperscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"e\"", Italic, StripOnInput -> False], "2"], 
              "\[InvisibleSpace]", "\")\""}], 
            "reduced Planck constant speed of light per fine structure \
constant squared electron mass squared", 
            FractionBox[
             RowBox[{"\"ReducedPlanckConstant\"", " ", "\"SpeedOfLight\""}], 
             RowBox[{
               SuperscriptBox["\"ElectronMass\"", "2"], " ", 
               SuperscriptBox["\"FineStructureConstant\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"Year\"\>", "\[Rule]", "1970"}]}], "}"}]}], ",", 
      RowBox[{"\<\"Kritov2013\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Kritov\"\>"}], ",", 
         RowBox[{"\<\"DOI\"\>", "\[Rule]", 
          RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
         RowBox[{"\<\"ExternalLink\"\>", 
          "\[Rule]", "\<\"http://www.ptep-online.com/2013/PP-33-07.PDF\"\>"}],
          ",", 
         RowBox[{"\<\"Source\"\>", "\[Rule]", 
          RowBox[{
          "{", "\<\"Alexander Kritov.   A New Large Number Numerical \
Coincidences.  PROGRESS IN PHYSICS, Volume 2, 25-28, 2013.\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Authors\"\>", "\[Rule]", 
          RowBox[{"{", "\<\"AlexanderKritov\"\>", "}"}]}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{
            FractionBox["3", 
             
             RowBox[{"27222589353675077077069968594541456916480", " ", 
               "\[Pi]"}]], 
            RowBox[{
              SuperscriptBox[
               StyleBox["\"e\"", Italic, StripOnInput -> False], "2"], 
              "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
              SubscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"e\"", Italic, StripOnInput -> False]], 
              "\[ThinSpace]", 
              SubscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"p\"", Italic, StripOnInput -> False]], 
              "\[ThinSpace]", 
              SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "\[InvisibleSpace]", 
              "\")\""}], 
            "elementary charges squared per electron mass proton mass \
electric constant", 
            FractionBox[
             SuperscriptBox["\"ElementaryCharge\"", "2"], 
             
             RowBox[{"\"ElectricConstant\"", " ", "\"ElectronMass\"", " ", 
               "\"ProtonMass\""}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"Year\"\>", "\[Rule]", "2013"}]}], "}"}]}]}], "}"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"conjectured values\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"ConjecturedValues\""}], "]"}],
       "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"ConjecturedValues\\\"]\
\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "1.74140606405375631288554949084099`8.610984828865769*^-45", 
        RowBox[{"\"\[HBar]\"", "\[ThinSpace]", 
          StyleBox["\"c\"", Italic, StripOnInput -> False], 
          "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          SubsuperscriptBox[
           StyleBox["\"m\"", Italic, StripOnInput -> False], 
           StyleBox["\"e\"", Italic, StripOnInput -> False], "2"]}], 
        "reduced Planck constant speed of light per electron mass squared", 
        FractionBox[
         RowBox[{"\"ReducedPlanckConstant\"", " ", "\"SpeedOfLight\""}], 
         SuperscriptBox["\"ElectronMass\"", "2"]]},
       "Quantity"], ",", 
      TemplateBox[{
        RowBox[{
         "74215250848233333365867058179727909387877945443513445883037462705438\
4976137819329710991160696038985158454890752258637548762597143650054931640625",
           "/", 
          RowBox[{"(", 
            
            RowBox[{"103289995123476343586236766880120474973188231713168940513\
22637426162590488067364778518581413120551325743612687890989973504", " ", 
              SuperscriptBox["\[Pi]", "136"]}], ")"}]}], 
        RowBox[{"\"\[HBar]\"", "\[ThinSpace]", 
          StyleBox["\"c\"", Italic, StripOnInput -> False], 
          "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          SubsuperscriptBox[
           StyleBox["\"m\"", Italic, StripOnInput -> False], 
           StyleBox["\"e\"", Italic, StripOnInput -> False], "2"]}], 
        "reduced Planck constant speed of light per electron mass squared", 
        FractionBox[
         RowBox[{"\"ReducedPlanckConstant\"", " ", "\"SpeedOfLight\""}], 
         SuperscriptBox["\"ElectronMass\"", "2"]]},
       "Quantity"], ",", 
      TemplateBox[{"9.327156560956508911960954181`8.51393796023821*^-50", 
        RowBox[{"\"\[HBar]\"", "\[ThinSpace]", 
          StyleBox["\"c\"", Italic, StripOnInput -> False], 
          "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
          SuperscriptBox["\"\[Alpha]\"", "2"], "\[InvisibleSpace]", 
          SubsuperscriptBox[
           StyleBox["\"m\"", Italic, StripOnInput -> False], 
           StyleBox["\"e\"", Italic, StripOnInput -> False], "2"], 
          "\[InvisibleSpace]", "\")\""}], 
        "reduced Planck constant speed of light per fine structure constant \
squared electron mass squared", 
        FractionBox[
         RowBox[{"\"ReducedPlanckConstant\"", " ", "\"SpeedOfLight\""}], 
         RowBox[{
           SuperscriptBox["\"ElectronMass\"", "2"], " ", 
           SuperscriptBox["\"FineStructureConstant\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{
        FractionBox["3", 
         RowBox[{"27222589353675077077069968594541456916480", " ", "\[Pi]"}]], 
        RowBox[{
          SuperscriptBox[
           StyleBox["\"e\"", Italic, StripOnInput -> False], "2"], 
          "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
          SubscriptBox[
           StyleBox["\"m\"", Italic, StripOnInput -> False], 
           StyleBox["\"e\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
          SubscriptBox[
           StyleBox["\"m\"", Italic, StripOnInput -> False], 
           StyleBox["\"p\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
          SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "\[InvisibleSpace]", 
          "\")\""}], 
        "elementary charges squared per electron mass proton mass electric \
constant", 
        FractionBox[
         SuperscriptBox["\"ElementaryCharge\"", "2"], 
         RowBox[{
          "\"ElectricConstant\"", " ", "\"ElectronMass\"", " ", 
           "\"ProtonMass\""}]]},
       "Quantity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"description\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Description\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Description\\\"]\""},
     "EntityProperty"], 
    "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"CODATA constants\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"CODATA\""}], "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \\\"CODATA\\\"]\"", 
        "\"physical constants\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"cosmological constants\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"Cosmological\""}], "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \\\"Cosmological\\\"]\"", 
        "\"physical constants\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"gravitational constants\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"Gravitational\""}], "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \\\"Gravitational\\\"]\"", 
        "\"physical constants\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"Wolfram legacy package\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PhysicalConstant\"", ",", "\"WolframLegacyPackage\""}], 
          "]"}], 
        "\"EntityClass[\\\"PhysicalConstant\\\", \
\\\"WolframLegacyPackage\\\"]\"", "\"physical constants\""},
       "EntityClass"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"equivalent forms\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"EquivalentForms\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"EquivalentForms\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubscriptBox[
             StyleBox["\"M\"", Italic, StripOnInput -> False], 
             "\"\[Earth]\""]}], "reciprocal Earth mass", 
          FractionBox["1", "\"EarthMass\""]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          SubscriptBox[
           RowBox[{"\"(\"", 
             StyleBox["\"G\"", Italic, StripOnInput -> False], 
             StyleBox["\"M\"", Italic, StripOnInput -> False], "\")\""}], 
           "\"\[Earth]\""], "terrestrial mass parameter", 
          "\"TerrestrialMassParameter\""},
         "Quantity"], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubscriptBox[
             StyleBox["\"M\"", Italic, StripOnInput -> False], 
             "\"\[Sun]\""]}], "reciprocal solar mass", 
          FractionBox["1", "\"SolarMass\""]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          SubscriptBox[
           RowBox[{"\"(\"", 
             StyleBox["\"G\"", Italic, StripOnInput -> False], 
             StyleBox["\"M\"", Italic, StripOnInput -> False], "\")\""}], 
           "\"\[Sun]\""], "solar mass parameter", "\"SolarMassParameter\""},
         "Quantity"], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
          "per Planck mass squared", 
          FractionBox["1", 
           SuperscriptBox["\"PlanckMass\"", "2"]]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], "\"\[HBar]\"", 
          "reduced Planck constant", "\"ReducedPlanckConstant\""},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          StyleBox["\"c\"", Italic, StripOnInput -> False], "speed of light", 
          "\"SpeedOfLight\""},
         "Quantity"], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       FractionBox["1", "\[Pi]"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          StyleBox["\"h\"", Italic, StripOnInput -> False], "Planck constant",
           "\"PlanckConstant\""},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
          "per Planck mass squared", 
          FractionBox["1", 
           SuperscriptBox["\"PlanckMass\"", "2"]]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          StyleBox["\"c\"", Italic, StripOnInput -> False], "speed of light", 
          "\"SpeedOfLight\""},
         "Quantity"], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "8"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       FractionBox["1", "\[Pi]"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SubsuperscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"e\"", Italic, StripOnInput -> False], "2"]}], 
          "electron mass squared", 
          SuperscriptBox["\"ElectronMass\"", "2"]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SuperscriptBox["\"\[Alpha]\"", "4"]}], 
          "fine structure constant to the fourth", 
          SuperscriptBox["\"FineStructureConstant\"", "4"]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            StyleBox["\"h\"", Italic, StripOnInput -> False]}], 
          "reciprocal Planck constant", 
          FractionBox["1", "\"PlanckConstant\""]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
          "per Planck mass squared", 
          FractionBox["1", 
           SuperscriptBox["\"PlanckMass\"", "2"]]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"R\"", Italic, StripOnInput -> False], "\[Infinity]", 
             "2"]}], "per Rydberg constant squared", 
          FractionBox["1", 
           SuperscriptBox["\"RydbergConstant\"", "2"]]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SuperscriptBox[
             StyleBox["\"c\"", Italic, StripOnInput -> False], "3"]}], 
          "speed of light cubed", 
          SuperscriptBox["\"SpeedOfLight\"", "3"]},
         "Quantity"], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "16"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       FractionBox["1", 
        SuperscriptBox["\[Pi]", "2"]], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SubsuperscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"e\"", Italic, StripOnInput -> False], "2"]}], 
          "electron mass squared", 
          SuperscriptBox["\"ElectronMass\"", "2"]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SuperscriptBox["\"\[Alpha]\"", "4"]}], 
          "fine structure constant to the fourth", 
          SuperscriptBox["\"FineStructureConstant\"", "4"]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
          "per Planck mass squared", 
          FractionBox["1", 
           SuperscriptBox["\"PlanckMass\"", "2"]]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", "\"\[HBar]\""}], 
          "reciprocal reduced Planck constant", 
          FractionBox["1", "\"ReducedPlanckConstant\""]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{"\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"R\"", Italic, StripOnInput -> False], "\[Infinity]", 
             "2"]}], "per Rydberg constant squared", 
          FractionBox["1", 
           SuperscriptBox["\"RydbergConstant\"", "2"]]},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SuperscriptBox[
             StyleBox["\"c\"", Italic, StripOnInput -> False], "3"]}], 
          "speed of light cubed", 
          SuperscriptBox["\"SpeedOfLight\"", "3"]},
         "Quantity"], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "8"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       FractionBox["1", "\[Pi]"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          StyleBox["\"\[Kappa]\"", Italic, StripOnInput -> False], 
          "Einstein constant (c^4 convention)", 
          "\"EinsteinConstantSpeedOfLightToTheFourth\""},
         "Quantity"], ")"}], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       RowBox[{"(", 
        TemplateBox[{"1", 
          RowBox[{
            SuperscriptBox[
             StyleBox["\"c\"", Italic, StripOnInput -> False], "4"]}], 
          "speed of light to the fourth", 
          SuperscriptBox["\"SpeedOfLight\"", "4"]},
         "Quantity"], ")"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"L\[EAcute]vy\[Hyphen]Leblond class\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"LevyLeblondClass\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"LevyLeblondClass\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"gravitational constant\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"primary source\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"PrimarySource\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"PrimarySource\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"CODATA2018\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Quantity\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Quantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      StyleBox["\"G\"", Italic, StripOnInput -> False], 
      "Newtonian gravitational constant", "\"GravitationalConstant\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"relative uncertainty\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"RelativeUncertainty\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"RelativeUncertainty\\\"]\""},
     "EntityProperty"], "\[Rule]", "0.000022474266964325848`"}], ",", 
   RowBox[{
    TemplateBox[{"\"standard uncertainty\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"StandardUncertainty\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"StandardUncertainty\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1.5`*^-15", 
      RowBox[{
        SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
        "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
      "meters cubed per kilogram second squared", 
      FractionBox[
       SuperscriptBox["\"Meters\"", "3"], 
       RowBox[{"\"Kilograms\"", " ", 
         SuperscriptBox["\"Seconds\"", "2"]}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard year\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"StandardYear\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"StandardYear\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2018\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2018", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbol\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Symbol\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Symbol\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"G\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"value\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Value\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Value\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"6.674299999999999379001243669`4.347284468938097*^-11", 
      RowBox[{
        SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
        "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
      "meters cubed per kilogram second squared", 
      FractionBox[
       SuperscriptBox["\"Meters\"", "3"], 
       RowBox[{"\"Kilograms\"", " ", 
         SuperscriptBox["\"Seconds\"", "2"]}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"value association\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"ValueAssociation\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \
\\\"ValueAssociation\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"AstronomicalAlmanac2018\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", 
          "\[Rule]", "\<\"AstronomicalAlmanac\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2018"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67428`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"6.7`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA1969\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "1969"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.6732`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"3.1`*^-14", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA1973\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "1973"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.672`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"4.1`*^-14", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA1986\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "1986"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67259`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"8.5`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA1998\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "1998"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.673`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"1.`*^-13", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA2002\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2002"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.6742`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"1.`*^-14", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA2006\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2006"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67428`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"6.7`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA2010\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"ASCIIDescription\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2010"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67384`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"8.`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA2014\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"ASCIIDescription\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2014"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67408`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"3.1`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"CODATA2018\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"AbbreviationCode\"\>", "\[Rule]", "\<\"bg\"\>"}], ",", 
         RowBox[{"\<\"ASCIIDescription\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"CODATA\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2018"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.6743`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"1.5`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"IAU2009\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"constant of gravitation\"\>"}], ",", 
         RowBox[{"\<\"StandardBody\"\>", "\[Rule]", "\<\"IAU\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2009"}], ",", 
         RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"G\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67428`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"6.7`*^-15", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"LiEtAl2018TOS\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian gravitational constant\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2018"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.674184`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"7.8`*^-16", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"LiEtAl2018AAF\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"Newtonian gravitational constant\"\>"}], ",", 
         RowBox[{"\<\"StandardYear\"\>", "\[Rule]", "2018"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.674484`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}], ",", 
         RowBox[{"\<\"StandardUncertainty\"\>", "\[Rule]", 
          TemplateBox[{"7.8`*^-16", 
            RowBox[{
              SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
              "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
            "meters cubed per kilogram second squared", 
            FractionBox[
             SuperscriptBox["\"Meters\"", "3"], 
             RowBox[{"\"Kilograms\"", " ", 
               SuperscriptBox["\"Seconds\"", "2"]}]]},
           "Quantity"]}]}], "}"}]}], ",", 
      RowBox[{"\<\"WolframLegacyPackage\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Description\"\>", 
          "\[Rule]", "\<\"GravitationalConstant is the coefficient of \
proportionality in Newton's law of gravitation.\"\>"}], ",", 
         RowBox[{"\<\"PackageSymbol\"\>", 
          "\[Rule]", "\<\"GravitationalConstant\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          TemplateBox[{"6.67428`*^-11", 
            RowBox[{
              SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"N\"", 
              "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
              SuperscriptBox["\"kg\"", "2"]}], 
            "meter squared newtons per kilogram squared", 
            FractionBox[
             RowBox[{
               SuperscriptBox["\"Meters\"", "2"], " ", "\"Newtons\""}], 
             SuperscriptBox["\"Kilograms\"", "2"]]},
           "Quantity"]}]}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"values\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Values\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Values\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"6.674279999999999465924272708`3.697299623897652*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.673200000000000282358719434`3.0319424516262714*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.672000000000000327861633276`2.910442185245966*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.672589999999999702336837317`3.5938455188916527*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.672999999999999859119302703`2.5232911291867905*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674199999999999813616388861`3.52336922097828*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674279999999999465924272708`3.697299623897652*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.673840000000000085761204436`3.620255807923255*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674080000000000335154563091`4.0319997185967145*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674299999999999379001243669`4.347284468938097*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674279999999999465924272708`3.697299623897652*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674183999999999624660870669`4.631273577156272*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.674483999999999613285142208`4.631293097957088*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ",", 
      TemplateBox[{"6.67428`*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"N\"", 
          "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          SuperscriptBox["\"kg\"", "2"]}], 
        "meter squared newtons per kilogram squared", 
        FractionBox[
         RowBox[{
           SuperscriptBox["\"Meters\"", "2"], " ", "\"Newtons\""}], 
         SuperscriptBox["\"Kilograms\"", "2"]]},
       "Quantity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"variants\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Variants\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Variants\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"GravitationalConstantWGS84\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"variant table\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"VariantTable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"VariantTable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TagBox[GridBox[{
       {"\<\"GravitationalConstant\"\>", 
        TemplateBox[{"6.674299999999999379001243719`4.356547323513813*^-11", 
          RowBox[{
            SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"N\"", 
            "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
            SuperscriptBox["\"kg\"", "2"]}], 
          "meter squared newtons per kilogram squared", 
          FractionBox[
           RowBox[{
             SuperscriptBox["\"Meters\"", "2"], " ", "\"Newtons\""}], 
           SuperscriptBox["\"Kilograms\"", "2"]]},
         "Quantity"]},
       {"\<\"GravitationalConstantWGS84\"\>", 
        TemplateBox[{"6.673000000000000000000000131`4.*^-11", 
          RowBox[{
            SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"N\"", 
            "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
            SuperscriptBox["\"kg\"", "2"]}], 
          "meter squared newtons per kilogram squared", 
          FractionBox[
           RowBox[{
             SuperscriptBox["\"Meters\"", "2"], " ", "\"Newtons\""}], 
           SuperscriptBox["\"Kilograms\"", "2"]]},
         "Quantity"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.881660485356608*^9, 3.88166053481044*^9},
 CellLabel->"Out[213]=",
 CellID->55259246,ExpressionUUID->"9744b98d-3075-4324-a7be-9fde3ab5fe2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"gravitational constant\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalConstant\"", ",", "\"GravitationalConstant\""}], 
      "]"}], "\"Entity[\\\"PhysicalConstant\\\", \
\\\"GravitationalConstant\\\"]\"", "\"physical constant\""},
   "Entity"], "[", 
  TemplateBox[{"\"value\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"PhysicalConstant\"", ",", "\"Value\""}], "]"}], 
    "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Value\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 CellChangeTimes->{{3.8816604523621287`*^9, 3.881660506915702*^9}},
 CellLabel->"In[212]:=",
 CellID->56600893,ExpressionUUID->"4cf4b933-2fba-4570-b544-25a600410c7f"],

Cell[BoxData[
 TemplateBox[{"6.674299999999999379001243669`4.347284468938097*^-11", 
   RowBox[{
     SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
     "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
   "meters cubed per kilogram second squared", 
   FractionBox[
    SuperscriptBox["\"Meters\"", "3"], 
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Seconds\"", "2"]}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.881660501958937*^9, 3.8816605079573517`*^9}},
 CellLabel->"Out[212]=",
 CellID->186052966,ExpressionUUID->"be13447c-7aff-42da-901b-38610de5481d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    TemplateBox[{"\"gravitational constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"GravitationalConstant\""}], 
        "]"}], "\"Entity[\\\"PhysicalConstant\\\", \
\\\"GravitationalConstant\\\"]\"", "\"physical constant\""},
     "Entity"], "[", 
    TemplateBox[{"\"value\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalConstant\"", ",", "\"Value\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Value\\\"]\""},
     "EntityProperty"], "]"}], " ", 
   TemplateBox[{"\"m\"", "\"Mass\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
      "TextStyling"]& )], " ", 
   FractionBox[
    TemplateBox[{
      SubscriptBox["\"m\"", "\"Moon\""], "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], 
    SuperscriptBox[
     TemplateBox[{"\"r\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]]}], "==", 
  RowBox[{
   TemplateBox[{"\"m\"", "\"Mass\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
      "TextStyling"]& )], " ", 
   FractionBox[
    SuperscriptBox[
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], "2"], 
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )]]}]}]], "Input",
 CellChangeTimes->{{3.8816605803700066`*^9, 3.88166070743887*^9}},
 CellLabel->"In[221]:=",
 CellID->518806962,ExpressionUUID->"157d8aca-2c50-4f2c-90c8-aa277d4fe15d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      TemplateBox[{"6.674299999999999379001243669`4.347284468938097*^-11", 
        RowBox[{
          SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
          "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
          SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
        "meters cubed per kilogram second squared", 
        FractionBox[
         SuperscriptBox["\"Meters\"", "3"], 
         RowBox[{"\"Kilograms\"", " ", 
           SuperscriptBox["\"Seconds\"", "2"]}]]},
       "Quantity"], ")"}], " ", 
     TemplateBox[{"\"m\"", "\"Mass\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
        "TextStyling"]& )], " ", 
     TemplateBox[{
       SubscriptBox["\"m\"", "\"Moon\""], "\"Mass\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
        "TextStyling"]& )]}], 
    SuperscriptBox[
     TemplateBox[{"\"r\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]], "\[Equal]", 
   FractionBox[
    RowBox[{
     TemplateBox[{"\"m\"", "\"Mass\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
        "TextStyling"]& )], " ", 
     SuperscriptBox[
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], "2"]}], 
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )]]}], "]"}]], "Input",
 CellChangeTimes->{{3.881660714023988*^9, 3.881660719242751*^9}},
 CellLabel->"In[222]:=",
 CellID->228297112,ExpressionUUID->"76897b35-49a2-41fd-b82b-d43b757b0bca"],

Cell["\<\
(Quantity[6.674299999999999379001243669`4.347284468938097*^-11, \
\"Meters\"^3/(\"Kilograms\"*\"Seconds\"^2)]*QuantityVariable[\"m\", \"Mass\"]*
   QuantityVariable[Subscript[\"m\", \"Moon\"], \
\"Mass\"])/QuantityVariable[\"r\", \"Radius\"]^2 == 
 (QuantityVariable[\"m\", \"Mass\"]*QuantityVariable[\"v\", \
\"Speed\"]^2)/QuantityVariable[\"r\", \"Radius\"]\
\>", "Output",
 CellChangeTimes->{3.881660719742749*^9},
 CellLabel->"Out[222]//InputForm=",
 CellID->85063671,ExpressionUUID->"bfe6ab5f-f54f-4c46-9430-fcbb9f528946"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"gravitational constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalConstant\"", ",", "\"GravitationalConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalConstant\\\", \\\"GravitationalConstant\
\\\"]\"", "\"physical constant\""},
      "Entity"], "[", 
     TemplateBox[{"\"value\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"PhysicalConstant\"", ",", "\"Value\""}], "]"}], 
       "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Value\\\"]\""},
      "EntityProperty"], "]"}], " ", 
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    FractionBox[
     TemplateBox[{
       SubscriptBox["\"m\"", "\"Moon\""], "\"Mass\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
        "TextStyling"]& )], 
     SuperscriptBox[
      TemplateBox[{"\"r\"", "\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )], "2"]]}], "==", 
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    FractionBox[
     SuperscriptBox[
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], "2"], 
     TemplateBox[{"\"r\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )]]}]}]}]], "Input",
 CellChangeTimes->{{3.881660721883365*^9, 3.8816607280114355`*^9}},
 CellLabel->"In[223]:=",
 CellID->496783543,ExpressionUUID->"4d51a4c9-ecc5-4511-8742-222bbe5aaf6d"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     TemplateBox[{"6.674299999999999379001243669`4.347284468938097*^-11", 
       RowBox[{
         SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
         "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
         SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
       "meters cubed per kilogram second squared", 
       FractionBox[
        SuperscriptBox["\"Meters\"", "3"], 
        RowBox[{"\"Kilograms\"", " ", 
          SuperscriptBox["\"Seconds\"", "2"]}]]},
      "Quantity"], ")"}], " ", 
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    TemplateBox[{
      SubscriptBox["\"m\"", "\"Moon\""], "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )]}], 
   SuperscriptBox[
    TemplateBox[{"\"r\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "2"]], "\[Equal]", 
  FractionBox[
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    SuperscriptBox[
     TemplateBox[{"\"v\"", "\"Speed\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]}], 
   TemplateBox[{"\"r\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )]]}]], "Output",
 CellChangeTimes->{3.881660729027075*^9},
 CellLabel->"Out[223]=",
 CellID->362337088,ExpressionUUID->"ea58da3e-89de-4821-a9df-d413c88df174"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"radiusRule", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     TemplateBox[{"\"r\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"h\"", "\"Height\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
         "TextStyling"]& )], "+", 
      RowBox[{
       TemplateBox[{"\"Moon\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
         "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", 
         "\"planetary moon\""},
        "Entity"], "[", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8816607307720366`*^9, 3.881660782712968*^9}},
 CellID->262033553,ExpressionUUID->"6282a1df-0fb5-402d-99a1-ef680cf240bb"],

Cell["Moon data", "Text",
 CellChangeTimes->{{3.881660787511568*^9, 3.8816607887187595`*^9}},
 CellID->235015138,ExpressionUUID->"ab72ed89-d738-4674-b92d-ffac74ccadf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteMissing", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Moon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
      "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", "\"planetary moon\""},
     "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}], ",", "Infinity", 
   ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.881660790796874*^9, 3.8816608046151505`*^9}, {
  3.881660940653271*^9, 3.881660943642531*^9}},
 CellLabel->"In[228]:=",
 CellID->481528808,ExpressionUUID->"24301fcd-9c2d-41f8-9d6b-0807432f4aa5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"absolute magnitude H\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AbsoluteMagnitudeH\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AbsoluteMagnitudeH\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    "0.2000000000000000111`1.301029995663981"}], ",", 
   RowBox[{
    TemplateBox[{"\"age\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Age\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Age\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"4.527`3.*^9", "\"yr\"", "years", "\"Years\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"albedo\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Albedo\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Albedo\\\"]\""},
     "EntityProperty"], "\[Rule]", "0.12`2."}], ",", 
   RowBox[{
    TemplateBox[{"\"alphanumeric name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AlphanumericName\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AlphanumericName\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"Moon\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"Luna\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"altitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Altitude\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Altitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "30"}], 
      RowBox[{"-", "40"}], 
      RowBox[{"-", "19.9006566478128702185`2.2558200546770735"}], 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next maximum altitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AltitudeMaximum\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AltitudeMaximum\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"71", "25.923804826494745`", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], "degrees,arcminutes", 
      RowBox[{"{", 
        RowBox[{"\"AngularDegrees\"", ",", "\"Arcminutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next transit altitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AltitudeTransit\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AltitudeTransit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"72", "59.8948203757752052836`4.135925585405964", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], "degrees,arcminutes", 
      RowBox[{"{", 
        RowBox[{"\"AngularDegrees\"", ",", "\"Arcminutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"angular diameter\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AngularDiameterFromEarth\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"AngularDiameterFromEarth\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"30.1525778480083774909`5.", 
      RowBox[{"\[InvisibleSpace]", "\"'\""}], "arcminutes", "\"Arcminutes\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"angular radius\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AngularRadiusFromEarth\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"AngularRadiusFromEarth\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"15.0762888535888013004`5.", 
      RowBox[{"\[InvisibleSpace]", "\"'\""}], "arcminutes", "\"Arcminutes\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"largest distance from orbit center\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Apoapsis\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Apoapsis\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "405695.76`3.8167530928501643", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next apoapsis time\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"ApoapsisTime\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"ApoapsisTime\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Sun 8 Jan 2023 04:20:00\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2023", ",", "1", ",", "8", ",", "4", ",", "20", ",", 
              "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"last apoapsis time\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"ApoapsisTimeLast\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"ApoapsisTimeLast\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Sun 11 Dec 2022 19:30:00\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2022", ",", "12", ",", "11", ",", "19", ",", "30", ",", 
              "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"apparent altitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"ApparentAltitude\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"ApparentAltitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "55.3841579917086213177`5.681239372325114", 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{"\"Arcminutes\"", ",", "\"Arcseconds\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"apparent magnitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"ApparentMagnitude\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"ApparentMagnitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"-", "11.4261493117454868695`3."}]}], ",", 
   RowBox[{
    TemplateBox[{"\"longitude of ascending node \[CapitalOmega]\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AscendingNodeLongitude\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"AscendingNodeLongitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"125.08`5.", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"atmospheric composition\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AtmosphericComposition\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"AtmosphericComposition\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"helium-4\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Isotope\"", ",", "\"Helium4\""}], "]"}], 
         "\"Entity[\\\"Isotope\\\", \\\"Helium4\\\"]\"", "\"isotope\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"25.8064516129032258112`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"neon-20\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Isotope\"", ",", "\"Neon20\""}], "]"}], 
         "\"Entity[\\\"Isotope\\\", \\\"Neon20\\\"]\"", "\"isotope\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"25.8064516129032258112`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"hydrogen\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Chemical\"", ",", "\"Hydrogen\""}], "]"}], 
         "\"Entity[\\\"Chemical\\\", \\\"Hydrogen\\\"]\"", "\"chemical\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"22.5806451612903225773`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"argon-40\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Isotope\"", ",", "\"Argon40\""}], "]"}], 
         "\"Entity[\\\"Isotope\\\", \\\"Argon40\\\"]\"", "\"isotope\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"19.3548387096774193489`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"neon-22\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Isotope\"", ",", "\"Neon22\""}], "]"}], 
         "\"Entity[\\\"Isotope\\\", \\\"Neon22\\\"]\"", "\"isotope\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"3.2258064516129032284`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"argon-36\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Isotope\"", ",", "\"Argon36\""}], "]"}], 
         "\"Entity[\\\"Isotope\\\", \\\"Argon36\\\"]\"", "\"isotope\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"1.2903225806451612892`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"methane\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Chemical\"", ",", "\"Methane\""}], "]"}], 
         "\"Entity[\\\"Chemical\\\", \\\"Methane\\\"]\"", "\"chemical\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"0.6451612903225806392`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"ammonia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Chemical\"", ",", "\"Ammonia\""}], "]"}], 
         "\"Entity[\\\"Chemical\\\", \\\"Ammonia\\\"]\"", "\"chemical\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"0.6451612903225806392`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{
       TemplateBox[{"\"carbon dioxide\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Chemical\"", ",", "\"CarbonDioxide\""}], "]"}], 
         "\"Entity[\\\"Chemical\\\", \\\"CarbonDioxide\\\"]\"", 
         "\"chemical\""},
        "Entity"], "\[Rule]", 
       TemplateBox[{"0.6451612903225806392`2.", 
         RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
         "\"VolumePercent\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"atmospheric pressure\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AtmosphericPressure\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"AtmosphericPressure\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3.`2.*^-15", "\"bar\"", "bars", "\"Bars\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average distance from Earth\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AverageDistanceFromEarth\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"AverageDistanceFromEarth\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "0.0025734984779566117`3.9868910790445775", "\"au\"", 
      "astronomical units", "\"AstronomicalUnit\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average orbit distance\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AverageOrbitDistance\""}], "]"}],
       "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AverageOrbitDistance\\\"]\
\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "0.0025734984779566117`3.9868910790445775", "\"au\"", 
      "astronomical units", "\"AstronomicalUnit\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average orbit velocity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AverageOrbitVelocity\""}], "]"}],
       "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AverageOrbitVelocity\\\"]\
\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1.0175316013608648458`3.", 
      RowBox[{
       "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}],
       "kilometers per second", 
      FractionBox["\"Kilometers\"", "\"Seconds\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average temperature\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AverageTemperature\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AverageTemperature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "36.15`2.1833599556204444"}], "\"\[Degree]C\"", 
      "degrees Celsius", "\"DegreesCelsius\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"azimuth\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Azimuth\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Azimuth\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"17", "12", "31.3926167419889269334`2.704776444562293", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"azimuth at rise\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AzimuthRise\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AzimuthRise\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"64", "27.677731654167534223`3.8546802143734764", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], "degrees,arcminutes", 
      RowBox[{"{", 
        RowBox[{"\"AngularDegrees\"", ",", "\"Arcminutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"azimuth at set\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"AzimuthSet\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"AzimuthSet\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"298", "33.7977499574702238512`3.2757001219909956", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], "degrees,arcminutes", 
      RowBox[{"{", 
        RowBox[{"\"AngularDegrees\"", ",", "\"Arcminutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"above the horizon\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"BooleanRise\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"BooleanRise\\\"]\""},
     "EntityProperty"], "\[Rule]", "False"}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Earth moons\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PlanetaryMoon\"", ",", "\"EarthMoon\""}], "]"}], 
        "\"EntityClass[\\\"PlanetaryMoon\\\", \\\"EarthMoon\\\"]\"", 
        "\"planetary moons\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"largest moons\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PlanetaryMoon\"", ",", "\"LargestMoons\""}], "]"}], 
        "\"EntityClass[\\\"PlanetaryMoon\\\", \\\"LargestMoons\\\"]\"", 
        "\"planetary moons\""},
       "EntityClass"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"color\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Color\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Color\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"color red:0.586 green:0.534 blue:0.517\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Color\"", ",", 
          RowBox[{"{", 
            RowBox[{"\"RGB\"", ",", 
              RowBox[{"{", 
                
                RowBox[{
                 "0.5856470588235294`", ",", "0.5342196078431373`", ",", 
                  "0.5172980392156863`"}], "}"}]}], "}"}]}], "]"}], 
      "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {0.5856470588235294, \
0.5342196078431373, 0.5172980392156863}}]\"", "\"color\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"constellation\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Constellation\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Constellation\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"Aries\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Constellation\"", ",", "\"Aries\""}], "]"}], 
      "\"Entity[\\\"Constellation\\\", \\\"Aries\\\"]\"", "\"constellation\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"cylindrical equidistant texture\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"CylindricalEquidistantTexture\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"CylindricalEquidistantTexture\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw8vFV0pFeWLlhr1jzM4zzOrHu7u9hlO22n7XQyg6RMQYqZIaRQoAIVzMzM
zMwKcSqVmUp0otmuchmKobun7+11132afX65+igUCvzhnL0/2Of8+skspRf3
f/zoRz+i/19w1zvDvkSjzXD6/m94MkCm4xfJC/PXyYyFxQXayVn0sR+hu//z
Rz+6eq312tWrV65cvXYF2uXLFy9fvnwJ/l7Gnl7FXrt06dJFaBcuXDh//sIP
DZ6h1+CdS5fh3UuXsQafRL+XLqBPn4d2Dm7nzp47hx5fgC/De1cuX0Fbv3qt
BbXW69fb2tqu32hvb+/o6Ozq6ursvHmzu7unp7e3p7enp6+vtxfd+vr6BwYG
B4eGh4dGRkZGR8egjY+NToxPTExMTk1OTU/PzM7Ozc3NL+AWcIu4xaUlPB5P
IBCWCUQCiUSmUKnUlZUV2gqNRmdgjc5gYvcsFpsNt1X2Kmd1lQONy+UKuDwe
j8/ncblw42BtFb2NGvYYPo2+wmKy4MZkMWBbdKzRYCcrsC8KhQyNghp6Bjf0
6go6CBocAp1BR/c0+IF7BgN9Cx7Deyt0+uEn0GEymUzWP3YKB4Z+0cMfjg7d
w18+9oyL2uFnfvgoB3uFhz6MPsDnC6AJ4cYXCIXodrgN7BS56Jy4bOgJ2CWT
8UMP0dBRrsBRU6jodEgkEpGwjMcvLy8v4ZcWFxdxuIWF+bn5ubnZ2ZkprE1O
ToyNobEZHRkeGR4cHBzo6++DUYTW3X2zq7Ors+PGjfYb12/AmLe0tbW2tLah
EGhtbTkMAnjnBooELBY6UTR03ey+Ca0bNtLb19/fP9A/MDQ4BAEwMQbjPgWj
PreAGg6OB49Hg760RFheRiO/jMYeGolIhEMnwXBAx0KfsqED4fxFYolUrlAo
lVqNRqfT6/VGEzSL2WyxWK1Wm9Vms9kdTrvD5XK73G4PNC80H3Y7fOTxoWc+
uPl8AX8gEPAHQ9DC0UgkEsVaJAy/kTDcwuFQMIwavB9GH0ItEg4FQvBG6L9a
MBhE2/H7sZ2gPXo8sHPsEFDzYEfi8qKD8XkPDwkewI8fjsAfxLYPe4tEDo8h
Bi2eiMfjyQy3dwQSaHCwH0YE0gn1Z097WxuRBEOMYpFGo5BJBPziwtzM1OTo
yNBgf2/3zc52GJO2Vqy1oXb9sMEwXT9M3OvwOowfategXUV3P2R2C4woJPaN
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
JxAOec0SyuToApmvtzm8DolErtSp5TKxymyWL/XheMSufjplYmRqap7FV4di
brNaRJqnS7gEwhKBLZaIedTFhUW6RCh3BD3OcDLt12vM8eZaIRMPoH9Z5XYo
uOTelh6ymK/xxQuVRiKRSfpcLp1Mq+axuPRZogqETREETywRCzoUaKoVxxLS
p2+ceOe9S/0To4PDeEOhERPPDY0wY9WITmH2Bx1SEp7vB8eY8Kh5fBaOqpTh
+1ovXmu5PiszarT2cC6fRhfaBuMBpzsaUjEZq0K1YIVCIC1OTk0N9I5M997o
HZ3ACRRMliUQajy802g04u5AtrRWM6vdISdPpCGMUhyZAGOgbYBGn+ofwdHp
ODCQl6/0zhNJxMnOznm2WLy6Sp2dlgW9YHxbhilMwsIyU8gDMeCwGJU8HuhG
cySVqK7VKs2tio3QPzxP4LsTEQ15corvDxkFzBXi8vxwV0dn5//P0Xs9N45l
6b7/xI24ceLEnDNnXE/3VHV3eZOVlT5TmZJS3htSEil67z0JEvQkCJAgQBIE
Qe+9k3epVNrKLJNV1d3VfnrmTs/ciTMPN+K8XqhfpBDFBxB7r/V9P2KvtR5O
rbK2BJYozQExP1zYr9pYEzOaVK8Ebk/cebCV/t3/928vc0E42egVcaJFp6vz
o8vGTtViuUpnk788J0qjdPKlIkGqe0kre/XLZ6udVueyu0PMtHztvZ/97Ppn
b30mWnv75xKCpHIYTKBWI4imY6qZJfb8tAQ0G0OldgOz6gNRWoOMequbaifl
ioBhS+d16zfvfvDOh7eX5B6ysXN8cnpy2M8HNRujt6998OOffPj56Koy1cp4
DRabHcXNnKXJSbbNrVn84OerZDsZdCjFsrl33//okzsPVyb5Eb9NJebLoVz7
4qKEZfKwWTR1ZxEshWUK2dTH74/wDLRbFK7cHdfGMsXB6fPvf/+HX3714vzk
ZLfTbhdRG/fhlU+ufHZ7ka8wRXrn+50yJJl45667f3Z+WHEtffL2z66y3D6t
SLQ99dl7V27eGF2VeGrPf/jnf/71qydPnpyfHe12m5UsbSP0QsbE5++99Q9/
95OfvndXTB49PWsHWVu6YHqvjyoZE2MzSzx767SBWuUqwA/HMVBn8sSKxVSm
XM5EAzYhW2l142RQvTExtmXH67vHxy0qHkKCBrHeqjHqtaGol7jsJVEpZAuX
7R2zl5XN5UI0iuD5ar2eJpKXzV9gC0QmsvVqBnebvYlCvVpu9vbb1TqqWJ2V
eh0QgpDl1u7pUavYvDzqSOPn8PBo0Gi1srAfwlIpWhFSkAnEggapRG1NnTw5
2hn0s4Da4oRxDE/GQrFKd6efv2yXU7osBamUEjAo4tj8FmMoHobJ1mX7wP39
g6OdMmpcX5JYkVoX5U9MK1O1StLG5VvgkE05eeX+zOTIgt66vcxgW3FgbZpp
wrAA7ULcIOg3S1QmnYTDURoka3Ojn17fVBusHp8TSqXJGASIlyZm742qC91a
GpRIFQZTIBlz2JPtYauUyZSrmSQWDgEygT619+ik5uFPXnn3g4/evUH71lWl
w49FbHK5SiPg28N2wSrbgznkAqlapbc5kUyayNLhbdxiilwO7sqKAFSu87zl
w+OjR1//8ovjg5P9nEOhsXudOqM3Uhp0cmgET2ZIolShgjYoalHKhMz5Ox+8
e+XWAoB77MkygZOJeCxiV9s9Ol0wDKjNlV/96c3FLr0kOEpW6My70ylG7Toz
IF4Yv3/n2o3RdbMPNCp07hDk9zq1MoVoZWJJbqExfHt9cXZ+dXWeC+WpBOrX
c8Ra6eqiJBiHYTJiU4s4CqNRcnkOULy6KVVwV9lm2sPunj559fWzQZZeUSKV
RmxGo85GNAedfPvi1z/sko3TLkH2n51mC8+fUaEsTSuldJaGlXazRnVfvj5r
R9Ur8yxbprr7xVdfPNpp1yrlTr9e7Qz7jZj41vs/e+vTO++9fWfm2u0tN+J1
U/udxOUDUjhJp1A4IplaFm4zVAHIZTICMBZMwTqLQc0RJn18qZojje58/9vn
pGTqxo3R0ZEF1jJTwVsUeIGtWzc3HQH53PJDhkxgBOO0CqXyCY9VJxVpvbCN
tbCyoXFxxh/evTp17+1//PE/3dJW24hiYTkwbKKeRK1O+X3xENarm+bGNwJ1
XL/FMNvW5qw5WMzRq1YecjxeodjXffO7X3/3vIXjxYwfMKgtIbLayHrkErtT
aso24maTyWWRbLA0dn+cSrmZNz64KYpTTrXBxBm5Obu4pncrZz/+cA3ye4q7
J4cHvSrl1Sm2px+M3Lry8fufzShMCqFYwNURrRIeCONWo10LhpBC2qaFyUyh
gFt4SpdCYFAzJTHSY3eAESrihbxWUK/BGrQT83l9kFO6AQy6ZCgSJxGv1yxl
jX14gxsI6O3RAGDVqFx4kt7ieBhJxDP1UpcS8AJYLI7IOQBGq53YLNCkYgAA
YZEERQYAKOY1m3UiodKiUqq4ayKvkcmSmzyZWgYjkn6TyUsQkF3J0wYgq9Hl
v2xSFYklIg4t+8EoF0gMnzzZ77Wq7WaaTKUvK84rf/kKtFmrVvKFuNvhVvMd
KUjL5dqJLBysDto1imo0Ej43bWnDLrOSt631Zxr1NFXsNEsUSXsDv4ozfv3e
6OTY3TV3Kg7jjePHz14+f/z42etvvvv6i4vTw51eG1Ymj+v57tGLi0E26tSa
QYtocXqNZwzATpsLkPAMGFVo5nBEOTuqiAQ8XgNrniEwBRQsnd2dqDTrmWSu
3qyUW7QtG/QvW3HViHAy4g65bfJNicXuUU+M6LOEGyqUo0bm+OiKgM9m8yxu
o0ZnsfIm+eFKM8y6fVdCQb76xeP+0YtnB+0aqhJIFHIeR+GGdRvb+mgmXUij
RDHX2W2m213a9RgkVggHVh/cvvbpBx/dYOJ7tPLxV7a9NOoYtc4IZJKp5LrI
+b//n//89snF4/NH5wel+qMvXn/11asjyrI5fvvz93/yj+PY+cvXj0rly/K3
YgKxGh0GUySdT0EWGXtpevrBzVlHsRp3GYWzo+MjY0Iv3rp4PKylUVAtXJzh
mvUiiXhz04h5thcEcC5f3TnfQ7UCkU4rV6ksoUAY8dulPJkZjJ7+8c+/eHF+
enGx1xkctrLDlxf7xxcXZ/0KidvDg9PTs5f0kgxi6vVtbz6J5GqNwQ4t/U3a
OtYyVAxUcmc+e/dn737887euLS8uLEuF89z6d189PdvNeB1mjRnw5Dr5kIU7
evXz2e11lo6/bop1uplYJORwhsxKoWBxWe+y2gtPH+Vzg4NBBo041aJNrtG0
Oa6qJDlLumgxRAuKw03uVKyW1EG/3k5pWXLA7MK8rJvvXZkeH2Mz5rbF25Py
xslJxW1FOoetAubA006ZTA9AEbdRwZW5TGw6jfhiNjYXsak4XKxRGb6mr/Il
vcuOBkmraG1+enHu2vtXxpWF44Zp9IOrK27IIJfJuesCtdFkcgPsBTH75h0F
aAEc6q2FybH7d0cXVxY39a4Irl28e/M+zexbm06qQEQdIqFZOb1usOjk0M5p
M+oLYLkc4VEYsEwsQaJ2g0nFY4zdWeaY3KBwZsPAm1m0xPBoyA5E85VGtVws
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
6y9WxcpxIxpn48DczZEVoNI56p4/CcNNvhOxHOwkNvNZZbycKZX3z46GGPHt
m+/efPNof3/n5PU3X3z+4mjv82+//NMP//D9N88PMdwVOznMlr/86vNnfW4I
gt1S//nT033OL3iXBzs+6Yf//e+oJ/lKb6udjXIxDEskZn+6JuRTyQRbaJdy
3d0y5rQ5PCDG0BSBExRLKq+AOS2YJ0J2rUUrHO+kg06nUQExAQBFHFqVhqn2
xKEx4jDmsZlmwHa/nUlYpcx2cUlNmLRBFvBigDtAZlN8LpWpFvgh6urCkTAX
TRdyUZ51WbI1Zhi8i612wSsHqoWgWaNyBBgOzPLa6Xm7hdhP6QwQJGwX/QGH
al2t8xnXph9KXaBTondJJGAYsf16IpXBpDC9e9asrsc4HxaspBzL1PNHWzt7
OzuHJxVM8uGnN5QZsRKXaitCq9UdZCv5gpBMICwT5ahMVj01p44Ws4FNezTi
00s2jZ5AKqMZMfnQbrLCkzDZEBmukTKhiVxRZOPJeokXImgkHCYgEITCwWiM
Kna3O43dg739foVduvjx7xZAKNvL8DRt04C498FYyHZZ0c/uv0wLfo0+XQ6g
VLJgCUaGmtEUkkJQI/N40UymtxMx26N7J53AXCxjdZAMj/nphkahlM+MP7yh
DaXjuf3SUHHsa1ieodMiRoAWOBsXKHe80O3yYBPUOMReOR4KpNzWoG52dnr0
7geXZhRKF8lyTKDz7eutZstHpk32IAbLNJiBMi0b3Aysjic0ty8ow2ilSnq9
MOkjHQ77xML4W3PrN+7fnhl78OHdtdUlE5NYlWDoutI1K3Ns+BjrqtHiTrZr
tG5ZvrJuNFVtN916O0Dbb/7h3vUP1hDpmBJBDcsTalRv8CwoNs2wh1Ld1FuW
L98FEtJ7vxlbnlmC025ZQsSXJXjYZJVbgXWtRe11OueB3SIHNrrlLBakMz4A
BliYjIaMuhBPIUHpWqQWNWmAGBT0m7U3lpp//v7Z4d52t57UX3/rV9aTR4ct
zj33yduTSNCi81BBp1VltG5agFAoDHJRkHPeW920m417Ygi3rFxTbj7Evn2z
lUtGcZwr13KpFMvHQygf0EqWxHYqHkSHjkUKERAi880yozSE/FotW0jvvnz5
qJmrHp3nCef0xful7786HhY45Vu4/dknd+inZ53zPz/u754+PuqWa4dPzva3
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
XpdNvu/tvHzcIA3zJorlc61u2njztx+4k1Z7/9Veg3eM0Ke1eqOSJRNLDxY0
pFVj9EQyMIhofbUiIIFTiRhjXvGeCoVyvQBLSLEwOOUxPejPDNhEkoIQNFFN
gyak0WoNygfdXMKkjXRr6QblCScrQzJM0A8upl6+OtwWyXSjtzOoZKudailb
KETTT54c9Fu1+vnjvWKrSKeEeLreqzX2DrbEOBvBmFIjReFQiCCc5O7LWjnu
tsrlJu3lj+lYvJIrhT2dF01WoLQKuFBIlTqtUjLJZ9LJTEpIZ/xyt3nW++Tr
Xj6fo5O9fvjild5zCoKW1Gc//PEvB9FgiIhh2WYxQSTLZd4ldeA2GHGqFQGb
bnbE6LWoJXJfIp+NGFem13zmiYtGP8DkmiUK4TwOuy1CYH4F6o1lYigTwSOp
ISNbr67lxSgcBIKAx+4y6o0Gs1Fr2FRoZUglw/LJbDadzqTTWQ7yoMNw7wby
jWLCGg87wzzC1JrVshjiksV6IhIEMpkIzDdTMk87h9pki0gjZh+/k/vqmMdJ
172f3E8O14a3TSn9gaiQTuZKFYGp9JotkU/SiZDLqKPbz141mFyLSRUxp59n
cLWtELr9UCIxJrdKbL5RZYzBXEK/vP3tQSm3VY5Of+x++mUPhtP95+m4jdyK
GlP17v5OCfFyWTpbZwBPpFKk/JhDjoCIR08opEtjD+cBTwDKNzq95qPn2Wh+
60hwhhNRNjAzZqaaTZtRdclZ8SxZFMvLisUlg4vMQDOLmH1Ui9vn75uSdFB5
7517e9/UPeO3rptJQplxQ6c0l+0MvYWAXE7D8oPLfxihyrrbE2CtI3o88g2N
lt4Z1M0cNzJfd2tS5UFSqJlzvWwZdCZMa1y/U+PjCNdmEQct7vG6UKhdT8GK
xTIyicWSPlDHPDroVC2XplWusDuSRtBAGEMIk3ljxbN60ftdHobHf+6hw3be
PXpp1GzyeXWKDYnOIN20ockkujk39uDW27/65c9/8btRbxZHzOWeEIwU0I2x
T2cJmMjnY5B/89M7CCxPBANWCqXUKyMLstlLFz65fP3jq7NMt2SfUS0sp3px
29rN9+e9WlMMl6gsvo07cng9tLeVaqg30Amj9+Fc6O477202I2hgZfTOiAqE
Ediitmxcnqn/8dvjw5Nuq1DN87P/4+fRM8xkdRosMBxSGD//f7/aPzioGH/9
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
7u+P281GpVIvknROkjJ8hoesa8tXr8Tsv7itN1PjYpTn4HmNRSJuKyNpbqmS
3u0to2IVOJ2nW5CTKd6apOCgJVKV45pP79385Q39jhpJoyxFRnccKl27T9fq
6VQkuON5otPxWPSbuilo0iVhJXq0WyRSpIypdgAKdJvdLpvf4rLc9iA7Setq
xI1M5j3X5XL4Qhjrj7hMfgjEEkzPp8cB0eZ6Xn76V78MxqOQUww/RD1fXKk1
1Od/e5L8/HsLGw8dlWHa+PCzzearN89nvPnBp2uFo8yw5Yy5XT6t0oSIsoEB
bsUHnD0hVApMVnTa976rYRu3ZEkiU+lQKhi5lezt/+2zfk4UMRiMO30pTIC1
Txc2fMHEnKd7QrZdzzVYGqdS05peLrXkWoNHQtveYS7dyZXHvUaWTtCnXQjO
ytVnzw8cdlu0cJofNGih/+zNy7NhPVNBY6V8kqvWOp1WUwq6IyZFPqhBS0gm
EHbGgHsofJdLy2K3WhkNxYTL647M83h/lmGF3LvN5fkYlJsPMpgELYupZGOK
JOq9aofC91795qu3Xz0bN8qFrFAa7u+NOzlZKNSq2eiOa8tfQS0WoSzREk2L
cVcSBuHo1jI06vAUy6cZikhBSNLvTwAggqaiSX96fvoBizFeHIRt+Pp1agBq
zGS7nUEcLrGYKRdoVhI5mEz4w0QQYVgESLls7vVN0GuMRwCGopPi4bSaz1Uj
NiJN4AEytv5gBdtvON/7RaDeDz2214a1hJUpwMk4h0ZzrYHAtyqsWRk9KKmj
r2ezbiNTf3VZTUJC+fByr0jIo7NpabJ3cnk5kCP3b9yv/8f/9V++fXU+6u12
/unfX0VUN3+Yen7wzqZqnqUYq7biUHJj266wgAUWmuD28skYNgdBjOk9O5yM
x70qvvXLnxnyHS6UybLZsAcTK8N6Ni2MJh3/lhcmOKbcmw0rrUYEG/7u91++
6HUPxoMO5SaGI1J9+77TYRogIS7OlqfZciNAwdGoKxQ2rsQRzZMn0ld5m8IS
Esiw12259ev3n6g83B//n//73//hP/3jn7457majqGfjATDz3F1cwPY6oywH
KxWuB+HRb5sma2Puent/+ObV4aS3V0o65eqkXWxcnA72Dwf1RpmIu3eW1m12
X7YrV3Gh9dha65cKadTqqyTqf/zytOr8/DGYLtY4HCXiUTQY9q798Ps/W5cC
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
fHQ1aWT3ERTmxQhIFzu5INwfZGVqRoCFyTAdSHJ8ZG1lR5usVlnK6fcHtqJs
neN5JMpDkWyvXJ9UrX7c6is0wlqsGDcaVLr1Dz/TLd63PNpa/+S9J2y9uVuq
Hnzbolu1So7DQkm1xpketCrFQpYMBHNhhW9SlbPFhgSAsICDeMycLVRKFc66
ePvDe4tLd99/DNX6fJBt2HIClc4DiYil+nWnJTvpEk8kI8s//+i63s11WIuT
liVWmJ8VheHP9xij1h+rmH4G+SoEH4jjKffT9dnXx216UzM7b2b81ljwyff/
2pQR8HR7BLz3BVtwnx42y528/erfXLv3CDv89q28cJXeIx1YWqOjmIjOQ+aT
riyzragNgXI7rlEWTNo1r0HLzFu/Uh2m8v1+dzRs5Krjdr3WrBTKrWKpXm93
dw9GnfHx9JuLVhnEhwfjbp5n+WyWIzGKDLips1n63o1sL+22efO1+kiO0PVx
f1Diiu02J9TFKN7sD3p8SuB96ysxzvEwskeGQqE4SnIUmXm3fmbQ7gt753PI
5TUZAyGX1WHTaiwWlXqe8C6Hx2Nzz+UnHEtEopGIQ7Ol1plcwWjA7XJ7/U69
RqlSK7dWVzUmlUKx/nhFub30dHlpeXn5ycNHT5Y2ttZWlhYWlpV2v9/hCESC
wZA/18qlWSpfy1XyKRbM5jkaZ1khJ1LeVCkX39YikGoREBKhiCVGxYNxEGVR
pXZLqXFExQwBQZH5cdrNVo/LEWVkHo+4zCaby2XZWlpZXlxefLJdGpYl0ELx
WCoZyu2fnF2+fHV6NClUq2goe/HVy8uL529ev359ctCX5Ga1HFdani5s3bt/
bRUMmv0BmJJGckhvdPr8Oo1Or150ISU0jOoUv/6VTuRxwxVvpZBnq418q5Sv
8EK+3N/rUuaH61tIplggq3stfs4zHtipXDWaHE791oO7NpiNWRJiLtMQEpZV
m9foSVaTG4etTWMOpIJb91U5xKpX/f8cveeT42h+5/kv3KvbV7qL3dXtrHZm
pZFupNHM9LSv7i6TVZXe0HsLAiQMSXhDwoOgBb23yWT6yvJd3T1OY6SRTtrb
i9iNjY2LuIuL+y8OdXyRycgMZIDA8/t9P58HD5DulCgWeSZP1rpNm+rMWlku
FwGMKTd4rthcNrhM3SLEUlkvjxuNXmt2Oh6vZ1azY1UVQSKoToQt+JkBvy1Z
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
VwRqNooLUt9s1CF3/7MykxE5TlQCm2umg18MKdB0s9eupbl2YGvxwpMfJn/5
WkxL1e/nu210ZRs3xm9Og9Bb+2Fa80eMhDK//PXBeOjxeqs7kMQnf/ZX8Urn
lfUEWSDVlCiDjb14rZBLLS9t3vjsk7Q/VWPpF68vI2F/8s83zZmkjqa9dnsQ
hJ1W1zNtoYkwdZ6uYIXCRmIHD2idVa9pv1WW/qQqgHx+3+27Xlc3Ru1w0jWi
MLX5MmyUDJsq1+PwHrZdC+x6MoJwOZa8u5Hf50TGJCBio/pS2GN++2//9jnC
h1EJBzQyxX76wfkfr04IKTTaJzN99vz1RdhnYRfZuHVvY3W7iCP5Ur1RqZVx
TSElNsO8fM2Lv/6ln6l7AmPaXjiaT/r9XiRyvuEatqnSIg2bjq5nmmiksJrJ
8wInG6pE5z5ZfvGb1uqfLn917jgiiUpdn0URnMI42+iNgu70wOUMR5FVTpWS
Oxi+9+jRVpSzAxNoNNJIndtdTaYLeUCkyZjb8zStjLANRtJZNCx+7xkAVD7+
IBO9Lp3biT2t4qCfaWDVRmusNqVwNGy5vUBTWZFf+9FPb927//jpvY1SVImK
RAANAHw/fb6BQBCFldPZdGw3mdyLbd3/dDWzlapVEcmuZBm0VK8A5UIxn4ol
UvHU3vrazvtLflH1L61ubO9sbUdUsLubKNYhVjFI/f3terBSKEntbn84u3p5
5BdTBAYxHKu0g15Ipgv7iXQ89+z2z4o3b2ZUpLS7vfRoaWNre3//+n//p3/6
meplHu7XCzVPbyS3sBFXyHLDN3/zbt45IptSKwxkHWrSTagOmTZVLeBdA66k
tvZufpZoyE/McPzcKKCJfFpuO1Zw6LH6nIBUl+PNbKYzc4++vnKst++mtUqP
vJ9PhhYJqI2kyEk7f3E9Sw8mJM4CO48BMg7ZXrNkHJtUCd7eZ8pIpWDKPwPE
AY8JJiIPRGeo5BG5Wmw2GpVcPt/M8EJclcfNUf5+BmkyEg0k6Pn88vWxaXiR
jlNqgFLMwyps+FwsqSho90LFFyYx/+NVSGuyBKW3VuohL/o+SByNnaDd6WGJ
fDWBcala3HLlzmIB2VdfHTL0i+GbE4r0D4eG2x4vDHbw6vnUd7mlD298eo8Z
uMTCac3bDaXdhW/+7DbfaY90iuT0gFlbj5BXwsq1BCo1d1JYA1i6vZWBJblz
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
2vcT/YOFSLCSuqcx++LGHUGPfwqgyzlhdq3eU1YRjeYRCLbvQ2Xvgw+eHje7
/m6Ir92usr9DzFv933w38r29n9ajMLAKyMmGI1s0HUFWLY+JRsN8OI4z4T0s
txEGFAwbqXz9n6YIfPxTgKmAVmgRYP+EsSWyAiYvpw4WrfhHpcs3b19zvIQx
OlMb/+2ZTnhjos9byt23Y7raFBwF1Xj5VbeZfC3qT1XOyK7WE3u92twOBVOl
8otRMj/rU35oDVjnO615d+tbqTnVvOTFZnwxMumBbqxer0PR4LrRjdVm7fBm
bK1NnaPqz9jlWRgM16qm7n5iDkU9Xi0TU1P4cGh4liaxlkqqNVWGqOz24mIN
S5QiqpVaBWHWZ7fPY9MysAePYSs0/cJME7N2JN+cDw2F3PleJZbgOjugHAg6
Z54JprdcJRCXwOLzTeMALCtd5u28QtAeM7l9g5XrA1ogRrF7eaGwTuKObuUK
1N19xjGL2JVcxw65aO5mxnAxde0i0uT9R2gfxMBW6/S00Sg6QKfdbAEkDgKt
0kkRyY1yA4T67Xar0+k1O93C9EGcQjrN1s6ndaBaqbcb96vpFldvp9Vulcql
cqMDoXC3KyiyIWMcCZCcygBiKKEIgpYouoSJDC7PXEOgepXTcr3+5LMHT/b3
dvYPy/UGLHAURRT4329VW91eB+xUyl2o2wb7QL/AkVYHwQmkj9KiAHWLqu9j
vCTwWK9+AskSDnZQlqKhzmm5Q5I0z8k8SYD1k0abHY+mw9WLl6/eXvjDlX61
mT/fpLo3UoQ4D0SqqIGZqzgm/rR3vXVUgf3sx7GD5L6Wbc+8aJhP526KqjaF
eiYXFr4gSuMCGyFaSTbr6WI1zudJ0Ul8VXO311fzyBTjZLo6W823lxdzyxtP
Vpvldnt1t51un7+4WebuMM80Z7KJwzxbXCyikYtyacCAEID6y8JZpZMjL3Mu
Il0YhgRI6i++y/aOvhIfvlyPPj0Z4w+fcI5zPYmCPmVwTfFi9YsXlxcMuIdZ
TK7ij9DYAbMQOCrnVI3TpXLHHGk4XQIYhER4hXux1QeVWueLZU//9ta/XS3n
63OZ8lNu9z12UjtqPCWMtuLAZYP+/JRdbs91sQIdvmavZ+/2n3f0vnAJHlVx
fNBBLKJ3PxQMKUgQ1drFuR8n5hJpP0Lb/J3FAipRmQUgAew8reGTtW7yYPXh
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
XEy2esCewkhfMa2Xf/8yMHSScTPkQfm71WyOUNPOR9lm+oy6PDek2vvwq1uL
k0p/djJLDT3YjLkpQb/5Kk/iZ3/oTOqNX07If/lO9MubOdmiNUVNxpOpbzja
wJ8ElqEIeySzY+U8dNTSnIhlKXLiGLrBq2prB14urdARCtYFHnenxnpUlHLJ
XJEQiCcNkWsCi7XMT6dWoJD9073WABbDIVPAceRjQ0eyRnziq8OLcTwaxaZ0
CJMHe6en1dPHJVpk0Vbh3KVas3lUOT0+OXj48d5BtV46PDqpVPcfPXpckEAH
R3v3wwOrO4+O2tUG0KgWzaBb3NmukZ1ut1bUbdETmo0WfL8EqMhin717xEu9
/RIrDeAugLRLXbBfxhUPPy3Ev9lpVA6ePPj8w493jkvVdrt+dFxvNWoA0C5V
u12gV+yh3oMBhBEo6H54Egr3gOKHRgeCgUalg9EkxxW9B67WG/2BwPQaIEae
nmI0BZdLAE0TJNbZ/ajmcMrNi6k/tEc3i9VGNSbj1JufpToNmaauNBDeCDUS
10KZDzJrtEiGl8+nYRj77tndeoxQbnJx7tqxCCqmKAPCel04rnF9tllsZiqj
bR1hdLGdjOab5WQztzU1nGS2OxuNVotJnK7miZddDfVhML3JfX9xR/fXi+22
wnw596zE5NwoNQW6/ayuiQgiaQ3QgiE/NHW2A7PEM32DzVuDy9tYufn53Zi1
X7+9uxhyKKXmw+F2yDHDy+kQym3evtZB6n65TYPvrYeMquCoanrZYm3TTUCD
cLhMeYy9oU2ZMTH8RvPPr+bZdtQCqTOHVaTupz8BgVNvcz8ogfWGI559cOCd
STyk6hIKKXgEVWDf0BzR9TlaoRC4cYyfjVUQG7Cf9QdpyJMTqbtgGhIhJSTE
uENVbLm3bpe1SsDzX6w59Nm7n5dG32JHNRIv/vOXF2Me/OSDo9md3+nufFqt
PsMuYvPlb7/NRgu9L7wygpubYFn5PvnWtYsEwWAbJhi5L6EM40Y0KhNadHzo
BqS0CcnX/3TOl3+8v0pYfLbxI+ljjOixTqU4qm0kaB7JLNSf9ENf5uL0tHj6
5i/1Q0i/WBxeBbaBB+tUpXFFjDZnOQ35Zyl12g430zg0VW6ScUbk5GMZrl7+
apHnW+lD7+bttTfdcEB6brvzV7+5GHrjcKBa2GPm9fQ8Ypwz5Y/J1zf71PQy
5U6PEX/sOdjDip6tQsk9j4wFjF6due4W+5/ypfDT7cXB5w8+ufim0COH4eMs
TGPTthQru58qEt+vve38q/ZoKqPH/XgBQQOF83O6gwx4ptWdXUUWTDqCokJ9
x3F1TU3LsQD3EtOjU4VSY00zfcOwWXQw6JQAWRgokMknIQmT+cjQw7eLVDST
dJhr/V7ltKDv/Q8/PTktdwEYA+rNRq3VbTeqtXLp6Ojh+4+rtZPd3b29w93H
D/ZPd3ZaONzvtyrl4s5Gr1KvNirlAgaAIpNLQLPTabQaPbDVICSCMAzTZeDG
g70aLJQe7UFVBH2AGCJ43AXBAS8RJwf79+8rVnY++fTDT54+eXJwVGpU95+c
Vu8H+9aPT08b7Vbv8LRWJCGAs0T//kNyigS6QEEavXYXAwsTgTASJdBO86Tc
boOsAPWAHoufQD2MbJYAakDhmJJykOtGq4tQEuBos1oOt2GaxqNJliUmVe0J
4AGkMoJVYKZeyJQdns2daLMex+HIdDfj2dykdH8c+/HMls7EPicpUabL+dli
Oc9ma9MKtrE/CvOr4cqdL69yJb6+Wg7DJM/Pbjar7WZ9eTnOZ/n67eXy5Vxh
whHW8BWJ6IWO5NpDGt5cr+eZAdfKpARAlo/TZ9TnPW+x8nEgdfatyWDRU399
EeDBl+cGMX3xxVYDGdnyec7bPB+Gl/PRhnScvpj6jCYvTTVBgJdSectWZKWt
K/6V2evjnOJ2wC++Mi/PzdiyhofwCzdfb8b5+d3K1AqGGel771B3/XeM34wH
XOKRGNhOWsl3Brh4tosaMqipE4XoE6ymqn6EtEShj8Ld9G+2mGaTyOGP6+md
Uv8yOtjMjt5BUpfmqU5uiGK+nRao092REk2hnjQ44eIlL2Idh291X37rcNT7
5a9/+/bWpMGP/6JUOTa5fvzVzxPcDOHpN4mTvnLpzx4jUTKUxAFIWRSqe9RA
EYoreUApoiCU+qsYFtIwnbx9mZjH/8P+397tLDbmC/djiLFwXtU5ynYmIxZl
Qwk2jTyyR8NjfRrp16Z1JY3dw+f5RUhbyzxKzGS0mE6CvvbNTeCjP6nfXM3D
iSaNcckQ+XTMguLX373KQ+8AWEXP3w6jbYhoKSeP0qWhK5P1tXP68BgMwilO
rhfgn/F3fksITNFgcFjXAYl5xq7H48D0Jgl7Hbaknw9Ve//JfAL8tRrpEfl9
6pe3gZpkKssbk6k79AdhHsdRJjzYGZ++J2Wp06xRs7zPuFA9X6tPPj/GfBm2
L7dKpWOEeG3m77ToBmernSITpKAQFkdNSNYODUGgZKzWZPhKCeT5EqyLUZxQ
x2isKaO3ob3fNSPZI0tISnxyiDcf7JIaC9bqMNLpddrdbrfeqB2cnh4fPX5c
a9WPHj/dLZ3u7RwXyF7tgP3KT955VjqqFbB/ul/gQqNVA0CwX/za7QD1Bgif
NEiJJDjWTK3us+7g4ceSsr9fbVDIDqLQIOzDPNNsQuBppbR/VGmdfP75o53D
3Z3d/WrlqECCZrl2fFypdyqdRrN3fFRvlQ7rMIFB/Va5Q9A4gfZareIgEYzA
2i3sfuAycPikReMoKt5PYigoBHCC8RRCq4U90mqaO6wxtLWBwiLjWTqbjGhd
Go3HI18i2xDRuf8G0RNyYgmCHsV+5M8i3V5cz4eBpbguPl5lmiJznO9HtrFM
tYE2sYXJF19drVajIMmz8Sr3w7mjLVeX2vjmIhPi7flmOg3+f47e7LmRNT3z
+z8c4ZiwYiIc9lzYEzPWeDyj1tJSq7vn7FstZHEnARD7jgSQyH3f9xXIxL6D
BLgWq1jLqVPn9Ok+LZ2WRtJoRmGFlwiHfeFb3zopXpIMJMH83uf5Pcjve9/2
8vnl5Yvbs8V6bLjn1zcvr+fzK6VFWGHbIghG75ZxSRnjsLG8OFsEPHaKdQnC
VjB942cRMHB7nBRB4nQFCow39VpYfvkCw2/f3Ar5uhoRgm17m7v561ez+cZz
HJj1OqdFSZJ5yoZdIdOlgRYA86qlopjhaTpbW/zjW+/M7fS73Umr/v3tqDud
LDfXV/PL68tFlzr6aWXR+pB9vwhUSHSOTujp6fAFo7qfpIzW8KL7Me9RUArl
SJZrU3lUoADYH026kj2QqfSfbYEz8/FATV0ND7+k+ArlUIjUdvq2pouSxjQb
jNTMQ14A928ZwhGqNaDkug5czT7/f//vF6vxcODEY+Wn0rkQy5hGI44O+6Nv
l/K1c/BRFhg7lsBRHI5zXGhJqk/jjIbjMgVVwPbdGVR5/p9vGeP9ebf6Lz8d
OeBy49vCsaayRzkuQFKQNyFBmpMlp2foCOTrwVrXupuqNiECObjrdrSuPwfh
88vNctXhOfHVj117qG8fj89vNj3Z9et09L94eWEG361Wv5o4YmJ2z55fGKi5
fvvcVEY9wRvITbV/O4j+6t2ix8JBhzs4wEJQHXf5nOAqls23KKcFjNZnPUu3
ZHZ5RvvfXxKVw56DHFT96YVc+iX8wwuJMXq+5XQWQztwVccJOqaBPUmy6VMt
lJqNpha9kMV8xfcCRfrqDxtTs4HPXnUlSSP36n8ffPX7ghGM6jJ/cW6qpC6S
spZxHI7BUJTAOKiJAWiL4k/z9YHl9d3GF57JhxOfjPNhsLOVNtvtAf1Jikdg
e6w3I7+t5eqlUq1aKpcqydjhyUkyIv58Jn6cyJ3Gjk9K+Uwy2Sr8yX/z336a
S9fzh/mTWKmazVbyJQhsVjKVFhzl1jp8mq7yEsm4A1+IxQz657+3MwPqBATI
BzUdxPwAk8VCrtZq1rMnB+lm+XB7NxaPMkYmlTg5SNZyp5lUKl+FyrkcDObT
1UoqUUDoh7M/EaLQAktA9XwewcEWSTfLLQgmaDSxXUMogWJohsEjhyBhQlRE
WtRkSdKDQOXcUCeqUnB1u/GCfrfJ8rO+10ESYLpee1YHQK4ij31V6c8H06Fv
aN3B8mY56yIIR0GTvh16LISrjmd3F+O+Yp611dX984uLq1W/4/WXm/Pl2WLV
na6n40V32u+PtP6kNxWUyfri5mZkd22QGS3P1jfnZ5OxJ5CqdzXqzWaSyre9
LMsK4PD2bCYiPEg+pLWKfH523o+qFlMcRpbtKxnTWHfoMJ0TagoZr78RW2IJ
VaLUC3ir8fnffPtqHUYLscnePgfKt/vMwfGP/WeHpFakzDKHIFO61u1Grslm
6e/ed0Wl7brWKEjqd1eLq9vby7Ozy5vLq9Ult/9oj8ayLWViNGlWoDxmfzc3
kVziA2GVE7rucQLNwkmWQAB65kGNIgRwL11YdzseKQMf/tTciIeQkyyLUi+i
u618Z46LgdnEeYSmRItoiPpxwp5AwFwESDcHqvFjbCWBxF//f9/1wm6v3evG
f1EK3KDxrBRrTFwFrKeEXh86PST0zkBAGAUlHT4qZFF1GZLvKBJGd2i6Ox6B
ifB+zl/85QX7R//6QHAnXXUqZQvZrljAjW59q8h2+XrHkhlpaMFoVzIvnChb
95V+53ZF+Hcbi/fPr+L5ySyKbX2I8C5+cz8KgM+QqTsaDlUM8UkQXbx+3l9e
2W7YbZ8vV5Z4fyecUs+/fzGZrReT+cXXU0Tpi3Q2+enxK7q8MONpsTqra/Nu
p1VSJhFDKs5A6tzOZtNut2dOAk9y7HZFozDkQOq2319jT/egi5e2xmWYUd/v
Tfsdxw9srWdhh4dEbusXFY9IPMEpQaf19K6j8aK99wHRdcGq5K2vlezeE+51
uF20m/qwL5oByxOVTFGwscj9ZEsA6V5XRKuIy+dACmsAauAZRPVTLaAMqS3V
btbL+n99FDlaMN06kWU5mJoPc7/qxWqhXCmW6uV8Pna4E0H5QT51momlsonY
UbyUTmRKjUf/1T/7YO/kFKjup1IReOfTpYc9hOVqo1Zh4AZQayCxA0aqCPOu
1XqclJCtf/1ULor13YaIN/Ek2xFCF4CR1DZQTNey6Wz+eO/w4Og0nc+fnhzH
CkA5l83nCw+jOSIJbkREX222CBiEmsV0sUUzON5sgIX6w3EapJFPpaoEQ1ZO
MARTVYYTqXo9V5U4CEYiThA8v+2FvqQGoUGx43Fv8vYi4LvSeDrrKekvDp1K
mS9XufZs3IsWot/thOPeaDR2BX28mHVFsAT7YwmkNUVm6HYvXFy9jJgvGHaD
sD+aX54vL1az1XRxvh7OL0fh6m5Aa9j8OunLkscNns/mlzOiYatNQH11MT27
vj/vTQyR4zh11LGZ5nh+1zwkca63eT4EoMAqZVuNk1R4NXWulot2b3argML9
PYao8tWvXo70ZIF3NbHfJHzWca0rB7m6Dr/+3fffLaQuxKXr779b5pEqVq68
uTjECMFsc8cNkpZM2bUhgjNah/jNN46uOoZkmWhs9cP8/MXtxSZyuslm5pZ3
UmB3Fsg1BGnZeH70g1v74DApDIYICJIC1RSKdaKIuZomiR2zVsxm6+z49aUf
BiqvwVuPfDUzq5F8jvrV3Cat0/zXXzcPXf2k3GphkL3S9nbl1J6BF8oa7sSz
yPdnxM9B09Gm4T++6rQly3NWwL/NBBZRZJDdzq8DvFn+4E8at7g8WE69qQbL
KqvxRrwMMIwo6w9Nd9qDS4uIQm/xSZmahrOvqV/822e5/gZxeMsydI7C/L+9
N53qM2IzQm0BIt1ZhxYVrLfqn9/NzfnU/DE8KOq2YrZ7I9DfzKfPv3tbTdtG
9+2dms07Y3kMEWu1PHJsi7zwF4vlcuaaw//0dfIL4+p6UfzCfDfxpya0en/x
MEMTaRxnhOOPR5qje4yjv7zAT71gJYD8oDeVic7ItWZnkSDM/WnAsJ1nkFK8
M3KqdtYHL+cl1DWnD2OiEvQyjLLM0DHb/Y7QHkkpOv3ZH3z1susOflFEQrTT
oep81+QST+C2o7F0paq7ZvK0zoIDeZp5itisSVSglvk4hwEhn95CO+2AYFZt
jMAJvJiHKy2kip6pcCObbsuIxi4l5N1iEvy7D4Yj02A/35NdFOl1Ofih6W++
UCllig8R/3hv9/Do8CR1cpDf3Uul4ifx2HEsVSxt/fe/99NHJzux5uleLput
5ouVShVstVpRLGTReqUOV9JZulYyA7iBFuKIUawZhZKUwXlSrCQqtkL6buKk
sVNkgL1DophIxmKnx3tHyUI+cRQvRBmkHr1gpYYSMFpBeAJoVkESbCA4BkYy
04IxDGgSpQTMUTiKlCM2aGIiE2swmMiSDNkCatkshkDNZLLwGTjtdFzb0ux+
m4KtdYfShs8vLK3b1edObfcQW/ooyCvtUb9rCKod0X8wGK8ms2loDoa+L/KU
sT6zYVoWBAzmDWt0vrZoxXZlIZjOZvPZdDC+uzyfzs/P+tNBe7psmwwz2BQ1
3FyMx5vFaOTAwcpAPq1+v+hfX758cT5maZQzdE/WhLw+mbdqObZKBSErI3xX
qR4kMlt5qa3MO+vvX12tIMztvtBKpfvv3kwp2rZ80S5SrLi+CR0dJi++W8xv
X1/P11PDE0qN+WZ4/EWrCRXK/qC7DDbf9EEEZ+GoekUCNc3aYVK8lRRtHBJT
zsFy5/d/8eP1xHXU/sAnDuoOmnCX/TGJ2qQsldXNHAEKh+RvXa164o57mizI
Kc4tYYzT6RkYQIG1uvBy3A67nZ6W+RSfZkodsdSA1LGk2VQdmazEJ8YwnjCm
CtObtD5LIhl10CxBdZSB/xj8u5n7FYOD3F+Of/j7qSJZ/UmY/DfJ6wVQZpvc
/V1H6cr5P/v57VX/MgztuSeYQktVqFKdrLQ69kzRydbobub6GgjWMkwtbwT4
VjY/bdyySURuXc64PgRIP3xvkOkj+cW1J8oa5wybrMuOrkNneYEOzgrtvwiP
GdkTlMGi6w3P3Izy7gqW1pPQt3VFovvOuIFey7WhO3H2vNl55zy4uXSk25t8
3LtZj6qfCL++Dhf+ceFM0WfXvSYuVjL7RdPRw8F5b/5368Uvi4sLRVH5Jqeq
vHXO1gZzf9QVbD35ZVcOJm/D9NAVpzLZdXGbQm8u5hcm6wzbvheMTU73LS/0
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
WRp1sCZUL5SaMF7K1Foi3eRtpFXmLUMJdFloS1mpUcwTCiNaBlOtUGj2+Cgi
/GRU/rlyLldI7W0fnpzEDne3njxL5Mrpw929nUd7mZPtL/7oDz5/vJ+In0bl
mk4XqlUIayHNKlAEG9ViIZ8pZpO7BYZgdMloGwYHNGCJ1rw65tQ+/Apij6n6
Xvzp9tbe0enek63tp48fP956unWYSCRS6Wy2VCqmTmOpTKpGoXWgVKs1HxoR
lwoAzuAtECEYHm5gDy0zUqmHR1IUVKm1EKRegGjlYRKPrPMo2gQemoajjGBE
AqA7w64IM73+SCvsX0zm5/p0XUqQn+AoVD+uwtSkP18NfLcTdDttnxOnV+ur
6+X1ajwJMZqnoGyhVuMwnmpkcEvX9YeBe3VyNF9tena4Cv31ZcAytne2dPDB
1SCKmvOb9Xpzcd2zIo6Y98LusNvuzyyUX50/X4eevr7E1zcvxuFYOiq7bLXJ
wbykKzhBiv3BaNmpfn4CJPU3DrEFtLGL54GrbW4m5y81jP7t8s/B6VS3nQp+
/80s7ITm+K++fXNGlfqrHl2XrC8zpI8Z/zCONezz9eVENdjHf5Q2OUkGCFgX
sOsf3vYMgTIWXbajuQwJ7NUpRLq8e/fC0tXskTLEK5xr+V0e7Q9MTTZUQ6ia
08s23yd9a6acij6OiD5cziVxC9t6zL19qRJOdu/RjgGdahzO4fnjYtBoGlbN
SmgtUCrD7WCwHDBwswhhOMBUOSixDvMdq+48KX15jJZeXtvG27P5d+Szr1L7
J6mKTACd714ORp3G3k55YEbuQa96dxoYY3XsaPybAbxb4qJ7qvBy2Imymkip
HL0Kq/GfcsspdMbJ2Mg78ad6E2gvTR2HKcq16sBJU7GlND1qr3/1ftQRft1F
7Y63w7dFmTJsXpM69sCSLBwJOpUqpyvC9TDFyvxLG9nqyADNfdu3xbmnj8JR
t+uPDXp81muyg+Hb8wYxDHWJW1Jpk98BhhNT2OpfL4i7Wc8Ng7btnc+d7nTc
lqkmYpy9nofLCzL907jfaOgvsRlDKMNuKLddg2wmds/uf/vb4XC8vG4bltFr
6x2q9KxxhpMsHfsXjZvC82VQz7dUylNQtlWoUA3OT57ANdbtuicRQbtyMw7y
xjVwZrSQ9D+veOP3F5K/oVGLm17PAqQGQ/UyWCaaOaBviXzPbpAsBHEwzJve
sP45STezJ6WHASUiU8oD2djJSTyTTZWqmVKmVEsdHB0en8SODg8OdvcPk/GD
7ae7z3bTuePjdHxnKx4RQRQWytV6CajWcKBRKxSAajlXKuWy2WwDpjFI6weO
KYkGTUiCQtsju/b5KQ6WpPhHn3+2FUse7jx98vjLJ9uxg+294+jSqdPTdK5c
KpajF0hn60i5FIX9Cg4hD93B6wQOQVCriXI01EIjGSs0WEVlOTxXrDfACsio
UeWncFbgHs4QNpstmCIaQuBaljvquzIK6oHDLC7teRhcDCqi8G8RQqANfeCE
683AN01emU/7kT1fD/3Z2c3d4nxIlQS5km7wcIsHDRk5BYx+zyCASrFqbM7n
i1F3uYnWz6zNtRqw2ulaatgZquJwYg0uL67XdjjvD6a+30Ho62XjZz8T317e
XQyEnmPerK4u3I6Lx+A+mq/A9iCEC9U6q/K82yOe1exH0jCoP1HrxPXowhrM
FevsfBUyl37GNq+Ip1bm8GweOg0yDG6+GcqWNLpyaGXi7MgFBuT72pXttsOr
bjjz8x//ouJimXylYtTS+vvNuymvd/WeNrk5Y/VZNRtqk/nkYiFZduOTRJTs
eVnXxkPF9gz+eiWzEs6e3X5DsiTJjiy5Mw2AJCZBu3/2iziClU9bmuq5O18c
P2z5CB2foMhKWjmGWxxd1AIQsrgUOtxcDohCNosKtWpLboPlzu9eKCiJZEP2
42elWR+s3tzc3FHlYqv44RbkGBBpXdyupukyMr10ktW2uTFbosebNs+iqh7J
vQtHyZRerBXO6dAHLVXQpVTj00OxAweYpzSEiiZUGJr0bLyplw8bnEKDXNAX
AK8tacHd2HetrqLcF+K2PiY7MjJYvrjkps+HMLK51B5a3qgBBSdlCLREAtuU
JNbrO/3f3a9o8Woyboftuj+RPb7KeN3pxdJ1daQRFfL80if7d0L/y/3ltN+7
9vOrkHreSUpquGjbfpQ/yP7FYjSgW+BhehplEst94VT22WF7aU31qOgamuBN
X70chyFXKoozi2bKqb3eGwojW8C//iD0r+6DGsoJlNpKKwZKMKwdANslTXWe
d0//TWPelrFMdY1wL2+GPfrxT/1c2R2PjDY17u3RZyOPg5sQGqXlEpJxFNSL
/iKTmsOxdm9kVumOqkUEXEs8qxMgiKFgLRs7Oj5OZHKZTKFUTmdrhdRJ7Pjk
cG//+Ghv5/hwf2f7yfb25weJw1Tu9HA/DwAVEG7Ui+VCoVgu16u5ZCZdbhTK
xUwqnUPJehPWI5FkMJqhcbZWk8aaQ+RbVpknMk8++HQnlTk5Ojl4+vjkYO/4
4DhxEsuW8/lirVHKl4AmUKkRKILQbKOOkySOQBBGIRiOgwAkyGiLowAAZWWJ
pwmKQpo1kMJpweKKe6QiEyjYQEkIgEkUlzTTc7xh6Ia9h+l6s2no9Sb+EM9j
T5Lj59eHB1TYFdtrz/Qt019ez8frJa8thtTg5eVspcGQhFSpiPwh0tSZSEst
i2VIXOgsNlcXs9GgPxmJpIDBdVCgRV3C3Dubs3pesLy+vr2ynLYZjue3dsGY
IXt/8j999u3Z8+dD95K+XCxXuj+T6hqkFRvHW+bCgjG4IUMxbRMSh/I5tayl
2kWaWz3Xu9bthFMXg/Gs13GnrtaRJenkqLMSCcp+/26iR9cTpbYg+GPiIEKw
0p1NjNsE58xGl5GJ7ceUgZpKZMkOQWRIabWOGHfWtvx2X1OWYLYvK96825dJ
Gj2oBoEEUyYvDPoW7Ne1tWhirqzcqKDI6m1e8BxccGYE71M7v3gC8Cwc+wKh
ktkMam59BQ5NkoIg6qldT+2pRGrgdAeKWI/LYx+vA5RRIpg8Nq0nndF3Dl9w
edZGP/lFo2Y1efrs20sbb1Wwo1NUNfHOQI20sNweDSNkFJ2VUK0IbVTR5WZZ
UuhS2Eda1Yo2m3q61mlXUbrRlndE6lFJEtqOZ7esTuu0iGZYCW3QTD62K9z4
vkJZnnfmgwQ5Xi5sz9a8C5rr+AvTbc9f/PbNoJKfzo7H39iSO+zHtryOsf+k
rK5Wgmz5fSVwJ/dAZyOVJuu+3TZB/e2INlGsY0vD20FvptHyzdxvh0Pk7Jva
KRZsRsPb/kfWCpHlXNdzlc6Z5K0NTpYlky2xhZK8GI0M1ujfd7M/7YxGrOj2
ZRa222qhFVwu+cR2HsFYsllPx9s/GAha/PT3y9y0M+uavkOHI4dseCZK6PPe
yReobV/cscl/+Xju4gTHvp+hsc3XnUTMOTeejJ7p54rSppDumaP5Ms47oUyD
sOjylBf0fJ23atimP/KpZi0IFV2qPdltRlVcLwOt3PFhLBmPZSMHruaT6VQ6
k0wmd3ePYvHjCAESeztHh7vbnz2NJXORMMQTsZrAEK1qMZPJPWzIqZSzmUI5
ihvlZCyVrUC0qPWGPb9ZxCGBBArKxAMgs7kFNizgaOf4+CFoxOMn+zsn2798
vLd3fBivNRogCESBIlVpAuUahuIYjIIthMEJFAAwkhIlGoFohkQhmkdAKBIA
EomUS2QxQX0Ym0MLNC1LHN4CCBLDoUaLoFndeei07/f6Ucb3HcuzI45D4pU9
7N141f04TYKhz/s9v9vtzs8j214N/YedYcL1/PzqTBAdQ2Q4hscxzVNYCiG5
h2a/nbAdjs7ON7dXy7lKkjCEwBRYQym8G6hnPXGyGi2ubs+6nc397dV6wGNt
r7j/k//ugxdz+5vVfOgtF/M5ZfjCaVmMwh2UEQddjSV4Hmy5537qw3aPv9/7
D11S1J3B7cayXWq+Hs61q7vNoKU5XR9A22NV8LTLd/ea/VY8rLJtpoKf9T98
TODV0RXGyZBh2XS4dkt7exnWJo7LPVNV0TLjzd8uztbrnh2t5aiILtqd4fff
LYed6Ic1S8UcT/LmFiLoLQfghtMBK583oUnNRolph2ni5az2dq6M5tLJL/aa
tXq9JbfiUPCuK328j6NGrQ47CYGs/UwdA1x7MIzWtW3PVtH7KzUQtEWiPa46
v3lvYyBCWr3sZ39Cm8C2XO79zYvXvKKUnlJWsYR5jrhQdurMWDxGHRJ5CVqK
QCpwTEg0alxEx+D+LirTchCSFYZvVnZSb14DeQlFoCaxgGi/ieaPCw5XzHYr
vKA2aqBuRA5nMcBkoF4EVezhbCHSWbfDmzCcX/9w+eb5JAyAdLL0l/+lTSqh
9uXO/buRUDnMD7+xdT2i+OD59130kwqPDl6MnXbX8Ma21OnILguGdyvWWXov
r4V40EV46gWvRUDIGWIb2ahiHiwxngwOriB20yGbXKcdjBS8t9QHC00Uui99
dLc18zvNlkaRKi1IggaWwRIeetD+Z89QBkjWX6+Vxi/+XYnXHMCbdRy+N5+3
VUBokoHJOMifZ/otdAb+5CdZTaS1Ta/nVxo5VUI3s/bA6lRjohXwcOfCg5sK
Vdd0zeBQzlNllfYMgRFbVT2Y2kTHBwT5LDLZZKICNSulSiWXfDiKE4X6XK5Z
LZSrD+dv4zsHx7GHWj84isW2jg++2H66k0g8NO4+LQA0hSCNSi2fSWWLQK1Z
ByoP+wbASjqdz2cjCxZcL5BLVcVgIBIFeIeSyWbMgEkmcbK7fZRIxk7S+WT8
6MmH24eHp6f5eqWJNSqFQipXhxtAE4VRCCIIEGNxCgdBCOZEBoFxAsH5Figz
Dy1FeIVC0QZrygKsyBHik7AkPYwvAeFSUWCaDQhEuShdi1bbdx3H1hig21lP
7a2ktWMrS93mfeiYMllrOHJktT9pL5bLzTDse+vV6uz+9esIFWSWYCJNwZWO
IWscjGv9cd+nSM8xxjeLzvVqoDMwSbXARjXFeRzhTMzIDfsX66tZd7a+e3sd
3XrOCPGj//n3G9chNfv2/vaiMxn7MtYUJAjCe0IbTJqzgc3KEYGGN9IvDxQc
UcEU0deK9mZzMRmjoHw18ulXg8EkMF1fhrmQhfXO+fmL5+PV9YovJosgkm8t
jPIHCF5SXAqGGd0Uz+caUaixtCZup6+nDs+WZ7dy5wfL6K8nZmh60/bk7s2P
/+vraYBWoQrbYUmNIGbnw7CmIQ2kv4CVK+tCYjbr5lNY8rtMLb9LvVnouuXU
Pn7WgBs426icVrTvPeHjXSMLk8UTlqs4aKlu0BjPENkvuHnY7RhovliK5Zf2
4yrzzP3b/6RzAKba/b1f/injSplCxR49/6bDkQeHxtShyjB0Yvoxm4XKcs+l
zWZw76k7W4nsfnfQ+HT4vbaHNLdSpYo7FRGcEOonpZc3rebL1Q7K7K39/jjT
4B6TaFGRXJD15y4RxcUOS5itau9O5+RTmJZV3ZsKYO+qN3La71bP3847C/Rp
Bbr5f/52o8e2ykR7LNJnQQY5n8qdrje//Lu+cZF+JPtnc9FglLYfOLPVYNpm
rf71exMwL657GWDSV6+0X/sfza5lhMIG/bZKCmOa4+jR2w2wy087bQOXvnsh
bH1ZX5zPh2Wl04kugnMzPi2bJ6wEg7zrcKnS8g6rKnTi9z/UwC1AKBVyFaTP
DM7izZuJX5cChtdRFaWHXVUCPjp00b1MPJHcIcXWxfUQ9qWzD2rU7ZxDyfEI
/QqAbZS9vpFwDq/VUVbTNI5s0owuWp7hVuqgMz93DNuo4Zr6ELeTAFVPJaO6
S2czp/FcLp/N15rlUi6XjMUP90+Sp7HESfwwcXr40SfbW1s7x/H9vXg6mSwj
EFAH6qVSxAuZdKlWrz10EksD/9QgpJqKA6LESo5QhWmwmKtgpEyIXCvln6ME
Ht/58rNkOvZk+zSSmExq5zB2nMzmcqWHs37FfK4MclSrDsMI2Kw2GhyLMSjc
etjn14ARGARAEsM4CqxjsulojIATooxAvBilA6xOqxhCR8wAo6KKNaEmRHCa
onm+bT8M4W2Ii2AaWnn69DGqLW86CNIZRmwmPnxSz5BGBOyb+WR+vrq/XVxf
XS8n91MeRGlZjCTAVDRDJEneGbR1M+jRWbg37MwjMaGoCIJa9SZCuMrMl435
SvPDs4vLhTx+/tAVYDYwJKf+ZXqsSbr3+uX9WpiOe276GTxE2MDEGHX3YHLF
AkK/x5PU/hdSB0ucgIHumkLNn7avNwa5utfqRVfifMsYdFWSx4/B8+evv76Z
jWbLi0HgwMc7+db1D94fxmutVFgBC49K0buTi64vUrmmUIz79/1GKYlczoPf
zQHt17fDgR5020Hn/V/9sFw2ybtzpCmGFmdS7NW41XnunhZk2iSBTB0BlG+h
Aw5wum2QSWC/uhBwzS/9+6fjjYozUKZRjIdnmZPNDMskEtKuJNAQaAhUCdZc
oSrzaBgw8Sf52Fbam+fiTK31/d8PbV44d5HD7S3NLKFx2skQDNpIlEChHXTp
Gul6BylHd1iarOkEEP6X6wAvfLlNv9soX1Kdh86Sx4dYIJA2E/m1spsOsU9q
y3u6NaiTw++McrYvOelHYFvXcGWz7gslUKdgrS+0zvkn8Z6tdGq9xnn9D1hv
ecOkFovX3ynUJJm2e/MXL14pqf4P562YFS6vwmPpTCQG12/P//5usny8NTcm
K7XWQ1BrdT0cb677Q711+2NY5DZeS6nUdEsCpvD45W06UPOUP/CRwUKul8J3
U1XP1a9XUrVmfLsma7nHnxFmp4woFq08t5xOXWC0joOpHNZ2mObkP55Xixwl
Pf4fjot7aCJ39CnsDnRew7i1PzVtjzP0se8zxmTkHf4ZOGJPY6BTzR0eBJux
b3hDqWDXm+iR4Pp4Bgs8oAlFCm9RLZSSTdcWyWS8Cbjs/GzUtwtl624VLDoc
jPBoK5NMZ2r1cjF9cpLKnx4kIgpIR8YPAKVc4vjwaG/3OH1ymjw52D9J7H/6
2d7h9ud7sd29eCZC/UIFbDXqQO6h60euXKuXCuXSaQUs1SrlSimTaxIkyUT0
XAfAUrZGchbbqMabywldT37+6OlWNhXfPTzcO04Vs/tPdjL/1ESglM0Ua02g
WmdF4qGG0WapgikkiqFYZPbMAxNgCNDAaOZhpw8uSyyFRTUpswLPiBiESDSM
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
07cUAynD+eMnj57t7+cFT6X9Np6Emj6O4GOJQ6pyo0SwlirpTVuUnUBjRS76
RJIicoVU2eCbFgpWS7jcYEQeLEb5ByAaXCWeyJYqYPbZZx/vwRYHtUar5epK
btnZ+SWhvn4xG953hizYf2dahqw445s317P5fHXVX7yeBy7nzJrBemOTtPlq
0sNq8SJwCoFE/n//a0ZqhWzuKWrkYklv0VdjZ/s5QOjtPtxMSKx76WeW3cl2
KQd3lx7H9m63/dbiq3vBGdEvv5llPoNbX76xndV69+LldtujtQtp8N7KyRfU
+dPv/xDYfPjlxu00dVGk60R6n7HnWxvCU6eJ3Kew3SR5t1HJx7KoyrC+BiG6
IMH8uink4sLW5shKV6Ij4VMjscUca6cVOKQ9ZSqUMdmRoFVTlm7dbrHZ1hwq
0E3QuyaWbhcVrEF4ofk8IwV9Q+CEqPPjRC/MnPXeA28u2506T5LN9trmRNsU
wWyNpjGgnDk7ycFApVZHkaqiwMUyNff6o77O+ZYQa1vBhmw2OxeL9ytO542Z
Qs9WjsPjDFcnZqDq3L4Yv1v5wXhuRGEvclXb71iD6ajVGXp6OFs4sHXL0a/G
7uiyB138y8Y1ot4ip34+/PJ6022NdxN7GAJS23b9nZ26XPrE35yPhy/b7V5P
DVMMwO+k4f1gMerYXGfRZ+uOA5mB6uvdi3sfCK97fX80Yj6LXV1Jmt7xu7od
us5mu72n/l0q6LnemzmKvdZ+Xgt6Vp3yObXvCKnhBGUHrRAadjGcH89CT2ze
rEUkeebufGYiRQ31WLGm8iU1RjJZiw9ftdmzxz/NU0jDsl2UnPjDleOFYdib
dkQo+Xxwv91Wf/Tj2uq362U/0PwvF/3pfP4w2GdX+bkPQZboE05gOdS0awmy
QOC1IkHXU2eps8/wjgrWAZio4sRhRYqcHZc6LZGvSnpbQOrVaraQiSJ7Klko
ZaLSz2byhVwNxXGSbiBFGil9+uTscQZDwTohmK0A/9FnrNIVf3yuYmCDqcSe
/vSLQil5/rPPP/8sXTw82T8+j8cjzYlXCrFc+hiVsEpq/9OjXCadThYrxWot
X6pDGF7KQpVsqg5BpRhAlYvnKTgXcUc8ct/U0d7hcSqXhSiYthUWquYy8ZMY
IfJeL3qrtU800AqydpvjBRKtNxrJT3/0syfn9QaL6uQRSBYorrVaD1iKQEiy
yqiOpcuurpumJfIcDEIwQ2AsXE4RtNSAwUqdoCCUpupA6qxGijKZSyaytXox
nzxPxgqeWJKvos4SGGN+8PKyOfgwvfzyq+1t4di8CGDDkLrX19PhdL7a3d4u
dBGSMP1y15oueHkaLOUplYql8seFbD33f3wM8sOOWvmCHgInSb075OXDP5cK
8Gz4x7FCKs0pIS7c1mQzWb99NTS1wVe/fDEK7raYv/Xc25XEFw88aTxZTAZv
34xC16u0B14wEr75H0Eyf/ivjn71x5cXph7htMCAPPvomRXuRlw1n8+mT2gp
SikjL8o1tajyQMHWdY4jBBHGIdCcDewAJwWC0ysIjkGC25JdW0HOzUVfAocv
3Uo1QCq0RPgWBf5xfVKp5aH6mt7eKaaFEcX+h0nliJyPRI6VuTJXKqp2KXX/
zcWvVibGoXlxOupiddqy8TrL0ihQLkQCi+N1QqqBDO4aXD2/b14OW6vbC5cP
Rx1KNxncCbnhb+9M3hw9jO4tRQaN7K1WHC6mznQxv5yMEGqqIyrlik7kjlZb
9geGigC2N93Uz632lx+W7ck7PR784c3dIPD17MfV0XK9aLXHu/nmZuX6i/Fk
vgnwm3d+Mrn6Ty82t3ez6BMX/irp3vzHl7vwui8ToahG/1PFiHAe2pJktueE
+a7Xs3z76Efo5JXN+e3Jxqnr09e3m9mt+wjYLlSic9UjdnoMV/pbKrXBPvVC
lBv2QH82bNeGHTyI11RG9a6/Hmla7aNUf1S36KK4mHOUzho0fyB0DM39hw9t
ncr96Z/AJC5JoqbLEDzrGLbmtN0rPffRsb/uURWocfOm7S4uOoq16+uqFzZ1
FmFxbBw0PVeoKW8Wg6E67Qiq3OBoUuYaWO48jacbQrFUf9hcWz465hoVsMoO
BhLXI+RyR0JLVbiUyySS6cj409lkLl+uFfNlCGUFio4AgifI9MGjvTKKoCWW
xTkO+PGeozLEYSKVrxNRET/ZOz88zZ19EvvZX8Ll+N7B4dnp0VHsuAQWUuly
CWigUC11dBI7S1erDwtA0nkIxii8nKyWckWQxMnsOVbOxmto/jSfPj5LZBOH
R6fnmXS80Tr8a8zBa7l44vgEcxy90+YIqpIWax5T7YVosZivkgQF7v3wp58f
5nAE9j77CL+QKWewmi98jQMAssFRpu8qrtNsajzLobk6jlH1CkISeYBBMByo
gnSkAjSPY4X9umzbApiPP0xEZM9jyb2DKOHV72YDQwu64QtrYbd/9+bu9W/e
vpcOhh3NGo5by5uLQW+6vlqvVwYXmmKu6m49y+DlW8sye14+lgNpBKge/BDk
0WCsVUGfyrqeKrcYtfIRDKgM+SVWPxgoFmv1jODqcrtarQ1bpp3tm7XbuxmK
yty/6QADen9Vnw0W1/7d3W6IauBw0+12Ov/jv3s5qf3598O3U5MlZcOSCVCK
4kChMbnrAghw9AWFcc1wsuhTZd3n4gc5UJ8MNdr2A5uOwv7MlhUZ5/BUEWM4
Kot3PVm2dQoP2w2MHa7JVENn0JzfJaVD5js1UcILpf7blN5uTUQIOtA/SIm6
vQhIRmi1IUllJA6orj68mA+bMaRQvf+ma3MU43oUweLlUqVURQgcPM93xpV4
g1WG3cLZJ6O//+rF8PLlgB1+O9PYgimKtuh3x4HuacLwbqpL+BnCjafAzVfr
7maxWUyn0pmkKHzVaPVnu1GoChwozluJp5g7t/LZ2cz2I/aRNaHz5avF2syf
1G6GZsfzNutldzDttobzfjAP4Cj/3FWYX/6XXWt4vVCCBvB3ZXf8y29v776Z
lqFL8mltcSekcc/vd85y0Xet6L9ZuwB8/vg0cC+DcDq7v18hQ6u/cPmATiy/
6TkRSWr9UZQy5fWopo7xrOQAXX/ceXvr8OTE4Vjc0urE4qY7WjoK/mn2SsKQ
8uBqEwSL0Hu4u6thK1/+YWZZLWbvTw5QRWFB1qYh4dVKsYxWV7rnHn0PEWWC
vnhl34ZY76bd3vIdjxFbGmkEBGcoFy1dZWjAuXHsIekteF2XZZTTDB45Sgha
BarlqyAAIY3cX6dHdB0DKS/k2Yl1SrENoJAvZdMPh3Mk8rl8FNBy5Wq5gpEU
zxEMy7GOzNZST/czUZkUwVL88LT0OMlXIE6o/WAfJBAwd5RM7MXSTx4dJY7K
QOrZSTx+dnJ6li8Xs/lK4TwDlmtgLXV8cpYCoEKxXi8Vo4xTB7FS1CcqeRAj
aql8KY4gQPH4PBFPpouFbDoVteckTz/9uCFU0rHj5wfntOb12gqp8mdimNEg
fWU3YAzKF0qJ86NPPt17flpAGvTPfwCOWb4XLOcjq81hIBmZG6u7jt9xLVOT
RKoMiioLg1FPRDEEZqlyGYtEAI7COVc7rYuGKTycUpAriRaSOXuUv+jDzt3A
70ybiixY69D5xavR6+/e34rprW92p5uLbQTqnX6v1x4uRv1uHzuXmx07LwHq
CxEylQ6DgBAGg6m/ywzaYbsjNYb9wud0lOeY6FmNRMbjUiKvV2/4QPA6jHQ1
2134Y09XZFKfBN2rVy9Ghn91dyXoZ1TLma+2L2e79f1a86TBVbffMv/bf+2j
mv7jH3jfbsBajSXgphQB2zlwfEL3fAjMP4tpZEkbjj2N4qebgY7nDqFhW9Y9
s3UhslZn6oGIBE2m8B4xXgDlJ5jH8uOeQDMSJuqM0YxggbfA5lSR4WLIQELl
DP3jW3TvuO1jmEoXTIHUvWbbJhmr19KbVwLRtLjxVuswVD0Gf/fKNHWVtRSC
wWvpXKUOInijeOzfKBSkUcVgs/9zZHcx7SjNjUsPBx1FoditRptjx4pemCp2
egohB0VmMJ6ot3cPc4Pz5cBlCoTk+KQRdm130rPaTvv1q3v6J+XFYkCfFGhO
bMiargXm1473zmj0F1cXg+F4drXsaHYQIdPY79yYj1lBW8Nn4f/3hqI6JqcU
CuiXcvvlh6+//oc10L6hHlGz9QJI2UHXRRmWNB/udDYKeykF82fycOHMOt5N
ZNyOA2qdRPbFzrAsPU7etTtzQZxVgJbOwvCEqEr8i7sxJ5Yn7YisjGbAr64a
xhSDRyefhBuXaS0uLq76Xie0fcwDreTV78bNZtvF/vaH8uWlEs/jlDZ7dT3p
+i2tN4TSqB+pI8GrhgEJu6URjDo9jVR8C8BFK4KTiCJNBYOFkIOxODqwDM+J
DE81iOJTsMERsVS1VAEACM+lwhFShOAiqbYMFK1pxSpYSMRO4sl8OZvOZRO5
cvbhAI8CJvB4HSYFQTIllU999vzgMFlLnX8WTzxLPv3bbBIxmGIWj+oGOIeV
yvP9o4+e7KePz/PpeDKbz2ZjR4VyMuL8dDydiZi+mjlLxFNRlyzXK/lsCSqk
yw+3B0PlZLGUg4op7KdxCKgmY4nojx92GiaSiczpo6MqSdaLD078eTkvyY4r
W2PzMX3J8ybRNyO4QSu180/28mdfHD3dq9Lw3umPy+1cwybsjWp2eJ4mKI5h
RN2OzFhXI1+lEFKXKYomSbyhgQDbwOEoJME4JhgmEys3InGolculbN667IH7
2aCvC+r1aL6xomILtG5zcDd+8+uvX15pwDi8GU/e3K83u3F3HPII1ZsN+m72
ZDaXZHqJNX9pnaM2A1vseTL17OPn4jDsOb6hLtY+TTmBzSohmUZ+XvNARWrs
LiXZHXrDUW++VJtXC1qddJxmZ7S82V1sOiByO1bsbQQBvU1n/Lb39iLUR9HT
l/P63f/71ifjPzy5+48zCCygSHakMGTteSHxWKllY4kKcFyQGHEx0bhGOFpc
L0OpUPNUsmuYTS9wWqrgwlEOHI7pg9nvFloz8VNEk/2QghpWDTDF7kpBMUOl
GortIAWMk3TyafOffYL5cR1ULzvCebml5fWJaU88kJs3jbcMaPPWsDesFa9w
hPtuZdsmDwmNWgWkGhgA1HIVNFmbd1mB7+iw0/rZx/NgEoaMvWiSFB1KDFC+
7wLkmHe7stRp0qTeJnQMXYw5+8PLEDt9Ttx+O4uC3KJtU5KpRmWuNSnj62/W
k+rPsYCZDtHnnEpJ583J8q3W1bu7601n1hSGu/VifhEKVrvTCjRhfNNldE92
IqX5D78lCNfJ5g+4xdXVw3q2X7waCJNV4jBYLKeFOIPIlm3gtoiLwXRJaz7F
jyTGWIznRsTdT6UXA6oBfz/xfsM1Dp401rfj9mTh3SNERXXCoHvxEaFOdtGz
JuPIuWYOb1m3lzQlSLZReNJedDqb7bC19iVLgiSBQnrwxW8GarNl0n/2dLUb
teQolttDRRmtLzTAJuPF4d2os6BLwlRBpaYh+YupJwms3QJO86pEt5sGBeXr
UWTg4OIRc9vvtjVFMZoOdPQ553Hlk+NkMlOoMvRBYWrVq2j5i3LeFrCIStE8
UkudnpzG4plkKp6Il9DawyK/HEHAD1sEWJFqiDyLplPf/7gYP9tPgXi2lP7J
Zx9lGxilqKYmI+VcrHj+k70sVD9/mjxPp+PxQiXK64VMop5JxNO5au44lk+e
xc/ztVq1Xi9mEqVq+jwBcpzAwsVE8hxKxPm/+DuilEhFCeTkrA5no9YkIhXK
gRQCVvNFMHuYO2lgtCV1hSfAusmpcz/qIxItAwUotgdA8fjROVL9+EeRbbRQ
EAf0yW5hSixHc4IgGxIvShzPNaI0yao6TyAcQ3OaUq0yrKY00CrGcaRqcGcA
L8lsqUIisVOs0wTpTlvRZHrQv2k5U/NlFzrqvWxv329Hi64kghGWfvXNpt8a
r5bj8Zgri4PesJVJdua8YL+25bdWDUIxMcuff/LoaYXhmySaw7BifxPFdMJe
eoGPfwxJ6Up8PVrcDvvhcDXdXfb7bmX7ahisV6uxPRxN369Wtzf9shrIF/7a
jTyEevnNeDOltemHv//yqs9SN7/tZhNl6ff/95iFCmUCV3kGzh4kzp5Y4NGB
TtiFj0CTMUO3Yl6MB0NPJWCxayFhpztptkQCoUWaVnoA46Zv/xghE/C31Y4J
c6ZKY2COvb7sD5i8ARFRuifs6i4AqtXM9r/qVOown3uxtJXkfujC+sTjRcNQ
+bp9iYohYWuLroz1K0TzF3PNUjlEEfJFSjc4qF5MlQp76MyS7dEwCKTip+w3
w15zwPYuiE431ffkWmV1ycNd2t+1m5tl6DhafjBFKKLy9j+t+s3pk79SPgwc
NyIplDFcd9R3dTPNvnu58c9P+s6TcKHWcpxYPW4O3rwede0XwysdWMH1zXwc
Ti7XHqiO+yOpFLzwW9+sthssy2KvLrtrLHfovrsS5ysay3ndztYQoDK1eNUq
GRdMw2l6nTVb04YXv960kMP1hKPgyavlsGmQ2fb8tl0sgMzmXR/KiJPZdmO2
3HGbA/Te9n4WsmfyRW/StK2xK/Wc0ZxA9NtvumrQMxNfgNfN4WY9n9v6bDQc
9LmVri76r3/flyMXyvwAWXSbrtdxz459KqrtVwakNQq1i/vh+kprxztqy1NM
uSVGdmY0TL+8h9so4Q2NUjZL6KVTSU2lYJcddkzVjJqPPj9HLBICculMplgC
zg5IluFtlWRQkKyDUBXGgAZRKxWL6Shwx+P5QrYKAcVsnaGqNfqhZiS0wjKE
AOcOPo+fJGsoE9Ezdrb3o71iA61hvMBDp/uJzOefFDECiqer8efp5HmmkI8n
yyeJ/P7RYQaCsofxdCyZjJfqlVK+mImdV0vpk5NyQxZxCE0l4mDhs/oPUkrl
LNKo+FkKJouHx7FkNpvL1SgKAmsgmj+LJYkGo3FBIjUMClbFNRhZ4RuCUAak
fBI5Py3EDz77QeN2QonVAwa1ll8PcIoSG0KDlzSZYaWIBaJf0JrNEgwBQpxu
8kiDZCOUZmgSZ1GWZ/MQxTwsWsOB1NNqV4jKxAwdQW1tJ9NwYXyn45+P3zju
i/7NujsaynHz5e+/erhsvLPaTZabrtMfBFjyUBy228ayQ5l1WSA8F+3AgKI1
W2zmUaZcx4/RnkjHvqDebKaBXE+LDpIyrUF34aHtN5v5InIYaLkevXi9nU2d
5ubm7Vh0ry9Le4ZODTfbQXuiff3dO71nuBf/z3/5us35ep12W4EofPmf5g2Y
5GmWJqDCyVk8qSy5vX1PIBnsEUmCDRbyJ/3Q52uA1OQBohkMVrtxI0WF08BJ
6xjhwdIvXw6C5M+M+3YNMhsEiQLcdheOxCoH1Em4woPCLQoyJ9XWf2+qR+1j
7LrT8rP77qIpEN3QXjoEynTGoDlhbcHnxQyfz80+vFQljgQtu1Rlm24DrOey
mdiZdhcarcBxMLKet5ur/mo66M3UgUDaPYVh8RWf1UyltRiG4XIjVPkXv1uk
T1r/bdxy3K/tn/xsaRAa0Wb0ge8MRxdyhQDwF1+NLdkLlfqoZyHnrF3v1V++
2d301x/Upg5u1fZ6uw395VdawfGcYf9hM/D4q+nL152jHMZMu8bHvHH15WtG
eD0xqU+Mq61TawRl91uvZA8hQBTc1mIsj1uDwTYsmptp1725u7D6zkyS3uv1
YPVio4vt+fTu3Wywu+nS0munWpz3ZlsXyQLWYhSGWks3HD9si16d9u6+Hvvc
6Z8nLu9b5nB5vfGNmUMEO8XXmn199/evoLp29NmBNo1YCFO8k5+qQ1YZjSK3
IsgSoVwM7dH1Y/qL8fqq7zYRDHWuadNPUPeX1D48C1goT9kIivebaKpbGzRV
KSLelniCqwiA4eVMulDNH/6saqGSMJ7M+j5XKqLlQuRSLExiNA0DD6uAyuV8
KSI1tIGWK2hDkDTHwBEWoxpQsZj/9OOiyOBgqcyWD4DkUTmZL+ZRBsxkSsln
MQwoZeP5SimXfDhovJQqA4l0PnZ8eJiHqifPTx8OFkz8z4GF3Hkyfp5OJFGF
ZytFqlAsomjm2WHDRbOxbC52mkY58PQoFSlIqVhjaKBaR8Hk3kG5CFMG3yw0
R7RYwRxND3lxyJNIASGOnxUINvajn/xMnLQN22GaJjmYYDiLwFSDjxiAImlW
5KFSLUq1D+MBMoRIzSYHU2hd7+gSB+MsychyvoAyps9ABBT75ECUcmzX6MwC
dXw1tYILvHddZsZN3L+dTFpgf7Ym1Ms36+XlQslR7d7F3bbr9fps9khtS+zo
3hQolmX5tuWbHZtHyq30x1xgWgGQ50oI+uPn3rhrK0qj4RgKIpnMtYsPFqv7
i5qA0pZz9Yff3XW8gaEsZmol/OcX7MGR3nk/3IbDW/f9u6m2e9Wc/7d/eDkY
jS5txtB4hlr+0wtD1HWBoXCkGi8kDi98j/k4dDjROgDLpKzqiBS6Xu0MUdpN
HJdlReEtCX89oUgret0B7llffzsB9+LOZZBnXFdnQEKW9fla0ELyi8csgdLh
UnaFtAX0ZhJuZRl9dtHJPaaWBOS83HgdBLdos085F6JIUhReZXOn3eEvxjYN
5ZuByGmBFX3XhbO984QVWbhMBlO5fmReqxdbd9XzDWNmuRaPyXlp59GMHviK
ohmKMgxQ9ut+OqX8Sz80iKCXeLJj9VWS6i8tdTGxWNFVTLV3c7kcdoKWNxn1
w3xpEbba728vesEvhh1U5MfT0WR23TWDpdMPCSXstsOHFcPLyc39Y+KDSeog
JX37h+XmjupaweRjeurzKom7LQ+H+r3MAS/pPmtP+6JGTcJXbyS3c/P2t5vO
VOcng1cesvu24/RnItYeXdz0JvdDyYhi0GA6VHhE5HqLydiwm2070qGmJ5i4
0+LGX4bpRKWEmivP8K1p73oy6HCKyQoNl2oOutVK/RDQtnd9nkOkYerk/r3P
9dv1shOmq0Ul0IyBN6oXhJfrqbO41ZlwHRiEfzOfj84/D4YeLrNptu9RrUIK
QDxFUk2749TzFluuY3C1VIIbVP34eYEwOwNHUZIYVa1ELx9EcBIiwGrtYZld
AaiXimUAJcFstopHRcEQeL0Kw6zIgED5qLRXJlGwDOSOinJ+v/q0LhcL0V/h
xWIhXynEjiPfr9cymUI9kz0rApWD48LxyeFBrR77NAoAyeTxeRlE4Fwym4oX
0+dVgsTzqWIBQx+2/Tw7o6FcLJ+NpAFqQOdnhWImk0/n0UYtly7BhfP9owqG
AHhgsmSBRD3TbnZN1O3p0BnVr/7knKbp/A9LzYGyfjPzWy0aavIy3kAwRlQ4
CCBgoMEh+TSoiTApPCyNEgKLYwgKYZuKKsIEipNiOVEltKZcK8D5vSefpmiA
Wc316bg3ng/bU53LSaN1yzK/e/cV1e/Np37z8vrycrceueUEIoaT5Xw2CoUq
oE+NmrKVeUE8yivXEebip/t1ZtIABSG4vgiw02f7RQRC/T6DQkVXz5adcsF8
PZ20JLYj1AMIrnXfXl1eL/pMWdpuAPxXvx1N/J/V7u/8y93dV+3lhbj7zb3X
//VX17f3u63T3jSeQTR+8+HC05l6nSSrSNT8Ur9tNo62XduG4hxu+EanKYl0
7aRAK74to5TQIAGMfHHXZlUaf9E4HnoaLCl5uOmEULXTD4RgWk1i4u5SldVG
bD9sQ/TgSu23fZtnW5IsWcwz/Js1idlSsbr7Q5MZ67yKcy318puAgHqHkNYv
Inn91UXINmhblMqSK1D1cr1QpGHt9cLkWXMS0KfCJBRvVFZQLcPoz3oins1B
m2s/GLYm6xYCMWxv0Ql7XV+Bf/X325aBQyfYS5qUMWOq8N2w+6A4irmcr+8W
rhm07EnfCODyq/lo1mwF9q+m2prQxteRFJj9bn92NZsQSBB0l75qM613mylz
cPVqeidPb71//KBz3S6oTrwvjkeGdaGXdy95ZXEln8Gc02zIBN3rIc7wejvq
T8TLxYvFdKr51qtfDoVgsxi3RxP6HF5eena3s57Z4XXP36m8VmWRsDeMs1cc
Ifshb7nmYDOiULejm00SOwTulLQwm008dzlJwHR3sBQtpk7UvOkYrZthixf7
2pPEzXVAMW0XYpoxwpgOUordvplKP26PwtE3G83vdC/DnDZw+sbTwzZPU2at
tPjDWDTlenKxNBTfRDw0bUooBGNk5AxgKV8DEkm13WsRGHz0HCaqRfDhcAAV
B4vZ83S5EBV9tQpgBFLLp/IggSE0Xs8mM1EYoCOGKGZyZKFSBHMo8gRy49R1
6ntYo0QLaBXCYCB19PjJ3qcHuXLm7LyQKeTSYCX5LB6PHR8dp9In57FYJn6U
AmsVvHhynj0/PzvO5kC4kExXYArMFMHz48zDcYARO+SrSOn8JJYrVYqZfJ1A
E7FstZhKnJXhzHENwcpIWfAxgDT9kQuFzVy5t9byKYg09OpZTRSup5wqU7Ig
BiKmkhjKqxoFQ2WAptFSDlVZCOM120BpX5N5tsFrWgS7NE0I2QKN0Zpjo7EY
FH/06E8/Fwhhdj3vL+a90d1cyu/a/df+/G339sWHRutuOh0ublerV10jjKC/
Lsus3YrECJEc3QORkAI54Uc/JNr55UxymmT9iNwwT6gxhbS7Mlo4BDtsKWzc
zLIHVj4HPn3i9i6aho7XtALaYFFn0Hv3ftBy/cE4BLX/8M4xuon0vLd+/eKX
v/unt6PJ5e8/9Mj5bLWcT7Tuv/9N62APrtm//v2FGRF1hcyC2dN40OoBWW43
VsjncHs6UcuqqUFVgsC5oN3q67wMN/A6OG51NEssfmknQv0OfcK5pv//c/Se
Pa7jWZrnt1ksBrOY6Wk71VNVnZVZVekq8+a14Y28N5TovROtSEqUREqU91JI
Cu+uzbxpq7qrZnp6e3oXgx4sFov9CvtqgWVsABHxIgiQ+pPneX4PgzxHFVhl
UGeJ1SoXoRSn5zZFNp6z2TJTHJo9od1rWyw2fOOS/qlvSRcjFJdqTcnYDLWq
RvCLm2azoXWRktkvQo4QufnJyQh6rMgY5kNrV0QsMUV6diKigsLxcJQ2NWVB
NKtNt2KM+jW6LBna6Xo07Tfaq1o2AcmNi1fl5sgdc+BPfzprZj47/nZuCLh8
q1N8UzMqnu/rVHfSPd949nzjDS4McV9584Zzm/KI+1ajp+50fnI5t7Vad3Tx
amTq01WtYpB+QuNb1xYw+/785f35Wafy5g9VTkP59nDrE+kWLXSGRuekITdr
YlUrz+ij9hLuXM6tfm9zfjaYjprzyd367OXl7bzJqJt5f+KNB4W4SMXRi+tJ
p55c3fU2vW6JZ2MDj8Rqoy6AusO6DxLjLoOJPL38xq53gOcr4bh8emZC1ssp
9YvHJ4bcdvwQlESlqRnep06WHvvVc6VdMXR1ftZ+8Rum3FW7GV1RLu7gP2/M
Gu7Xg1qtXJ73Q6lWjdz5ZVHZycoCqvVeKVjVKW0v5yXNrVBK1W1RvqdjJZHH
/PpLpI+Oq5v6/seZk9oOQMM5EOf8Q81FIpFgPOnjeSoD4RwO4WgRY3CKhzLx
OETyDJQKAToSOQC+hHeSfsp/FlefG/eLj3ZZiMPjR4cZHztjW8+/+PDRfvgw
GIyEU6mjSCETPkrHnmwdHcaAQiyciR2mc0dHILSzEzrePQhEwvmCLylZnMRT
WRIA4SKUS0TDmUQyHw3ubx8lAaBIEIVsIJBMhMOhrZ3YTjgBZUERoxqFjOoN
+ksaFrXWaNaEdp8H6GadgsNsa9XWVKxs9WwOs1iQEBWlVEz41yDnp36Bh1CK
8rMAy5f1h6YJkqygEMYSjLZVEItM2TSxoxAQ34tvPUNKVmc0dRqzi8msymcX
b9+N1VdXMj8Y6WfV8ZtN43x+cypTFR0rUJZElh1LgUXqECap4YnB89gHWxOu
uPLG9qDFI/t0JRrJxgusrhA0K1jVw7T3X+b8zxCCCCHwON6n2HKOuaoYDdux
nPW3b8fD+/N2r0fnfvjPQ1902Z9+/7r17uXty3c/3v79T3dewZjWo4TNfP3H
cV/diuvy4tuFWiLxYvJpKBwbzVW3ZLZwLkGAcHOgujwtm6YpUDjT6Fqywup0
mhJQ7r4pc742WQt2fC6HEInlLbOjUA0Nnp2hfipTS/zL/t6eqqcYle5UGhmn
WVWLs/9639FV4NfRxVQVG/W8NCmpk1ZFldnhD1x1pJLwD984qPsPm2Dof3xj
trWDlF0vl6DH+2rPLICFkN7jDZGgoz4S1ZZY/7U6cBrjmc2Xe+2+fXrnoPVh
azBR/Kiyfj/3DwbxqjH0239aHsSHP1VIxs04WbbbVLVW/2zdMtb1kts72Vy8
nFT9VMC5JysPikg3SI0nem96c3fWqDUNs8lPRmq53STibIc7Zkb2+7e3b9ct
d9ZvN5j+P45GRacmpD9A1z/hGc8nuY5KNquoMdi0svHpnSxftpU1D/TOX52f
XCDg+ur2+z9YBbpyMtfE0cCyxYdWU7WboVPVoNWrs7s7b7EYYUcu3zN0SPIL
2yBorWdAnFTG2Y3JiuTB6ZWzFzSl4vvX0oX4Z5Qo1yETwElC67kakLTW1t6e
Pmqhx/DoqjHh/mq7ct7Ux45cnXh73GahSdNvFr3B8naIx3OQ3m/VC4+faSam
aHID1a3sE21mOa2uok/PG3ghi5VKDAlk9/fzVOJR3hZT8f1YWqXVElRkjTIP
RCPJWPTh8SwQJniRBAqkoDIs+LtICcoDEIhgxSyQASUy9uQRlgp8eJB6/Gs6
Tswyfx7gRIOMhZOZRCQG4umjR18+evrl4e7OViAdiD1MGzw6fL5zuLefyGd8
IkgloyXqeTL+Yj9+dBCJhRJ++kD9giSzIQDIFdDiw4CATCyHpw52D6OJRB7B
8HwuFoinDw73d1+E93cO40AB/cqPQhaRU8W+BSVp1zTYbOzT4/55zyV3VGh2
5+MW3R8rYtxPxryk8HQ6lgMYiUZxBs0UgRxCsZpd9aM3wUi2H0wBmlLoEMPT
nGFUsMNk8fhZYD8gNtrTs/uTRnO8arOqUjl9s9LW5zNiMqp2J/3p3Pbj+ATP
FDCOoN1uq8qwWEKMbe+A3ev7LpU6SD4JRV2R562sqxtYQcKDERA53hEaAo/7
UPw5/EP12eMqgf+MLHMUBx2KqX3vftUd60V5bZs361bHG6xqyc3/uOef7JTe
n3mdzXTev/np67dnI0G7u9Vj20X12+/GPeXJXrkECqO+KcuR4xeBhFLX6Oap
Y0ss1ynxtX7LrNQb/tXA0XW72vEErGQZounUkZOJmMsjaXHJ1DpsvlCWHXf6
GklIClqroRRLsSCkmWnvroNIMJuPsYEJByaE979fL2jVCf5dY6r6EYqzGPbq
pqFwcm5wRrM1VklLb0flO9dwPh3dvP9pUEI1If7x72jDO6uRFnMUz+bgAgKk
Mbgru+hwKlYbUr+T0jWl1uqcjnSuXO0thnIO8m42XYYqZviqUDhsX6LjuePg
TaaSRKPlKwdTK4Kfbxt1jWWqi7NXM0YRKGPu0m/sTz7edKDy/eLbhOAu2qOB
7YxD4rohmCW8/fVtT9nPXfz9u/liLPC2MGsHwT99f7fyHHifbE9uT5Vhr3W5
LiltIl/pWailjcucdcsN7s+Kj2bnq5uB8LS9Gnw7MoYDM2Lmn9M2niSVQtqw
5j2hqC2749Hsm8mVvWSeKE6/Vc1TaK9Y0rQ46rBJ61raE2ogCUXa469bX/x1
Mb0aUd3MfyAnszoeTRWJ1pXL8b72koDW5wpCmU5G6yfr0W9/JbWNZr8iXa75
ujNbef6SXbz++k+XPS2zm1DOLtntn0dr/pr4NFXX1Wfh1sxgvaFXQes+MUGi
IDBABskdsRPuWVz2SReHjoNJ0cAJ3VbhSDYNZAPhh+Z/hIjnipkkXJIK6cCH
uzyKZWJZ0KcBmSIkrPjkGMl/9Wk2/rNndRsDDhOyVfcMLJWGcrHoQQjKHrx4
8vjJl4/3H57fy4SOEpGj472j4HHAp/l0LJ5JZXVyH6cSwejRfiISDAIkzSMY
isO++uxv5QHARwffJ9FMJBRJpRN5DEjFksloMnm89zgUCmaefRLIJ3OhI84z
gtHwnpLdeXIE9uvH+WKyPjnblOLRZdMzx205U9ioYpGL+sECx6lcDEIovFgg
iHwWyqcgocSXa3aJw1n94RVmTPK17ohTJFnXyuBxvBA+PD6IorxYObl593Yk
XJ10qs1mqblsDq/uFot+xzyvW8M+21nO9WwkW1KNft+VGXE3gz9FS9j0btkC
/wobRg6ro0bxoBrHBBbJ5PPxdBHI7z7KcVAkmTKKjwNgt9Frwr9+1Nwhj7Lb
pRfp8qvzuylTXwwq5d6wVTab4zurf3eNHymNlyO9xzQ6p69WtdJMkoc/+scE
/QKeDU0z9pXa1QUA4YwSdRzJS3QT4UH6YYgX1zTVems2tgi9I+FMBlDkxumk
ykm6POyLpq3pxZl2XO15llHtpgWXafV6Dk11Hp7os+uMoqEEbm+cqpsptRkx
CYm0LgTYl9+drmtlN/HrJxUdiGanczJC3U3yhFBwnarJArYnoOPJv6wt8RN1
8PvJt2dlBNh+wi57VtPkEd8nqCJWTCECmh7Kq+T0jAVPJG+ZV2aMW2l2bYxx
ayXRtzR89pK0ulRMqDdJJWt3bIUtsXiN/16hi//JuNMpR2V1udpoGY0KqL/b
tPoePfzGNtZd6Dfdb+Hqj50BMVvVm73qsD+rjLqVqkVrP/z9oF7DH1dXX3ub
azpdV0XYxvX/dnpa6ST23Ol6dTI+Hc/GvqgYpuoadBST4+bVZavx+/kQ+OvW
std2QHOADtvD92urmbAieyiY306rodhwprJi42TYNEaYNBjMepn84GLkluks
d2Ukmj3k2U6qoHXLgRdUIYCVuuKyuf0/gSxNsQr4aXA0wopc2zYtr1ZUeKwi
Qfq0Js4Wup74uL7i/naXUcYW0N5887KNY9b7cckQtcX7d21WLvkB2rsEfh0o
xcRJj+I9TSWUpO5JoDscC3swV6JZjhfhBCpGQu4Uh92KqpA4TsYfp1WcUgw8
kswlsondGIikCiSePEzkYYKA8slwGnmYnpV7GMpbKouMQGYKW7HdZATPHlQV
OJtCfE03VO3hFn322M8WqVQ+kzzaer7zbOeh93dwJxo/PtrbC8Qff7ATPD4O
HERBlJZkLJ8Kh4/DwUgg+vD5SbwAJaOJgxcxJJfL5tLJPI4V8nkwH89jmWT8
KA7Ew5Gd4+Thfnzrk8hBAowGjgvEcTa/n2Fgisir7JdJizIr7bGKk4BXNkaD
CiK1sY4lofH9MEbScACQOTCHkGgRYXGIVaWKU9MYhpJNXxnpEo/i6WNEYIVq
tZwO+lkmFMb5ZBorDYfnt5643PQXq5HSX8+7o7PLi7rArIeD26U+nE6mNoFw
Vc9pevU6lYL4iiq0r688Pfm7siuHw9Ss8GJ3Pwxl0lAxmcqhUDK8vZUXOTYZ
V+Bt9IbuTKbQMcXvFhxBeNY4k1svF+bizLYsfjjVuhsfJGukAXKYMr19f1XT
Xe/sZatcb5/Y00FFLj/5ueliHOetDDDHEKTtghDLUnjLqNUwRW6Ou3aq0bNH
7WE5zdoUCKP5JF01VVku96YzUcIqrvX7i23FqQ8bTTpjV61FS6IdsNjyzMbl
uSQYKN2ctGW3hFaJzEKH+aw3xsLf/v6m79PT9kdbloxD2c7txAodCEyKuZuA
UT6XZSyGlvTTAVkIkIP/5p38n/0IDR6K42ZrPNAFOMPC6TiADOpgtiQ5znen
o5qGwZ5Sb2R7PYkVRKluk17XlODBkuku6/TEaLVwmtJVfSBoGtr+Iy80P4y9
nnP6w39nCXUwmdg5ztNWhkSd3PCD6ZXwdHVdzH/nlm+v+qteoTE8Gd+umydn
Gul996bVG+FfCfP76XQybMysk4Oy07pzvJPmTtH0hicn4+mg71UrFZrv1GhN
2wJ79282Htb4xt7OrAedRcVbkeypOX0/JBcg6GaClWl71Q0lYLbidivzWeWh
N1xBGGsp6lzmLYaLNzSged6tC7tfRK0ee/A4nEy1h9NxDf7NTl8Oyh2mefjn
x3WbVzsmVdPbxSNssPLwp7v6+U21XCsHC5WPPpMcPUE11t+ONEf8MjCsG7Mz
x7i7qFJOT8SMXvYzblFXjdqsBiRFNQsStE7kGt1ynKPKpoIXKbYIsppqdOVo
UfQvfBRFMDj8BIUhEfPDMYhkwxG4CBTxQiYTi6fyMPLQBAvJZbOJWLaAQULV
UASGgZFsCIyl4oUqDhcLqbxqNlRM1mkYSMdikcDB4XE0FMtEnz99/OLg+dPd
nWRy/+mL58fxv/h3R6nY4YvdeJ5QTIvLhAOBQNQv7eMM6hszmgZTxUzgRcYX
vnwSAHGBR/0DyERSuUQiGorGjxL5YHBv9zj87FloP7G/vbsLArkilsbManvA
s9r2lmnWGv7aSr2cle9umpbOVIGsaxdShQzBEtAhLFEFiCAYlmRYXxDF1sAz
+Ie7fyLH8QpNM342kEXBrApoJoUCqYTWKx5G8o3ZdHmqN9ad9lmjsug1PUVa
tFuMO7HHd+f1fqexmJXyEFvudjpTPgtH4en9fHI/b7fpQNaq5Wx/dWOReDgX
iKPFXA7E0NTO1tZhjjdieYpKBuhISrgZg7C5f9wYT7aSG43xL/Hzu1dTZ3DW
5ZTa5S2SIfC8RaQb379fDTQHsy9PN/bk/nZa4SRp52fcYtprDjzaj21ludap
GrrCl8C81eyMRsOlbweKYbqlymm7M6AJNhsQ5mykGAVL9nBqc5qjN258Ah93
+k1NG1ny8HqocGVePB8ps/c3HSJT6i6GhrlyKqZRdse1VLLdSYAXb//1tiEd
fXrIUwyXMwbTtoF/fiwfMP88teIGlIO0DmWBZY6TRjyx6FbbLNmnsPq0QUme
AedTGYlIdSqtOhjSGW3sbUoyIVKdhS6FK28b1Ua10q7YjoHkKnWm34Yam7uJ
VyfbI1nWaq3+WOzcg8h5FhsM9VrX0huGNHO6tTxiayZRtEcnQ33lPn9x0XZH
5aX3btQaG5zqDi+Wg7N5y2yc/vGP076397vxvD32HuZx9qdYd9oueeerPNoc
VHhv3WyV7f6ozZdOb9pGuYYeUcPlD2tZaDk1P6i47qXMYq8Lyts/9iz9M3ia
J93W5rIGalpkuzc3hFOnYlyvGcg9UxKafiALqGCiSt/081bsF7v1NgPwWjjn
1B27hMvWgsLkEmRBv/5P/HlzwtQSWdEFoquVweHwk63Zu4pkcU8DcEF++UPz
d3+jXvRkkTKQ3yIvXel06tzX0kxHSOMkXQyD/LVt5IZNqcjZqYRVzcFid2SW
WeOkrisSD2cRuVbptXMHsIgxNFFAaBTYiRIsX/Brj+BlDYZAkswn4on0w3sC
BJb0ZSqeLKSSqTxGsbypKLwiy7hIq6X9pzmUgOAioioELYskXCgC8Xgysb+1
s7vrg0AuebD14tlXn7w4ju4+2o9Eop//xTMgH9x5EYJRjFckBn7oCIRCod1I
AWAKuQyao9NHh0WfBTJpGIQZAQeBTDT68BpSPJ0KHALR54+e72wHtnePUsfP
nzyLFfxiKreUAl9bVqNbvzj0at7JVOm0mh0Wmc5qbilBcKauYRHfxbFiNIBQ
DMGUWJIVWIbC/WLpuQQq64ZKMpKuMCwtCATGlAyNFVGAwmJRtXz8+RHTnHbd
07P6tM65nZNRRTJrkqV5vc14OmrphttrtlpUIsmML+vBA6sBhNhmz5y8nFc5
9+mjQavglPzcAcSzqWgCRTMFngaSB4GDp5kClfiioD1LAJ8cJfkbhmD9mmh2
iC/1RWQHA2vj8ebyZiHRnTJxd23ypdmGSOvNkxNFRoxzH0F65tU/b0xaELc+
r3jufFxXGJx3Xc5sni/PlKiF053F7eXypNftcFz5bmJP3q/KGK5WCnEfJfeQ
vrpVcgVOLylm01YGf79s+oGg1h/Vu21a1nmYlpu1sx/PByJYaZYrzdvTQUtq
dSx+ZA6LC50YlX/6YUYcbuUkh8ILSm8xt4FHB4Wnye/O5Oy6GKH7Y6sy1Mv2
4LTGGoIMwjDLkZrrqVy3Fj5OpskU3if7rl6u12fOqIU7LV+PBnFCIO/GJctr
VQWaqWqKw1H1umzKlU0frt2P9moibKqTK+3NMrKf6ndto1fTLU0sGctOswqT
msMg60V1AFR2n978Xj8xmzenfbc77U9GS2/csF2rP22effsPr4Evn5Ldpj2o
L6eG0lxcb8ZOY9nxpnJ70TXbo75Xb/vZVj85bdcqWt85/F+i0394r5bqzXkT
l4elE8Y0lge9cf/VADgGqEavbOsIXxlXPgu48sOI0Wp5sRwi/LtJNzB6kaDt
chWgVVZt2i+esobFC45I0Xi2AE0aLF8vS9xYwIgvf/ZFyduQ9URA6eaRd7dN
ojTMPuJPJiqaELnDifn2XSX8P+s/NnVfLoK/bWuQH9n6Mw5wGxyp8i+e4bwk
PEnQ7ySAYESohBGCWespTUVqdqsNuywhRdHpdZb2MVgXUORh4DaO5bKIWoLo
/FNklvmlXiEVHikU/IwO4zTiZ/FMPOEXX/ShEUgmj8sM6xtkMWWW5BLGCv6X
QvFyFYQMTeHzBTQX9QE/EIwUinA6h5Kpnceffvh4P3qwHyggcC4UTuX2Hz07
BgXfbn3+5WHfAYXkXjAXwpPxOJQqJPcOghlCyMTQZLAg8sVcPpXG6HwmHYsc
RXL7jz/ZjkS3X4SDgYMX2zuhwHEoR5h2jVVmzd1/v1Ur03xKG00WaesE8guz
oRfwfb4xxOMhIFPIJ6IZTGJFjaAsCcJImNNYScmXtEZNZGitIgkcxkp5FJIU
RVawIk4E9xPhT3+e6lXL/e586Jp93mtPF05ZMaulUns9Gw0WboPCG0PPgTJI
59x14ceiGUW59kC/WJtqoaRizKii5XJSCY4dBhJ5Hz5YQyXyiWQsHA0CkUcx
LJYp+yeFvJL5eL4h0Sj9xDitgg0OqPRnVy89QjntAmL57by/ul2qAaZ9W+1n
zbPpvHNR6v3+65YiwZ9FTH08MspyEeqNW/2Oe9Lp8akiM70+7zte5fsfmtXq
6LLT35z5qNvotx1DYLLZ+nU9UjHR+rjV9Nr1tvN+03Up3qg2naZEC73xmH2U
ubhrra5oyGDlqnfpeQrRa5WkWW3Y8Bb1giRMiJiOkJKSIsUQ/+O/3mU+CsqJ
7e4omrTqlShkmOlh7+RKklrnJwPbz5iyjiBOu1ryzEAoxXJb4prUUGdUefV2
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
Prkfumh3rmu9rz6A+67ZGkyapmawWRyJxRs1papfULHuJNP8+no60DeOUrUA
DSt4Lxe91+eqYjXaDXf4n/+P/37bVmVrorNfqnXTrsqjjalKCoujJP0wsRJD
MK5syBIFYyRO4QBULOYEo1Lm/C2whzZg6XgkGg4HDiPZbKrg23Eh65t30beq
QhEAMYIi6SLKsQQC5PM5v4JhACqADOX/QBmeRmBe8XeSyQAUBJAwEDwMF0CE
wREWTGdyGAwW09l8BhLwfDrpb4KgYJHGoKJQ5go4/tCMBCgWoHyiSOIIAqWy
oB9FgplsMnicOzoOP3/05Wcff/ho+8Wj53/+URr4yjyp5IsEiUsVw6iPtP0A
OXvlgISawipJiC8zhKNHlVyHoazRwkwfPHu8HYyBEpmhFAanAAiBkVwilgYp
bKfEuGrws8CLvRSYowwTR6CIUMpojrs42fTms8l5u8qK/ZtTj8sLFE+DsA9N
T39ljLX6arNZnb798XrmmXdfz1aDWV0cbOq0INBIEI7EgvuRw60nXwXzCJCM
hxOZTB7IRdIkUszlUYolGDgLIBCUgKtUEupfz0r11mqgpVhDrTSqapFdVLJU
bbRZDF9dbFycW/rX87ufzk2k1y1bs0s/H4uSMrtejRXUX0utTW7/8hdMx0hD
LduiUrp5OvVXQQS1mueHf0+1JovlwD/3SKOJ2XWVZYlWp8nG+Eo2R1VNTnfh
Ik61JmK8MYMJSQLApS8s6mgAMMOufi8Vyd6gyukNaqCi1OWmW/yCapZBUCop
temw0hBT6KxnSIzNFAoCSfOSvFltJThRNNcOVbJmDi13BNJonC3K5XJ/ecEx
gxteG1V7re6k3/aczqLhyhzvSk7rYtzvcc7ttXBA8CbdsYXUYJmv9+dO++q2
PfX6vaZjlBTJaUj1Ws/km03L7nUc01PtTt3q2bn2WPReuW5j0LuYdKddr1Uf
181SH9uyr6bT+azTmfbvuro5fHU/06DlSg6G7mf06R9Hi/ZgZD2KvP52Yamt
STVvfn8xG7flLx5PO83rxeBuMMz2/zipb/2K7cuyRnR/fH/RpX+b+8P/dtVt
a/L8tE/93ScZyykVXOv1tVATaplY2wmmn30YYvkaVYJpTWaSRMOQTQOLi91+
1dW9O23Q/o3JUUW1pjUWrHw3UtEPIrZWNppzfy8NEsHFDLVnyuWm0C5X1MlB
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
+NPsK2T8rcD/9ED2N7P71GVEGW4CFADIntHoTvQT0MsxuVGsN1qVQonkcw2o
l0uFo+OjUun4YH9/d79ULpRq1T9u3FMDoMcWD4EARpI8Uu8QJE71Wu0OhBBQ
rd57XA8cAAng6LAtaRbTOiYkhqQ5DiegcqFVwnr142LeaECKFZjW4V4d70En
BeiIpEAE7kEQhXRLv/q60Nw7BpuPqw426h2IYDis2kRguFaAoA4AFPdevDos
H+y+OvzTF3u/RLHms45Ai8FUyDYaWNijLIDw6Q7rJJoTebYzn1ljGG93kHa3
oCbw13SIG277hbkED7oCvvvrz794tnvSI0mwhHTKuy+KxUq3kzcRxyOeQbLi
iY/AQzQOWUdLR6c38yFHCH3BDLxerVos5PX/9W7NtDM/ChxvHLjLh29vr7/9
8Id/+d1df7JeKIpsDJyMKX3xdL/cySGp3ul1W8WT49xnWi0A7jYhkqLoHKfy
Md+rdWrHpRrQSXEZwSLz7N5gGtz9xeUCQQ3dM/PBaXZhL0jo2Fv9/Q8f3jzc
3s5Wmz6dLrabySThYLbd8LmOJiEtFi1/WllNUt13At2kapwwn6SBXDZFCuME
VAqTft8RzUjiR5kima7M5N5nO3kRmDHJozMxMZ6FGDFS0Iiu8gyl4Fxs0rba
Nyg8M1nQDLMzXswtj1lx/IQ9luLJUAhNgmdqz0veejYMlGAh2YzRkc3HveIg
3XW/xen7cOG5s3NdH+DM8mKeEuTb356xZ1ueiSa0nKmwiQGmP40YSkhUntUk
xoDhvF+vRrJmWDFL0YmvGc7HbdKtcDEXrML5fGQw7nIAUVMLJONw6GmCPlte
9ZVr3zpbiph/MSO8i4swrdVqbjLMq3P1D3eTcTrk/uZVtMjUmMpuV3mnDBeL
+SYOrDd/eB2Ky/cxYSrBRCzWN78bCqqgBo5KHj/5q8bWnMy4bbayzhTn9+kw
8Un27uz6/Oa89yefxY6oph//7lSXsZ0//cS3fQrYRl7x0zIz/U8Pcu/wyV6r
hYZTCks2vm65Efq3vza2I91MWCB2o3DDdZF4nmMW01WtXf1cIK33/3Tr9hcu
aQU4rbB2Gth87+mrrbqcVP/t7JsrlJ9AjG4oO198VsKVeaTbukRU2Jsp9+yv
vdnk4F9PfjuYbY46ytm0vGc69s22b/Up2sBbhESLkqxh/Vvql38JiWA1n3iN
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
f3hPEWuNiKdvru/m4wREVkt1eLuIAlLz5hvdcWytNRylU5JMRt2bxfnQGfLs
203mKTvpJ1G6yMlwPkqCT5cuUndMzhzdve8S5zd9bU5UUFAnOa+1R+nN4J8/
TnxTDq8gkv/u690e4YzXmjalaQUClW43Uj2zuxr2Ik4zcKEDyi1fc7af0pKs
/PabszGj6Ki/Q2bF9z8sNrYvO3GiNFAzssJ1MOwSfOn71AK8dWK+0nmlSs30
Gou5mjGMPbVBOzy3vPHJDt1fCqbRPm0l5cJvXozL00F983odMcL605S2x6Gp
o8b5zJcow9FVnmGho9PMURnDaLQMawaPoml1MhKWKyJAKV+sgjSNVDOVchmC
QRIr57CAb5MsBkovqvXfPjVTb5Z5geI4GETQTq3Z6QCtSrlZb1TKVTitcgmF
RLRB5jPtQgNlKYpA099X2i3c5DEUEOsdGI6YdgfgKjBP6nQui9RL6e0IanFf
DLtJ12XR1N1RonREYGnKkCUWacMod9+nF6w0gUZz92WuxEiC4vZGPlxutav5
fOZlvnRSBzv1WmHv0WePn3c4DIKfHR8ATRQBOVFNiM7m42b97lySTJujVRem
ZRyzcjsCJhlWrxvMN13d8WZrGp9vAldJQw2RKlazenSUzedPDjMHz/PlzMHx
4WEhf/rw6bMHX3z92a8fn7ZkiVZty3SjYdcWvIhVNDaA/NDMIRqRzRQyJ/mX
uyeVxuHOy5eH2ZMXBycH2UYt+31OauZRvymCROn7o76phdfW855r+NczHOuf
zbhSldTL++p42Q0nmhXevLmb9oesLuv2eKbMrhYjxwt0ieItm0vJ2+VaHM9Q
rKTRMPbdqcLHkCQq3bHTXZmCgDiJ0V82H7QnZwaoaJCYDj9uN+WAI5gmjaGQ
AKG8C23uJHd9pn//N08atGZv/vRufTXndn+RnVsgumD2GcE2AIvM12gInVmV
0lP5zGnVtGWPb4JhiOEuI9okwYvMqD9Cy+UUgR2jN9CsiANZkcIpQhnJWXxs
4rbjMUIjmwgwrd43bXpsBas6x/vRJRFcjEcRsP/gADb7k+Vy4idptrIWWXMU
DEiDoJCDr4A+rwWy0bMlTVa9MNCNaBqARXusLdaCEk+MUWzytDM/fzXYFt1z
K2Sdm4vbmzebgGDf/GOk+6NXSzm87n+8XRoeb6e0v4bV1ZvbV2ejWSSPMPMy
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
p4JjTqbx/YuttikppqorJKvTkpHCAIuSFIJCKeSiSnc+Dof3raQ37157kx/7
khGHwyumZpwrXApIFSEZzic6lQpaqcEBaK0+1vX+OrI3N+fX14P4XM4WOYiM
I6LehkmOoFuc2U+hdMyROC2lyklJMk6LLEZQ7WqhUa+Xs0e7L/PZbL1wWmgD
960880ck2UKyR7lnD46qhUKtlU5CPnfw7LgGQDDed3xWUy2XP+vTfKTPZqdP
SiV2xXFMIx5RxsAgC+rFvH+zSGqdn27ddovEAUgSiaLwaozj+vBywIuCt9Yg
2f/0l8sgiDX/Y+qosfJm82Yz4F/CPLH7188I0Sou/vsAgsrPOiGHQ0eVlc80
aqeSIjXx3rBfOFYJhqW9CmGhaRkZssq5i4FQLrUoPFdiZ4MgYtqNegbQhgfP
34wXzveQkbRKstrK1zGS1gSaIYinh9SVIw4KM05IY5XkaJnBpMs+gfEWGvAY
4TMl2I/A54fLf/fVd8vNKPaVl3tlwg4t5dmBm7Sq9d8BMxuRZn5KldpYrdJ8
sQPrw9gbsi3aftt/MjNop/8G1cLBzI2XfQJECu3h3YX98lAXJMsc9CSkCasD
VfOKU6ufOiqrkdq6h4kCIY5CLQrMnozbvHz32jwEDEmarofcfpMefzPnjNFL
/c1w7gkfr5Nkyv0ue32R9PY/X51pfJn/SHSMyzh+NYjI8fCUj/rVL/ffXe58
u5rp/c32ZpUYgkTylDWyOVvOB91unVobzGusLRSxhkVA39bI9R+vJkpJOFt0
PTMeDjYc4KhisxVfDHHeg1TLnGmy7Bu5nQf4+1uX0BIp+90JjkmmpviuAqMN
QpGhQjYx6m2K88+q3HAoiXV+5Maeszx3WnXeQ+GJQ2le679Uzd4V5zln+W/o
RpryMPy0Mpt0EdMhyHEv+7K+/SgszuLOAzqWyFZDAYKTtmIMYnV+rkd/+Hn7
7YvN2zEI89qbP99tLy6vo7Z8djO6dkSj86QasQ2k1pJlHCM7+WIxW4IpulPI
Z/deFgmaJNEWLqJVWmZVQlU4QWA0Dk5ropQ/zLYIpIXRQLFKGSpLExBAcDRE
yPwE/59KkWQGx1UURhiwCNCqigFgIxWMWqlTzBdefgFbnu/aBtf3tLEI1gmy
VnG7Xr/nxYGup+XP86Ioqpqp3R8bojFp6kKRdnonNo2pri9R/iDhkuvXPe9V
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
L0ZLCmOGtYdAuXa6YLfG5glIj8387vEqdmb8/a/XXssi6TGn4RfUZqQIWXh7
F4epUmqlc3FAo9xY5VjQGoWahefhuZ7Y/SfMyPTjxBzqy3XqQHaoJsmMIONA
OB3ebZXDSxvxcRTWDd6dmDPnTLvyIwfrSiLvmm3kf/uj6JveXz1xcUbvyZMM
ZmUaA0ZwtdvAt9ceUq3XUAqDL0v+PitAeqxYkVhv1FvuZLXc3+/3u9uV1jw4
PegiCD0PDSsYqYQdCBwhkxrH+Tk1e5jS+6CS7x+Suvo6T1OPif7+5viIUGFE
p8Ug3i7WjpEYLErc92BJYk2L0r6naEBPM4ZjWpQu+LMAHfDrWJqsR9GwlDnt
oyaNQe4308TU+dDQfYWeW+lyEifvb60Xh6llx+lVYI7jRdT4fgf+04HkuIH3
pH3x15OrbepYmuxF4XikC1CLsi0Gfv4Ve7uYXsfaEFfjieRUKs9G7xaGNx/7
yi5O8mxCqu+XdLnP//Jn/SY5BM3Im9Quk6tE0mP943c0PebiJaRMNrnDPT+I
BuePGaREVxLQrMGjIdPllLzN/fyro1OeVqfsTDwnZcciRU1MZ3y3dnqGoApF
I6DU6xnr213FDLj8NQflSRtyB+6VXDn1+PZMRgg8NuI3lc9cCc2kUoMg28Dl
+vevfkaIm5nd4qNRkE62tzePD5m13efLAPjEGofBIk0o/6bxE4VvCUiv2eoA
jVa/RTCDj/up+wCCgZ3SRb/bLvWwDgHTnOVR7KAxJLBBv3t5CeND8OPVf2iv
1ezDlKA4mizjRVOhIdwa9hyPREmyV7QuTmBApTVEWEZ0AxljsIaoqSoLc7FG
SsDZJTaAzoeOpsCgnKUqjgoyWBsoGk8MCEN3LEcb9kFgiAYWbE9sf1fk+3Cz
R3q5UiMVxt0s8klkhNP59f3tbjMd39ws8pRoiVERCLzperG3ACZMJnPPS/J5
kBSp4PXNOBUY2TSh8uXGGEfJbDq1JG81MShUEDUJwlWJ4QRNwPqdLtg8rV70
+G6jd3bycXsKKKl0p1yqNy9O25woSs7I5iRdkHIV0FVSklnV7Nfcu3CxcGw7
cIhjAZ3NgPRbr0dlG08ev3rjS69efYeXUajXfVH5ZQPvX1bR54zL9RgaD8+I
pSMP+2cvGE6dprLnDaRry/PUD+8SQaLY8VB/parXu+l0tx6Pc2eSQwOBpORC
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
zdJv5tIuAdtfXU2G03Fn1ZTsyXT75eNXk8XjpvopOtQomcggKFGFJUrjDJQS
lfV/fRzV/zLn3s6bsp7gGU3Y2WdMJZyNTCR6v4rjbtiM5M7M9pxs9qvrrm1H
0mByoZVM+jVwdtPjyPrpwRGmtli6O3XsVsw5MEb3KXlOVJhFoBNSj28zFkP2
Fgho1kqcalgEDgHdCz95kAkspYY0KRAb+vUWU/YurjfETz8TfKj+dN4IqJ5o
hNuVgpOi8+F4xxb6T3OzaN/yKHe+JNoDeNcY6k0cfbZnnElE5+rK+qx6a9x8
d3bllgbd+seJA/4lcfNuue6z0uLycqrzGC0MR65tjIbz+Xi+CEdWbxxtliuL
lgcKa3q9KZ57+WlF7m82fdUcOnwNGtlEgec1FYFR0663X+wc7g/fBe3D5/jV
QOl1ZdI761gdC8FBWK7Q+bdHuZf7ji1a81Vv4A47JNq2PEcv5/SpiwBsMOhO
+lxOOsyLRovV9IHjhlAper2H3/aXTKoxJE/AsP02xa4CCWsGIwIDqyZDBCKE
eQHN/Sjd233SLqJSOcindvcLVZgn6RgC44oB7xQ/amgOKuy1IsxdkWQo4vWk
H1SYft8abAayOTBkgy2XVaLGCnZk+IAmm94M03uTMBxERl8uJ7K1VowA+Wwh
jvFiMRULfDKXTZdytexRMlsGwCZer1XyxVq5nMtUwVq+VM6mDg9zyYPTxMHu
YWJ//+D1bvro9ZuTV7t7O8mDvd1kqVEvVsq5BlzLJY5LcbovH352kMWIzEmp
QFFx4GVTMV6UaQJkdD7fHAREowJS8RhhLdchYtgjpZ5u9G0rmK3ms/G77ngb
X+s4rrVWXHYlijVdOxhPZjeRKglWX1ptp5ykarp7fXc2nkXDcTigtIe75epi
Egy8s2Hhp+VFbzBuX94/nFuYHUxDoZly01lZbCQzTZxtp06bIBqc98Yr2XSH
0eP5pDfyZyOxM/zlFNn0+X6HQ1GWZRRLERSJjJG/DvNwE2TjxJupVetIs1Sr
4THhlEoAiqGMGHsCz5IUI9tonhFR3nJx/2wBodvFLx/cQX6vU+TglkvSmqQ6
NgmSkiBefSnUmJv7g393c+Nd/8s7kFvc3l1tIxcFBU12Hfv6/cP6/GY51Qun
mbiqdFTFBzOPm8JBKBPzj+tx1+OY5GCoOKvrDw/D4TKsvqpbGk7xT3NOWcE3
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
SCeH7odx9jXWGfpa6EDs2RcR87pi7XIGibstw51eIuaXd5HyerdwRE0cLvR3
93ohB7t3Pz5cD93+uNM5+/13/qLDuhfT8RTtrTe9TK7ryXYwJFlf5tVuNFoG
w/PpYjYYifPu+JSMdHQSrFccxClcM/ka++JXC4pTezNKvN/MulwP396Vd3Wy
mU5K4LEugxRV70elXaYLIZrcU4wPIUna1sXNXAK9WVcPBI3gsz8cRTRmDE0o
Y/QgPpC7/L6gpHJAEUZBFv1pjaKeogOKDC5Z5VvP151PTuOkUTFuXXYzPnlR
aO42rx23W32e1nqtViWl9cdBY2BlD/rvemY4tkwdAlSeGg55gOsJ0E6tvS93
cnqnmkOTndNyDeZql/c2V0TcsSVFfZiI0fhK2QPPXGN6dbvECVdi2zXAJkX1
xg8Xo868r7fawwDL5kr5XPIoHdP+YbqcKOaS2XKBPKg+hwMeoQi43ChkCoVM
8nhv7yR99CbG/bf7J8eJvdfPXp5mXj5/u7N7kj7c332zl8ilMtkS3sgVq0h9
/83pU7fQ4pskiRZyNaxWrWTy9Ua1jdcq1Ua1DlKYqFOCIMMgFVdRUqP4mJaG
q3Cw9WerYBn1yYo2HG7mi4vVOQXqjOSedSsILg7VNiSvFrfbaO2SdQkC7YnN
GNLZQjYpLujUjnjb4I6PVRkfbC4247v3q/nNxFdp3VO7Ha8XTQLrJuBwsNbM
vHiVqqNgnQpH9vTmYn52/9W23+8NOK8znw1nMkBOtvOZya/GhsRSCIS1cRTG
MYQzZfJpo+NabKbNYqnZrjafVjFXII6lwTKA4xjWpjiWobTJ5MxGtl+ar+U2
cc0OOsI/W/tG/8Mq+P1jer/jBJ7vDN7/4t1s/sX7GUd/97vH84vHb//ju4df
3N9cLy4/vL+8uXv38frydrw9G59fb0MC7q+UKqKjlCXIFlfw9GApadP1F+dS
7g/9Zv8PHwufaxfj86+t4d+fq8elgRiG5hcUeHLsdARFGH6rU3g0HAk/zuYR
TNnMRUDoWEw8MrDpyOlUBeyT2PY+/nH4du+4zQA6l2JG3cxn5+80u9MQPcz7
aljsfjMeC7kCRkJoOgM01a+2W1PbnG9FFpbc4DysZ3o3ZL5dU52WYaCFZHti
NWG5jWO+Uqdt9/5e+NnbIV7F8csO6PSHUpkQDK9GToIPU2nY1eXOlYu8pan9
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
q1OlcnHfkZJq/jges3mFaz7rp4vfOsmOAhUh1kCC5kyzBIskpUSAitWqFVJk
2uCer5qMQwfwcFijiBdAVyUKEJ1O8ZWM0huMO7KhUkw+xkaozTj3iDnIkY5z
eUYmzBZYreoLszMRawojsjhTqE2r4c78djlaStn9c/DlaHzfHNy97YrVeh0t
cyoaz9c0oBJ3Hfs8pwG/63DnIAMXwXQk5Hb7U6lkNLktBd6T/aPDE4fbHQqc
nR8cbV2+6/DFwfHZyfe7e7untmA8kwjZHfu7R+FUwBWIJQACz+Xi3z93He4e
HJ6c7x0c+91O/+mLo9Mzhy2SSRTJXApIIzqPbFW1kgmf272JMhj3+llI45l8
iMBKpWh+ibvhi/ly0BysBs3hqhlOjEdQKE8noHYj55/cZ3MNw5OQvBpN3sz7
lMQAblQxDUnvCPLNmKrqrHjxmiJ0g/1zhzlDrIXeGm167baGVERZ0htoZWxV
cOOmUxKG+qKFf62u0jng4o9v5y8vmrO1GWauGma7ZqGpbY6XKhBUASuFxBZv
8OznuxnLMIVQTA3PV3AMJQla4AWWriIBz/bPO9Pe6JI8iXVFPcDlKLoC7vsG
jxdj1v3hDU8bnNpg6cWrAWYu63VxC8bSu3fXF3NRuRq+/blH9IXE8L61XVNL
1egtATYm04FIbT6++d2jHkZWPS7RlHH7ZaNWrhHX3XuYHICTh48/7kYa8sW7
VsYfjrmSyb/7KophfjtY6K6LRiIJcDtAsQ6xBTiTljbaVpj9kp7NUTyof1L8
ZOErx9k54ZE7SDKMAr6QI1hAb/R6Sualra0SNDKLC1gySDUMUimkgjFfY372
7EhR89Lj6lVuZ49YLvpVoRwtIbKExJ1OIPaiJEwWeXA2Hl383LCVnuDpLl+/
vizb+5bJZkgSyMYqEpg3FBACyRpSJkROKLpkGiFajYwBlrxYCopiH/iDcBbO
gZTKsFiBHuGZe10kRg8XXa34faJTF0pl/aPq/58h6eovj6sE2tDM0cRStsT8
ueV4o7HpS0Kr2551JUSp+pivpF7dMltagTez+9/Frz4sr9q0qs0XrDiB0MkY
s2aaxBlEeVX4G1KV+iyoXHeK5QkQbb6dIZwsawmnL29WzlvIk2dCLGOE3PwE
KvbU3GRAJwkKzwQBFbaXoDxN0Em6vj3EviThgmrx81ggEinXdKENgN+6hBRE
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
XC2uYLa4eH15cz83CwivNDmzTTB4zOWwh2LxDELyxehl01MdKb22jhdygYDS
VVHfzvGRE8y7T0/2DwMglg2ybMprDxydvnj2bG/v4OS75669g4P/PhHU7naf
7x+en546HOfn52cu+xffxb37L+zHB4c7x3b3vs0Z8rkDKZDVWhpWEjQCKBbS
ZQAspIA8UC6eYP2OOW+KHotLBlL6cjQaNgerG8PjIVSd2krUda8laareM/7h
tN4m6WYiol501bmBM6LVWkmUrG9XSfv/KXqvJle29Ezvp+hKNwpdjBQcjRhk
s0l2TzeP3e5sW95XASh4bzMT6b33DkAmvCugvNnu+Lbsbg6lkYYSFYrQ7xDO
LQKBXLnyW9/7PBlYmV7f96aBs+zJ2pICw9FwOL+7uJ3p5LvvFpdvb2bQa/1d
j+Ur4PIq0HlB5sEGjEEEiWNNoepGdzrOg1zYThCT67Czv5VJpyKnychxolzI
5xKpJi2jULMOlEGCY1kOpWi0mAdxWZOIGljcLlts6jRP3wwrTaJZz7WWpKS3
ynvTnkMSyz86n+2R44tp2xj0m/T1h4WvHv+6c88qrXDe/cs7a/TNB2HiurCm
zedd++yDlAmuKZ5BVj2f6C9dp3c/GiwNylkOm/CCrylcH2cVP3gl/re+2O7C
Odn1dBwrYaP+oMtlsZjG5WBG6bz/dkBbVPyLHGz1xvXNKolNrwYzJ/1ZAsz0
058noIqAv+RbMsoKnoKT4ZKt7J4cGYwtJJstpcYTmwUpBf/27Fh6V90A0P1K
p+9xCMchjC2ZCraBSG/vroNkHEO5xUx0H65dhWnUdEIxdZxqO1yDPobCdG6f
V2ChzfltF4ruvVkju/1VcZYqUDlWaRz8zdaQHvlXXTUAhzypMlizgREYw9Qb
B4me+G1Yl4Yi//ajREPg8vxl0kvKY17fq37Mv8qrMxFDVNpxoVa7UTF7pusq
DeGSr+3FlKBzzceOfNw7J6oyJyE9t3vWcRU8Vz75ZM+W4rgjd4J6WSyq/kBp
0v6woxhwDW05qLTCtFxUGbgiQQpa7dGRIxFoFXiT0hbI1otfRoe1kXIgcK6Z
P8JkRUxv1kSruZ/jkwelUvUEQqOR/f1kac3+swIcPHWzCR9QPIkRFZfKbzZR
jBVUmSHJSqkdJmrJ57q0nOFwvM7XE25YyVp2h8JYkMszHsOmDhInezvr27HX
r7GTz/9u5Sa6JjGqTiY4zd3YZLxbb+hreBk0Fka2kG1Yro01YGMrou+jtpDv
h0Nv8LCcdcObswntUYOr3qjb0ZtMK6Dxlj8OOSBzkMonjyJ5jCuQg1ENH3fa
nk03CTzb8AI6s/bszX6xkTk9Pd7L1CqbR2Izuvvm1cbm40dfvNhce/X8y61H
Tx599WpzY33n5Hhz4/j0cGtje/2wWDvZev08erj/ZmNt482rF68jx1s7kePj
SArFBdlEsowurKSyXKgh9Xw2k69Qmbox6juOnnKFHFPEl6NOJ3R0Kr6bdwcm
1+A8TRCbQ9f27V+vt9lK3WDjen9A2qrSd2SG4JnWwDI1UZattu7O300hTbaX
9llLv/puNr5Q5D/cnQ2Gby/4E68rMzLGXcyDdtsgq/lkIl0pQ3QToBkyS3RK
hi2sQl3XdSsTgw5e7h+exGIFuJ46PTyocDq/MhighFMkTOANnCYpjlIsTlAw
At0+4Ikiq/WufDhC0tUEqsokp4g8KQE1NTdSBRPUH26Hft8nJe/q2xG2kZ/2
QaAZjRwUwuD24gEJRdsbzBmqM+gurxBrxKoCoL9fir2PU0y/nPQMjJ9PBOws
VEUsI2g57P58P/d/9LDuXLAvxgYBkZl90gwD4DASsbnDRmgkzv/SG7Se/6cI
XxJ8PJapocne7cBuvlnjkVIr31haXDSS4lb1SEQ20DOkPUVSZDprNwu0FMz0
QkRzS5uJt/9XN1HBEqlvxXXM08p9w2Xsry8urNIpDtAeeX9RS5IooQQ9Cm8Z
tM0VzoWyoHjTCYaIpIlWFHYDU1HRMnVfPzk63UoxjHvTzsUajWQNPXn1nyjT
dMJ7XUrHB8OuWgQBwazV4Lo/LmxzlqFxrKcA7Tu+KI3Or1/mkN2ufDmsJXol
mKpYts3Z4U9bfRkNZmbjFkxK5v2IjGCqLT6Msn9vWiRqreyOJdvd7ugn6YOE
yi++zGQjebm7nATOSnqlfp/nhw6vGMWaoti5HGGMc5vqfKzCvF3b3Uqamh7S
TOyAPm+s/V3c5/PDq6mrWYLakNI0WwX3GKeymy9l600Bq1QKa8na7utPo/IH
NpXYOFjKNmRYCqXohlpJ46JCSxaIGHz20OufpOhN5lpFiidv6jKNeJPSOnGm
F0odlCAAheELmSYE5rafP/u7z452fv1zugbrDEShEFylG3h2s3CI9K8WfRHK
ypdCRWQx7/6MrG1GT8UxV5919plRL7RC2x32wrZNuPLlgkEwIFPqvnNgwepd
96U8lMlm4oe7UYTJy5rLVjqKvRIqnCTrKdT0+GzyNIGJ2Er6dyPJV68AX4ET
b16+Xl/f2Xj26ctXr1/tv3r0bO3l2quvXrxY39lLpiKHm68/e4U18q/XIrHt
w42tV2uvXjx5dZTa3YqcJFPpMiQKRrOui/zKnIAMBKWrlUqxgta0HjPtDgio
p2Gdcn204JgODVdiQKdHgaWi36IR1T0fD4b436ZuGQphVkUyogFZmbZdlSA9
0QoV2XFEaTSuG9d3blYx7WtuOkCuzoey0LZ/s1gq+PJBKA4WBmmMrm7GYTvw
GBip5dNAIkNQpYallDFZFIsygTZ1b9iXICTx80fH+5FovN5cyUu0zKsWAdEE
gMJgHWEJisMVrY6yOL9a6tD2buk002AW5+dX6K5QXZG0rDAD2aoJBWDRjCvX
QdO4CbqzfkXspcHzkGfVXkBr9ePTx5/Hzbt3Nzzpdb5R+CpizsxwoLWW9LBf
wC++OZ+fme7wrN8VmK4o04BHMh22WrN5ujfD8wteVHy9e3mpw7xIJI94CS1t
PBF71RNZq+4CH+atwv/ypXZGgjDAoV7ABRddeOMp7CN4Izm+Z2uVfEqaW5qk
P9omIV47Bslk7OAo75Zkk2w0ri+gneZfvmNA+cVjZllGgtlo656Agvbv377t
xkf+dl3PeO3DozKA16lLIuZwlQJaHtz3SogTGEBtQQ7xz13xcJv3GEClTS25
83SzrHvmtJ08aoogmD5+8abbvbeM8wYJ0dVwMgGxinaWXDfUydvKM/4dKYiN
mmaxanVtfAc7DQgrpo23V3hx0ltknpChP/y6S1K6yVjtTr8bCJTQarlubTVj
OjOX1/ddBhSvlKVCtyD7bOLQgmDjuyevfrmdl0LP6bthv6W2en2UBW25mdAW
ht/46vEzWyhb3W7oT5VUZK8sQZrRJPMHZCvy4lnTygWD8z4vsV6nVGNUsU48
f1lvEtmXVbiA0AFcAZDE8cYvdqV34P7Bm9iEQW2N4kW3baQ3AY0XuPpOvOUB
tZM1jN227ViLg44++1Q3uEZbtY6iPhKhOIxGEid1iW40SAZOP/7569PNFxsR
ugK03ER+Ny4J9aO0un9S+QS2Q5tDYUGnSEomlftpp7h9SH97RnHvZhuF80kX
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
hpOi8u7m8vp8tJgq1zjelwd3D7f3o6Z1dv5wISOKYwvd/kU4QP8x5N+7UUpS
602KwnohITFcr8N6ubIitEYX39y0cPval0ne7oZds3P8KrI6eAHxFLOM1hTo
Fd0fjefEsdap4b3xKgM77Z6jVJ6+so2v/2jhv7jQlCbbUpzqQc6wigJWpQjo
3b/K6y9Egs6narLCEboC8VCUMUmK0yEpZp3Dv66RYLZJUp7dfpiVEw4hiSb6
laxDylTYOP3tpPHKAcvidCqXU+T5def6TkDl5tbzQ+Vh6RKcwmjYjtKBTk44
FQWUOWkLUblK//ajI+w9PqWUwrb1oMK5ukRyUObZY4qt/fO5Va5l/8NBZTu/
+fcE/vT0458WAUuJmo1L39ywea5du16E0iVxeqmOrrnji1ZsKsfMeoEzur1g
et4PGdCymM79HIpV9faQz1IpS/AscbewsO1ScNcyNKq8E1dt22EL0P4beAW0
TKCJbrxmiii6sEgNyxV/fNeCPqqPPpGWrlFg+gPVcjHepGiK7r2XCg2mecg2
388O/tYeFNikeUq1223kH+J9X0bquTjYyCMokKuVtvUPtItkC0Oqrt5OWcjl
tjmJrvGaaquq1fLJZE0kSZnnZYlYyBKNF549f/3yReT05eOTw82To8PDg6PD
nfW1tdWqqSq+Xdiq1PK7j58/++wVUhqZ3TPJDtyxuRhuH8rS4XrvRlxBI5iI
rTJKKVRqpieZAWM7F0ugLFtbsUPCwM/ezpfCyF1NeDjt9npK52EWDru9Nsn4
ojHrtnte+yLQaJbjZKNO2yzpeq4z7RtBm10Vv9gSEdSwiBRiWVSqZoGpeC5a
3CWBfL5JwwSjZEtY9uDwOBKLVDQSLGVjtQx6CJiElDiObr/ZPj3YPIwld4sE
ENk/3Nk4yGM0Dq+8nWpUS5lcJZ/NpAsoxgWTZY+F9I3/8QTOd9vFLGFcBETr
zIYaP22hAqSV5yhn5acQDQhtvoN15m/Fqq3VUNa0TVEU9fKXu1l0uuzMrpnX
sT7jfmy1L4fLS6V3Pf3d98vzd9f37+8uJ8542W07ZLVeLVUr5UqpTuDICshq
hVyy3KwogYbns7jfatuKwkieLIoQ3xs5Wtdt22ChVgQ1nsgW62WUXzWAGoST
zcx6HTxFCdTSSVYxvX5A7gKDzmQMN67Orq7nk3CkXgyN0cXN9d1y0Sq77z7e
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
rGxrjsr/3Dnuz2RX6FGdD2eKb75+Y3g/z+nCqxpZcNSs7hAPOtjfNQsiMv04
bqg/Xkzavb7CqMd/bfFqOcvrdahIa2Fw1K7ja0cI/+lf//H7ltJqWjJQkYOb
65X8DXdgv5PFB6zK1Omc3xFJCJT24ardqbFQpa4ebEQZERKLX6zgRl2XAWe0
8vRXz0P++XvGH66aCqv3TGgZbQwIbV+UsItXl0q/TdIDsZIs0dCNUQnBuF3e
PXj48DgmWkieMMnYzq8dAFETGaBunqyAMOP19rddaL2nI1AcEsbQDjKUOZlr
jJpS5eD49n9cLuk75oPKg/NFIe5walD58gN/8rAnvgRkiVT78+ZIOs2h541w
tN5qlKswwPTtPlSFPaF0iG+9mjNUVbu+xGLNd839R0qvez3sKmcNsZJPgDH+
ul9b9opKpyggA/F1oowFfABJ5HPy+ZtF7mVv3J61jIHRbU3O1HJ9Hs/EXDzK
QeaYZWtCvd/gkHoTwssuXWXnBNpv9K9RxpjTwCnWyW3bWPW03DdgnmLBgmgI
eNRFTXoEUMqVrrNA6eCvk6pSqTGhIEpDNJNEeLEaPgLHZjhF5agGacvJcBJq
UNEnD5+tPd48eLyxseFYW/3/4X/92frW5sutMEUWS0vS3IjFErSEeY63t5Mn
Wyv9M3zcHo/eVp4oBrFEjv5ER5q3s+srNV3Jn2SN8zeGNW2j8bivOrlqkCK6
m2oJBG+Ou1F63rKX/R9Hmw3LMOqUwXOqquvSMt1DVRxOiu2xorXbVns4Xwzp
cLkzUsuJdCaby7v3A3u7666tY++x4+BlJhbfP/EHs8dH3lQh6gpUwHQKAPyu
cI4XgeOCtxQrhXejEIuW08v8Hz7aPz3a9pyuOdM+XzIZC7pPTqI4QyKkxiOg
qCzji4lQynyIp6DiFv/NmVJrVr/6i+NqFGefH1n26PLahgXchUA1rmEu+m6u
j8BKTTUN0p8BB8yjDbVBymws15q3ucoG+501+zjVcOOs+7o1ameoyfmrAaYj
9ZuLs/Hs4vzqcqyzaldH0rFgPJtJlXG0Us4t5Qrlx69Gy6GcNvrDRgmwNKU9
GZv1Fp3jPUHXodPvc8VL0UwFI3BWGV5oGLCMdQRMtDsUP+rLg1HCtR5YmM3Z
MvWTQE2yufOL6fViMru5+kD4G7U1dGT2r27f3JC4VRy81l2MNZETgTwvZt3V
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
1K+HQi6dcPjASr8uV1h9jFZIRFYoqELnX7oxIJRezEMVhE+d+jZPY2IOOkMT
zopMm6FatzUw+WieKvrTw2nNFMki1hT86fNZ14r/uvu75Or6vcON9Y31l0//
dm/jCVPwtP+P75qojxwrg9bRZvc7IM+gs3KsMBMiSBYlRufI/Ci79OPFGYuj
BUCXcHtoGwzGypl7fxtG6OsRthZHK+sPY1WiO+pb0efReMeoMnjiNBjNkxQJ
02IW/O//IuQTqC12eTJWqZPHXyp/38Pdj8PKCDmNHxOmNO9WHL5SpNgnQXTD
NxnyGJS9HPiUNlZwXODxstQHuWvxKLIcILaKjr6/vZifd+fT8Z2OaHiwm3ml
x9tDdWQt7Zsianc2DtUJxw5cF0wVjuxEUUI22BY7QOPqOS5p5Sr2fM0q1TXQ
GHS67Y7d0tmaphmSTip6V1HsxbhrKPYHRzmSLD3rjxlEFYk0hmA1GCilyYI7
lqWxVMTrPTghF3WzlIEVNAUNkMmAhnO5MkSWSnTF68dMvJD25SA/xzjjIsId
bVXpwLOnJ89WX6w/PHRsPL3/4Mnq6rOVldX1dYc/mo/uHlRDUvoYyOYiSZdr
G5e7EoaI3eFb83k5loKl2aRR1+pn510yyRm5APXxrVVvn13VQ44Xe+NevSaW
lG63adUyUXVo1vIHmIJbgihXKpoAMbomklwwGdXGRFjgISIaLcjDi0yARwP7
mbqGpENRfyAUDnidx4dHTn/Y6/EcO13eeCS67WAqiY1gghfJ+BcPYTroD0X8
QZfLjQhp73HwwWNhUH78M0RngWoul4k6jz2eo32nN1MJHx674hhUyRQADMkB
pFSnpUGz1TUKUjaYRehY0JuhYNyiYoyMiFgcaNY0GHVhJk1cXPU7OjGYZE1B
wNME2hB5nmp3GE0jKAaFu7czWRFCNSWFdt7zRGK4+GA2LPbTjzfvb998Orv+
MJh/o8H9vtG9entu611bhSuZLCzIktiWavbF+dmw059f3t40JaKI8GnUwmHK
brIkXkWFrBvwJ5LFVDhRyFS4JR72aXhufu5uXJ51r64H/WbH5jlaxQB91MOF
3ki1yOKHzuhyUr86n/aGjXrSeH29xNPFh1dQQY1n6q/+8LvLWnh1Z7V09fdG
Cc9nYgmFj0f8W8Z/mpj+X3oXLWF63lTYJQvoPJvOkkITcDgyDZRrswYmDxWC
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
VFfPnXnEKrCNzEk46c8AOTibLpQKAIOGUmMJkVfJrueXU61RDQnzhlmxdDmT
ly0NUXDx/RjBMvfo52++7BocYMXvEJfER2vqvHfnl//T/3DnXiwfbK5ACHVD
VJ4V1PZwoRAq/3aMDdoK4p9+c94kdDP+NJWw1GH3zatJjWKpDEjTtZF+/C8T
Vi7eIJVYbDI1QXoYDhpttXnVjEx43/mVjMC2dYpVQeaV4Iv9xHWu+rE8h7kk
MF/m0rY0Ve/pcr988MdpnaqKAoblNj4IWlJ+/FIkKIETWGXEP04SptB9zXIV
K98vPiFuF6PRuFvrtKX2RbM9rmQLsFC3lOqy17fkdNQbclSu+hUhmy32cKxq
It4ILiqVEnU5w4k+loa7xZgg1PLppANtDXY+qXZJR+9yPJvU+Ax8+e2FYttK
0HqsPFNSNTJDVvK2/YNK6n+pVJYSAGSDYeoZNVJz8WMb5NvK68VQ0pcplvL5
cGTXlsOkpYk6t4iTDQiJF8hqs1RRigUGO/3iESxmU5Evotl+AyMhtvz03mOE
oAvrVba5cbz74O6DRzueUIwvhUECyeFpzpTIHOd79CGMTECFkQCqwzS1U3xe
jf9z35zI8/1ZmyMIqinzJfMvGxyVCtRbZaLOpkVudSMDbW16881q9W502Ulx
GsrTScQi+W69qgOAxExbFbMqMZpuL6MbKb8nyZVT0Z/vgMgPbX3sdvvp4bHD
57GfHp06XD5/xO9wrpPA6d59V/LgFAhmyXI5luNz4RwCJkvJaNAb8ASRrA/D
II7hhFLC4dz7fNfn8dkP9t173grl9Uecp961Prhi6WxJkvujmsDjgfZ6DRPP
nmbIgI3OgaVEsS0X3YWJBdgIeOMLSqVxi+kPBOXYTpooaVQK8mcVzetemSdY
2zQ7z9+sq6KS3N2hV9pN3cb0hK9unr/ui1Jl2rr8foC0vvzy1Zff/+p2Mp10
JiPGfLFcP11xbm5QV1/1G4mAcfOmN5o02m3DkMY3i0VPEZrTYcfSOM9Ba8Vq
Ar6YDqm4KqytqFDsKKOunhAoetwCXcBAB0kGON6C+LBTu+ALZYnuGP22Nh5X
ZN6kG5qMcy8uh4uby+lZl9Uqxrlefffti6ZGLOxH0JM7MXFGbSerDC2b5WgR
RfqXz28A7+Q//dfv5ucXDbYzkKiS0Y7iTBOy15vFkl7pd9oyQtS7EEp5nD/s
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
2a9P4GAwWYDE2aGCikOcLzqzrkBPgvrVuKHWF2IyV+lu54cU2S4DZf7k409n
A309d6xos2fd3NsfVonWrz757DdX15+cGB2marUvFGjYAYyzniHa89N2XrDz
qkBV9+Gnl881a8nxjkI7v/rEgHBbXGF1eXF7+vTzr//n//dvn56etJ/9/ro+
qu11nw1toz3q9cgTkhvWbaqzmC16mto57Uuded0dWSHPszMOcm9mi6Pjjskq
rNPnQKVuug5Ta6vn17ZtEiRPPvqbEEdXDdVyRrXjy+lRl5GunwzBe+N6rtnQ
G0NrcqYYFzo2mp9cz2RkphA85Oa+E4kkg2tmORlGct8NG14f7tnLxVfXDpaK
h8HpdF5eNIFIPLeVRFVStxyeRQU06S/U9SXzlCF9MaqpCpHTj1tLnB3ZRscS
ciJVIdjO/HByeuVsY4CElnGymkz2hyIMAIlCJQM0OniixEGo98lxFhTTUHEX
QT1tZz19usC8XvpKLkGpGCmS9UZDLk2fxJDPnsGVz8frYCuzQx2Koe3k/j6P
RblKMqVNOr2LsWI1TNtMvx3qD5/k+CONyPg9u9u+n+fxJYHC6UJ6Z+Xx6kH4
Zz/d391c+eD9B+H199YF+cVwaqLnew0lVw8WiH+oAYlIcP29lWTuW/7Pxb0e
XzC09aP3m4c5z74vmv7of21maeUjng5EDmIRSeNFraZgFE+X93awjqvoTNn5
WAbMSgbX67RqWFksldxtC6Cy1N7gvh/3/yxIsHVDai46hsltPx7wbD9VbYbD
hDTXCayoyB2pxAkkwrgNGu5QfndQTxSNTBSSMxXQu/UOpOczHB7zY/GN+8Ey
XcoVfI32xp10/WREwxBN5lE4EEE2f/rmu3q15g80JCgPQOHEA5ZbsrKYTyGU
ygs1vBL6+UohUxBCQRCAlBG+ascBTG1Z6kjOqO1a1bsTONj3RlFJRqL5PMO+
G69hkT117oYxbwGPKwLJuFJ2g+kWdnY9K/tCgwYBaohv8TxIE85gbu5srrJT
vlqikLR5MrJMlRV7lumeuAn5OfnTgLaHPJfT/VuJ9r6Vx8iAoLts+SNfGo1i
ElXeAblsgmsqRCaUB1PpYgnVnBpLV9IsnynaJwqgI4RilBQzseSiGFAheTHy
YamnDU867eJ2e16zRRHKF1VRLhp0S8DYSCqnHD/hO1+eBB46Z5ifeH4701AB
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
iIRK9cVL8r5P78D6xUi/PKkO/8s3v75J4M+vyOHVkbU4slvN9uzI5UpB8vh0
enpzUm99+stvfv+l4Hnx5cmJ8i7cwzFsjA9uK73r41/9/qtXXz47f/3Fxeuv
ni4642r44lcLW1L7TfLmyaUzdNmvXriLTz8ewlJ/1Jyf1q3BoNnpD3rjbmwl
yToXqjB43kyFbeJQxKTIJqrWDL7ZnzZriy6bL2Nix0z7EMOw9F5DydevT5jq
6dPa5CTl77dR1Pmk3ehn4KcvIttp7vIIj+MdozdU6ouj9uGEuquP2Hvv1KJ+
uSnCOd9+LA8xWK4E7R7AxUwZyRdEhmJooUYVwwyBS6CnptdsCvVvZkm+IN4e
m9vFT64tHi1Q7ablUlmCgJdoJlSQjnL5RUt8/841j8UOKKYQTh7Nlj16h7rp
jibZgMathYYNOBrClUSA5eFHmWcuxJJotHZKgjcdQUzi7bqt6xJZROaTnowX
SuZ4KkS1xaBndp80FZ701A6bElqpodLptFlBDm9dkavXD95GDs+nVq9cBdy4
1ajhpSR+8RJOFb0Pf/KjIi6k1tCi7CJ4HyL4MVToVHNySglFj6rJ8y/4dCIe
DoYSCd+mJxGMxKIHB75AOLwTGh6x8f3AT36aItbSJUGJBJF4Sq5rfNHuMBgA
KwoDIr2xJVQbo/7TgdOzWUrjbAMlxeCkjmLcjyP4ymPKbdtOf+CkAzJZ8vzM
MyFxCYFxJf7wQQAYVJIgjpBRvhJmTPhuplfT6wYp8v7gfqYCMWAOVU3Fk9/w
cU82HrFIBu7J2azmVDf2sEyyWuQu2wRbLGI0QwPRxw++92hYk/JyLVyRcAWG
BbmMK3gKqDmKrnMQpgi5BKMBBTaVwLwJJb17wKRgJYkGmm4peWQG2AqooIVE
DosH4kh2c1euhB9ueUhHy2ejanq7V4ozXDoFxO4fzG9aaf8SpyKOhYNZh2fU
XqIqLuWlTBGXD2MmXt7sia5Yc9S6WFXaHZFgoHQuny4iZeTmUIrxExtoqZ3X
A8cZwMlWXRE0Cm02FJUqY3jSUzYVAmGLm3FlZmqt9FZOpGtFKr6X8z1usZGK
4Ko0XMTLB7v5KhC/t29ikaiGUVztIMcgOFRFUunNjG1aOjPs2+jdldlvOjwX
WkG//PUnv/rdE9N5+frweR9duNnV7FNbYNSzq0pmZydebxWw7siQRre9rR/R
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
PH5+z30r+OjYL7/9Z+QQ3cq673759P1PPv/iyw+NzCj+0g2kyWWMPWNbPqk5
+3enD794UsdXtg4/O+kqX33x27/77Ot/sFK19Vzs+F4/m5qV99qdcbVXMYdH
k2mrMdk/2j84me71OpV+a3i/laiLJfa0nJ9HpbYz7LrC3a8+3h9M6is/RmdN
wz857Gm1NNjbz0Vo1GleRUe92Yy22zIbTRIKDDV6bgnliuKoiV5aOTpltuKa
jhlskTY0o1effPiw0x22ur16Y9Ss7907pZ33Hx13+8f7h+Nhl8lkK4acNqeN
IAzK3Srvo2zF2oQV/NtH68NXV3NpIJeLAcXd3UCeCC1e/uH//JbXhZEYrpk4
CkZDIRjVujpJ4U5XE2Qu+HK6rcz+8URXm1CSHZiupKaQQsx80RNRLLct6Ils
bAVXRBekZhMDkeTbuho0nh3es7V8Hrn9/Nk8G+befNPoOPJ7n+3VqlWFk3l5
bq3BN9FR0at64/vlNp9C7WdP74vXEye9niWLjX7DRotQIEDwVC66iZ+esWk6
c3Mu+GsSVaKyKSa7ERZiGTAWrjrJ818Kobf+0wVVSS6sxOBlEKSJgMZfXPXU
J/zqd3PCji2bINF0YAJOofE7Ga/prP75dzPtpqbPfdBQ9pqsvknKpRCtsQS0
ezvK6Twt6LJqW5Wmr3x7S50l+Q/vNUpYceXWwtp2cHd1fXdna2MnGNjaXg+E
Nze3loqjnmERP1gOl1Kr29dORuLtnUBSNgiiXFhawSisgA78DIjHtwtUJrBx
8UpC4+a2hoQLhEsBkUSANbXYRr7WNqEcTwWRUhZYW7r5vSuxIE4gcNIRsAwQ
5UNXX1tGr0NGOpVlKJIHJJcjZSsaJKDobpEoYJZWEA0kLeACT5qEPbgtyulM
wKi35VgB4VUGL4J4DrYMgS5GKAYrFTfDVy5SlpIuSHY1t9KIXw3rgOikkpRZ
Dm4rNK3kYA9av9OoswwpS4rMWHjbqGjN4eRwOmZoBS+pNqIfTfTMTpbTq/k0
yqrUziubFBUHCMXlVd1x2HQUFm9tfdsAn8ZpQcV3cmYW10CAYbmKZrRWE3wG
LmHiYHvnkEshErHxXelEiBWhbQJbUG24atFJFTFc4k7fUZVaieKUVB4Gs6P6
CfE2cjipSjSSQGyze/+wPz578Om9IYy/eLr/wUfDC8Fnv//md+8/bm3fEh9/
Orr5JrNnrb4UOTkkr/yc/fybD999/4vfvDCiVB/G0cCa+xrAxQL9o8rhbx6P
PvrDHz9w4gvp6sFe76PPf/93n3z5WHo7KHNo70k7VLtrCvL4tN9tdE+OZwed
WnN2b7K/P552O1V/OumKmhaAhb0WXfLnWEQjFR5IeE9O60TaeXrMB+l7VWNw
F1yuDh4Ri5e0uwG07tnHNiyyUkqN7rKIUBlWBdpsVsz8pvvZubFxKVOZh5wC
/XA/sVMT986mja7bvF/rPTg/GE7GsnWva01H/ujdaauviMmNhJHLjMaZ7QiA
S3Bfr3UHmawiFMBCEc/sRvOZJIIUEru7mXrw9tra0uW/uqXM+XNe7SQOxjau
LBOMrSs67B9oLMw425cD4vjzOoeC4n5TOKiLhj1SA60venznSM0EMhu7MnQn
KZZ2glZfLrBkEK/N06JIQxpeyicmL7ocdOtKcDBSzN++aLXmHo9aRtn3/MJr
O/fstu9VdMWvW4wot7oIUB3WvKqvani6RADx3c3NeEmQpcrsrKnLOUg88S+T
0pJjF/KmAttdEIZDjUOMfDRe/uvv78Crd1aisfgr29H2NK9yyXeWcy2Kjt5a
x8t51epXfEGVMbbAng6pwuZ3/rsfIB1T1xq2l+cLabxQtPxbIYZEYhlSFlVN
sSzZtCVBoLMyTwgIXeubHGXsrG8t7QTD6+sbq6tLC8uLa7vri+lSNrOy4B5J
MCWvrWjNzE/W46yERbWdqNi77zLA5kvX8nkSMsrFDJtLmehGMhZRLBIXI+jW
UgW4Sc4HidbyHJVHWrMuB6YMnc9BxKW/efmHb20y4tUgRrVTMSae5Pml1duZ
N5NMDBTFfLool4ksRolYDsNRBAQgviPjlAAxmkJidBnxu28xtpDbjfstr8RQ
NkXGr8VJGM1sFKkUzW8xQIHIZ1+9ws3VRbQeTYMqsK3a28u5oHJ6bl+/pcZ2
qghVrvmrWy0tyJMbJIcWYjx/eKBWxnO3aammblf1NOz4rSoCm4oMYiyKq/T2
9i6WSG4WcJKCMNXFc6XEKpBR+n2RkgSNL1FEjqEttq6zTU+qhOA5EUnJpLm7
cdLJJ2OBYH5Wgb89lU7vbDQ7ZK1vpHNwnU0yI1aTILppeqauLL2pDT/yvh+c
1C0NyWcLpHt895Ojs3tHx7/+zWDvVx8ffdYM3KqYlS//7V/uHVsIQHRqcCKB
MiDUe/9oErnhPfr80/eef/2Pv7KTqdq9jz4a76x/H/d2sh+9Nzj8zV737kf/
/CG/fCWoHpw++ODDj58+vVvGA+HBxGx0fLB+pPt8muuO+r2zu/XmwVTUzvdH
h8f7/b2xvzcwE+XmtoRV25DszaFP3+srwK038rNHzfLxswcDSdnbm3YGBtvg
To6otZt2XK+qxVo9I7s+IuMJw2EKvG8qrdl0JtMPn80mlcB193TybrP87G42
1+eE0WGb0ZXDo8OT83v7+9O655nlQae6f2/asnPFHEDENhbBAb6l0rdjgVDb
kq1MkTBULINwWCGVzMB4Lh5bWcvXthcvBnY3X/8hQBtPx6aIoMVULHBze45c
cLbAG3Ofljxx5y11KpsYEg92J8W6THu9Oe4lhnyic28oXXpjYS0R3mIMEBcF
VxOz2O6u0Z+UiwWsmFuPDlBALyNFBSB8HXr3y0G9UTcZii9Xqj564Vb2wcO9
Ywdv6a4lGlTNlzivOdZAnUZUmmYFE1p6/bbbr3f96eysQgpMjm6HcGYpTiU5
R8m47ypRLikcWBFIl+GF3cSrt42PO0gqnwNapdpJ9C9uUH4CwXY3ZBmMyv2c
3BVEzzFOP1Diqxu3/vP/cL1R0+qyAAvFAhcE8oxNZtFcLG/LIsbJTkVijHaD
xyjcs1RTpEgQ1evtWDG7uZNML1wIZdYvXly5/drt1RVQwpNX0zObIeCElDH0
zZ+FNShFknmuVfQ/1EowvfyX20mKyxPFEG3bHhDE8uBQi5bISzEgaBQXxLgp
g5VYGlMikNLZ0wPUsF2KBC6/8853fhJlMillrkgoR99CdCOy9vOrb78R0EyW
gbYlVyjlEgW5zEOMY86zuzviNEsgQbUjWYIheLWfCboki4jqCVrZFYvp7dVA
yD5TVy/maaMajeKldiF3bSXc6Cp00j8DS3QupxjXN/Fqu+Mu3oJvXGLV+tyz
b61LZVRW3vFEU6Txkrs/61eH45ple7Vep6zyjMiRmqFxCIgxFPVt51UA442t
n8V4BY/TNVOSZF5MrJcbqKDN3xvLsCmSELTZHF5cluWRBJlt03k8/UbqWC0G
tiirS2AGkUe4whZg8v6DCYNm6GqOUvhgujAb9RrOHKjeXCiPJbDSadjF9a0w
gGGt9qMPfvXrM4atPPvTl88GdxV38KyT81uPTl3NMSDOmEu63SxrJy/2n7hJ
bzZ89+7k3S8/EPPy828+/njGL76RacSpb3790ZMX573m5MP3tduvBgbj8/3z
I8+1apSD50aWezzlpVF3ct50l0uz40mjV29NZk1reDw8vXvYUVuj06nKOybB
bannRinRNqn9qViVUss/iJy2/b3R3tkjD+/crVFWu0+qT07sV68JTcvy6CbM
S65Ileh5FgPjMa3TGd9tFyufnE2HHfhatLp32u7WOrx33hyUWkOjxvin08Zk
cnx2SuRcRZK4wYFTH1XLRpGP54zYS0tKcdqMrZf+PGzGliV5p8gEQpxUys/r
P5sLBoh8NKsR23d2Nq/fekvYe/hp3zQYAkwl4st35GZhA8Qy4duhxp5bA38u
PWAQw4Cu32z2nDThMGHDDSzw6+mKm3771kI4t7qViZX2OrxTdiwlF6XHjwUq
krrN36BOs9cgtWJ4HknA4f3PDloNFWL4YgExTCmxdUt/dv9goBqeBvLHk6Zs
ElVHsGtAbPbFzJYV2yhdv+S82+Ex/6grZZBIrKg2GFzMkTm0iAQFz+CgpdJ5
rxhMOPpaOH4b/eqDgeVX5MhGtuKtfucdDgJoJktQxeydEAAlBa9S9mli0IKD
4cB3/3Kz7qRB2YAINy0CMoNzmiRHYUXDUNEQZK9crnsVi+DkslPWLY0EgXyz
jTpaZIvIXXtjB0qs7sZX37l++WaRg6MLwrmgG1TOiuegdzZz0URe8UoCdlu/
K6mikPjfbxXTCMIHt+V5cWJEPXuZt0O72E42n0GKmrsWcAucDELcej5LNOtr
wMGAzifvvP7SD5aQCPRwxtG0TGdjUg0qvHEx+dZ3XzcMhGOomoYSUB5ialWB
4nRNMryyrNuIWSrZTRf1+KoT41THkUp8TYCsPYaiITC+4X3W3X4N1byZUJKk
Gp9dE4vJvRm9jrVzaTG/UqwVFjEPzCDbm0BiYQWtKCUwiZeoBlnJe7LR6sqE
beq1g26z5ml2pVxrOZbtKpA58wEUBghmrgDz70siCvvGyynO4xzXck3HNOms
48mmEVknMgWbosUEUGZdDlYIbd0shhtm2aisvZUsZW6ko3hXpkSmmOOkYgab
Y99+gweYwwGjMBd2a+e9YbulU3TsZbQtcaPZ0N29slZSClG69/yf/+O//v5d
fav0758+fHjYqI7fP7Q56N7z2lq4o2m9frc5HqqMu//u82ks2p/1TCn+q0c1
ufPVP85Oambiwm0PjT749WcvPnu/v//p1++VN1/NP7x/3rl36DC7caonXBOc
0fkkJU/sw4fHpzeLs+NTn28e7lX90emsP9nb20NiA4OizgRawununMWXgVrn
AwOstGrIm68aQ298bzo9q9DmdOow4h7NVQe9tZ/h3Y5flfsUL7t8VugIFBSM
IqpbGd93dsSnj8a6UAE2L+NncsurDdk2NGP0aUvKV0+mtZZ72OMwv59fi4Ld
WmkOJ+09dnvN2Jdu/WVUPZCgYu2V12r0T7FqeGVtp8CKxUgyk4sGkmkSK0GE
LAOrV368jdNnn9/vlBWexvKZxK1rjr0LGQwGhecZuq5lwmZHSB41wMU/F30K
zBrATnMv+DO2FI7FoqyBcwqQKIY3pbrQqCldL8LV7k8ABi2trIaZdv7O1tE/
HPGzenEZ++XXs44v0VgBhOKkyALRq+tnQ3VPD/KuMbnv1hqjditFtdo7xRcf
95w5ndLc7muZ5/VI0Zc8mSPiuVGsYWfzpSKFF1Q4lya52PIaO/VDEQ1OFG9u
Vb52WNOqetTFZSi5/YZiicmsnSuXYgCQXBfQOMsLTeZOxNbZ1JWfBHv7/OJq
pCVyHcMQ5UKR0R2LkVQc5Ks2L1qNetn2R3VOZDlbEVuuzCcVCexXAnklf2Ux
lYVzBroduHNzC9T0/C3oyDV12JFSqYUfRslgQqAxVIpeyt0dmWL84stJCkxg
GJNM5QMgR7NIgBUyUbEYDlX4NV+UbwJkrsMC2XUxBm9TuWClY+vR5Z1r17YW
luwvfFoQMskdOqBDxc0Mcvv7P9pMAxzm6gxIYDwtV+aqqzmi02nKJMGXyAxR
MiuIro101dVqNTaUbYtZ0KIMzzGpVGHYTIJeid13kIxXLye2NHkdfnAPTfWM
ArkZNAZcfD5eaiWMqiaZia3H0BJfwuEqY3ZqNq91uhXbAYTu4VHHkrWBQep2
pVOZU8doDNA4jJIiQzG0qpQgAXrzEtCqmI7FKvQ8bxSUStnTN68UCVTiII6g
EKRHh5k0M39J0ZVyvTdXMwC9vfpKsl0RTJuKwzVrLhzqcrBWUSmtbrWIVMy5
51X740GZR69E6raY8cocnozF45vr7lf/9l/+9e/+y79/HP7x6SfP/+WTT5op
6sGxevj33zx3XosktfunndpsYjIJ9vmTfQrTa4pq8C8mPidJ9xuaXNr6TvSA
Xzc++uyDz7/66Jv/+z0dWoh+8E+/PrPqHwzZjaLWrQXl5vGzk2ZzOnCr+0Ki
f3Z8rorjs0nZ2b/bG+zvTXuhtfaFndS40S9e3CujIItcKzovWmWxesC/87J9
NnjwsCtJLddunxz5gFKpeHTL37iQahuiV2dFsyVlxa5EEqGiZSLk/tMBuiS9
uKeWnjnBP8/0/Pscdl/yY8ohZRs1KONO9pxSWaAn+1VxLte9DjqZOs5hN7pL
PJAXrv04u29ZRuP1xUH3+gUzd33J6IokEE0AQDxdTCZBJB1gXWrndoCkYub+
YVOk52uCAom3Fxyc7MkFgmair+7uNeF0tSKBQr/49kWBkGY2zm1R5WgQ1vVo
rnEy9L2qTVHI8k2oPWmbApNyDvoUeHpWV1ZvryMQvPLBVxV6NCjttn//9/ua
UjEiIQJI5WiLXLm6M7PdKg/spP1THulPhh1st9yUw8S0pmgqAYlc4urq8cFm
oa0oer8K5juBTVLKhYqiIopkGiLY+DuryRQFFgyRQq/vnj/LJZyqZyALN2Ew
gP8dCwApLJdd3I5gpgBhmZ3N4H6PLFCMROVA49kQuLEYmWqO1yuLYJjKKGVL
AKk8rMkEJZc9Q5TK3SZDaQIneZ6umokUyZTJPIlkE4RhgYUmFS+mNKLE4/GV
bKU3rGbIwBZ85YKASkEdL9AqHIsyYwfZvZpR8VQaRZrxVWB9OZG6ka2VonzR
iOcqUybrh53otknzc8JJ5KP4Tigeqc+a9RwzgwOBn74i37dZLZuIh6AwD5ih
DBi4/tbW2xBJzNdLKjEVWRGQuQhoecHzJC6FMFtRAkMRzap1vULbVb3SLtCj
VT6XF1yv3uQhEizQGhqT59wM9c3Erqiqm3hvxKg1R0dXiGpZMdt7/NoiYJiu
ZySv3IrKEkmVEOj+QbcuCZX6t5eg6bWmIg4PGFIyar4qObbSqxRREsNQXRIk
zrAVkuAS7+wC9VbDJESe0ZgsbpTLOpLFWJoXczFLyYc0iUDWd7p9rRSt+lXV
6dfKfuCV6+WORHtVMK5064Pm8JC7nN6rayIHsW1NC4+8Wn9u5e3yyvXmXjXr
9Fgmk8zevom+/89/+n++PvjD//u70l+an//Lv3/1h8/LV5kz6jf/8Ycvn1/7
+XKyaRUY0W7iK8xhln/Qxt2m7+/vu5rC5SbaZmhnYal9yEN+pbx3sn+232VC
7/zY/a//8fddTnvxXouAypOJOR6dPT2/f3d/7Agt058OpkfzGH42au09POsO
zx+eukWkvCCnc4fvFl4660RkmVzMp4/eH9l1afcXmb29tls+FuKjWblyNO7Q
7Fw63fOhG/zRt71yz5sU6/sk3NWTMKObPE9UjzvMxeDjBxoqVRfe7jx8+Ex/
u1Vx8tqgAklH9kZKqpGILPbPO7VBH7mQ6quzs9HgpI1d/QWmFeS3XkW9/Qmy
JI5P8z8kEkvrzMRl8HQSLEFobjeczQNRhGBVzsOLK1TrYQuEqWI4WYz9YpcG
+LYKk7wAXw09GnEhzvZUAKCSGI87k9a6mknHC5bdNAvS8bTRsB1T4ghwY4l2
KjNF9kyZjw2/nBQF8/pfJzh1qzKTkK7OwP7xlx9UNTYZSYXWt67eAMT4Avte
e2LCdjacrSXIXrOnbVlHJh2NzGkRY1lcowO3NrvVzYzMCDnLoX0E3txxoECm
OiddEqWyYPjtcPZ6USsSOp1b3z16juKyhSUX3koZuezj56V4kdi5GV/eiKfl
Zp7Gb6ynZ91Gi06x802ONcahS6verFmpNcEQIHGb8TzNQQavijRGWz2PxNRW
2ymSLU8BdZ+Y03delIQUR5eiOq3WkpkQQxH8uAt921wVQDHGo7bSOwu3c0aW
jwlFui6JNLTuyZtXUyxLJCg5uRvh6OWLly/fIbrippoJFNnHOijKSSuL5Yux
vMoUCYaEtzaS1p4pYMaEL0Z+8H+UplU+ES+gRKYEo/4tqpjLXV7aRCGwSAsc
pTVcKZZTI9sYTDj1js8x8AKnMtxOuVemKtu2RwqFGNPUytVwnDf9rosVUCof
yxo0BmGlzLfXHsicimznVFOrtKwJEGTKc82YVYO3gznBdxtDcedW3GC81HK6
259NG7WqXe80xhWFjGBOD2arza6HFZxZ0+BIDCdISuQlRdAMS8ZiXGoxnHbH
vqooXktKchIHFiVZ0HhKhwIOkiMtTYwELnQ7++gtzkPR3l6jPwn+1eJoLNFi
lYuSfnvY6047G6ujQUMBYv6+LCT3KlrTa7Ys9Z3F0d2aXrFoE4iErxQ7j775
03/8/ss//tfPwq/OPv7Tb599+sdvQrfvVT/8j3/98PDS5ZvvmHs0DZA1oaA4
S9inL+5/+Ks6ma6kVNXFZWArHs1BbSOjHnYAkBHV8O2ty3+1fP7Zk4djDxVm
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
vXoJhV3XEpPj/Z6x7t8tkAAlxBEIvJP/f/94UFeZ+O34DxuwDIZla/KyT1Ws
olHrIGBAKyqCgJhSOpAotzh4ZnU4g9uDtjejf/ztuD0Yge99dG8tGs5a+3tJ
sG9tL20+no5j3UlVYSQaNlDAl8NzGqbSK6nDPpW4+X+9CbKezZfZmN7X9GLw
b6IzOIjNihPujKuSnhf4xPLypj0TdtZEM3V5DoTI9XQptBz16NXMAsdHPXcf
bGdppqpxeAIIrAWLVfeG3XYX1JNODckNQ2vRSMztW5yz2WNAJJFK5fOAYyu9
fuH65ubf/B8/t4maudfSEKI+EiT0stvnH2qAYCbvCSU8fv2KPwmpBdPghDwF
RaEFB40HZkafpBmcQB6gtGvz9jbFhO+++VYwmsws2KnQVgrwrFy5VYm8dcFx
5Qahwtsbvsv/+9v2T2/Mex8EjPCmLQRKHJLBSaSct128q8Z+/ld/8XEkvB31
hdHuzZ8FnH6bbeHexfs+PBdIptxBQUAzgajNT4ErNy5dvZmrhW5RhaUvn5X1
YsUq16IOedaqG393hakbZR2M+LM4SlIYliI1k0ZrTV6iMgkeAtyBEkvgopLH
AwmSTYbdt+9tJxSedjtLeSIF5sJYC4/ZNjb8VKtYDyUrKdj/gOnwSbhWjBrt
B2slJRVx3dkbGtNd0p1kslyx3sTSfKU+Q/EOHS+06s2y0ew3uqIzQkkc411K
rIdoDsIApldNBaudRr1bzekGF8hJeCwFoUa7VqRWYtD8ZlC0KohQwUtTn70+
6vR0aadU3a3uGOluZXNd1vPPvx4VyvygvrmcKL58bEk+s8A3ZwA/mgwaWmrt
brSqwQtX54lWpVjK87XzzyoedwDjdnsDIbDDMWTFag+HotGqVsAbkeKkgPFq
4+H3//PzWnKTaGxtvzw9bjP6Ma+x0WDrcE+gC8D1UHe3WjGkFNVnVuTXx1Lk
07t7fdDaPx5OW3nqm+PJtncyjaVP+1aBgAs9K0dTZL6gw3M//wh/uLv/2QjB
VWssVU2mNRq0i+X6dNQs7/QqWW1vZ6JlISblSEHGF68/3x2bzjeWaoVuDSJb
jU6lXiZRMnXtPieJDIEIVmO4q8jT8iwzS7oyHZWHrcg1YJLLdRiQsS/o1uNT
U4n7/GtKrbY3zjMsBuBioXkwGuFIESsKWRLBcBjFERiBEDCWsH1wB2AL9bYV
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
ffWit79faDcisAPK1Xb/fNRvVYFQqtJ7+XRvR7JubxWYVO1QDHZiWfqq99HD
vVw0FKqVy6UUW7bOMa5VR3Krm25ut/JZQoy09nZH8s4lQtG0AEKEem3iBpsE
k429OkPBBgWggTuNRNK2MPaLd2+lfvVqt0Su6EY8xMdwhynAYkK2wNfzlf3h
ztb29mBQEDjSE2m30lAiUe7uscuROiYfN3UeDYoj4BgZsY91hzKgym1M66Pf
7fSZdwW+CWV4nAiHwwxHoShl17GUFA06QxGzHZFPZyw4JXpQtt1K+kJovADJ
AjHl7IarMWBiw52wbrSBVJT64psdpxJ1wsni0ieWnYIz18oSBLNm8aoXxybp
Lg+B0bRKl+jXUg/2AV0CHJYJGJt5x9bJBzxUEr002k75T2YLifK33xwMqlIS
nLhBl0rNnUal1+kNt7NoyGG2U0zUu+qT1J7O6kLUtqI1Q+TqRdWmXnYn0Yip
VMydiYwZmosqzs8QQhy13n5zU4zHePvMFdcBt4j8aVT4rW9ZCrPmoKhZU9wj
3GrUc+XNN297mQrgSjDyJaNajaBew6IH9m+QKeN7OqNfYG8FvopaV91ijk2s
/cssMKdFgvZAhAp4g+kuDbULJoPPvTwL8XYSdS5eveENiIN+NuCwajZmlQBK
p3IiTKZplC3lRJbjWJpiwhgOhwJKJ2I9fzVeNchuycWoyaKfu3XbXUz4bVb5
gjMSgELx4EVnOPjJYjcuG/uXf/XpIZRCAqoAbdR71LfWsChHy9++alPLzn8y
z5WNF5bk5oLt9cD9jPH67Ibes76ssi2/P2VPPRtS9ttXNWCMmjytnr7ns0ER
+YWZKzhpct/D8WSRW1GmOi1R9Yu3/dt1KZmMhgVabU35LmskLEwn8KDHm0XN
BldA4t0hMpF1WLUOQfj+kU5YMoG4fYiPJdhwukBzczOzCEwUYyOs0brIcg52
ycZmFy3W8F4sQOnkY+ecXNk953TgrgDqzu3tFjm72+Ygzat8ThSTHAyAs0vp
vb1mtVYvSIlcmk1njXPK9+4KBcnnxhAIdoOqNRDTLTn8utUlKwIihB9LYubL
Z5sPtwnMieCn37myQIG/1JFcNNkVU2mFlk52n+wCptbOqD/m+IxlNfu0oeDj
49PwsnadThHVxkeTYjrTZXP7R8+eHsczT+uFo0dPjnOQmSYtYUW4F3LQZKuX
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
CEWQoN1oA7yg16q1myGEsNmzFUlymjF9IrtyijJzh30g/CS5ApUwMAKRCZ81
yIpiazffLDP4sBcm98VYGL5SfbKdXVpM7tczxZ24of6HJ7XhSTcnDve6MZoY
N7rYVq04eL6702puYU/+n/u+a+v6C9p0Up19kY+GFlfjsWXnq8PExvv6F9/s
OQ4Otld/YG0+3j14utfID4rh/OPne6XRYo7kWeRAb8iXKbOphLIZC+18XbVd
I+tefSaLmO9+5N/fEbVr/T88e7RXUZ0JDVKFZirkUEyNXbh43aqeZisu5KtO
DF1JfNUo72532qWo5+4b7yhEWAMJdFg1pfiu4BtsbRWHzbX3fvLxaDub2/VC
uS1E/ETQ7g8GfUDi/qN+JZuKdQ/qLNTLiQznoxRQVthrwHBSSPWrJJfLFwtS
QhCTgpBMxFgxG4/GFk7NaKrP2u2yELw3vdz4y39/3s5EtacubPrzFTbCxVlk
80d/A9yvNYrwFSMqWmx//j24HNW6EzvC0uv2QYHCw+6R40NRPBRLp3cGvQfP
Xv1mv7/TqomDZ628mG9RleNWsQz60dyr3z7fqrfrvW7rZK+W20o73SDs0dyJ
067uNl/sNNo0ufeoMzhOKkFB7BwMJd1scNjgovQm2Bi2GtVSrkBrCPCau8pF
qwUhzAu2TcWcHScK2agQZWieFCGIUHKH6b39Tq1SzG3zgJTAMyMb4BMcg+EU
ZPTHeYGHfJATXL21YTc43OD4FmnxIkTQ6/N7vY4PfvTfZOm8Vy1bM5EsbsEk
s5klQOeS3IKytM+84lQpZeEkuWGT3b7y5r/962b9Yc2/eP2e8fLff7yE5jAS
wSPOtRUXePty5ihpIq79PMTbAk6/x+Gxqe6OT6oi5Oovr/lYOp9OSjhgcVxa
147oJcbR0LLVvKqcXtikYdfNKxaba+3Kpkouv2kMAQ65xugwquSzzjXEqzWb
ps0RTDU+hW7v7VE3zl2etNtuj6f/8LvnYiiX+f40hWCNMeTSTNy49f5/PZOh
6O8nNWcrxVQiV8qiBjCfIlK57/8Wo6pW0sXUvf9myDAxwBQJahkWQqOWd8dQ
cPyKgkrkUhjLQAEX3mwhJAfxhVSrhC15S1TA4Z3dxJN+ox0J2+b1DOiKcGKC
CCo+OXvqrbPebCSEBQ0O3+2NTJoWE0IoLsXKKQGSLcBBZ5T1G520xrTwMUbL
HIFOKRqPhhmly3m5FMfkF2UePTA9BRDhMAY7tRbPaE+8Pp+VaTqVB+1SbMPH
B6dZSNtp5rwxwkCUEwKu8Yd8lTZtNFT814zlXtvnb8e4TgIO+Rw2pvfsqDq/
1Nrv1Xe3k851JBrCg4VDwpn/4mhYBYK+bKvU/uybejOfe87t/bHpjD0S5Zap
C+HD4x6FJsIet9JcPeg4r2BP/+N+OHdUvvOautAOuboPK3s9JvLouz98efzw
00/3s0hsG1+ODPKtrhQLFRLG9PFW/J6quBr6fK9UdL11RToWlau9v77c2S6t
3Uj1C51mod3JADdOX1gZRm6ctgvBZ3V6U/nV58lE+yCT7TbrzOTPzkANHIhI
pA/2HD+WHm51dlqhs6//+Cbol2q9SrzVydF4PzvxiZ2lm8+enRw/PaRtyUy5
ILYodyIZLmvDzphgWzVgFAPU4kGq3M2KlbIYTyTiCQb9/rnq7vFZlSEyyHF0
IOK1oYV475svjjj7pMrGbtdEIZ4ZGbv+zOVINlOIsz4lU5wLfJPWOy7LOr2q
Xx4sx7Eg4dVFqwTsl0/rGL66O0z2vtkfmROn1e///rfPHj/s7VcqaRrONL78
3399WinW8tEw23ra5Qi/eVPl1wQ3zQFmJ0Ph7NZ2HkXywzQa4JojTuj3KtbV
TI/nAC8w3WtkWvVqqUgnmpYfjzcbFJUotTvtIq3ekKucYr1WLxazrENlR1Sh
Vno4GNRzdRKDDJ2WFM9Xq/k0R3G5QozweWAyTnncJpUZCdjd5qvzzstKMeh2
y1dW53SKmdNvvrfZ6Sdtyg1nCMWBDTe5Mk/GCdWkI4haeZtGrnSgGxrdjEyx
uKFcv3PZ2RhIgctnXMTYf/ovZ7wiHCltFW16JmCaWns5IDYN1//zLcAniDGP
wWo36ldnbaL3vQ/QXiOd+P6beApDvdbzY8WjeCSTUpscCqXGHnRYNjZCkHFz
+uaqHbAsqShAu64xuLSTNxc8gWoeP3PduADGpt5tfjtMJEMX/mmWNZ//UHX0
51/fz/DJdBxYmN7QQFhgeSV8570zP7s2IQaDySiTgiKplFQoZnmvDQD5dL6Q
joKpeg5ZODXuNGESabRrZAYK9PDzs2wIZ6ZeVySkuAsQBdV6NiYwHBEclU4h
3oonSjkRDnppwFihbCnO6BLyBEJb5W6Gj3D2K1ffkDdiSlMYZEZU4kiN8C3d
SKDJfDwZuCGPsQaZJZH2sXzEvMh4g2v8IF+UkqwQ8NpnnCmvwzSt1gS9aifL
kQSGBlw2h8uH46hhjM51v21UkmYXyrptC2St7ddGg0HAVH2RGzNmTWo8GWeq
ufnLqsQuk9oPjuMZyg+C5TqU7Ho+mug/OBSl5vFvW1qT2K8Q4j6jTIVkCiSI
ArPr5NNvO71HjcKnf/mqZkj/+1M6PPND/3E1CVGlAJCF5ZrSYRlB/f/+H3/8
dNc+M/uqSoeuXs1t9UvpRung+NOX+ydfftEP+5LlEN4g/XBBognMaNkm3Bkw
7zZXj7YlVkdY9YmI3+dvffm8ltjqJ2LGOfvJ0X5u9uz7yy/2rKetySd/aBHm
yP961e/3pGS512mWVG/8TLXfK1fFeNS9bHn87X5csM59/NrrNyIFHBGTNQe6
0ykc/flw/YfzpRTHMNFKOYLHYqVup92NUdktcpw5WTp1dwWspvLmSRwTBluD
QYYWS+k4z0RojrDR9TQyLRWkTj0HG1wQvoqODFPE58/9TAbB5Z4US6Z47zrI
Xrm916hLdCIt8IIjU6KM14ln9QgcjfLJOG7x88Uig0NT71i4e6cX1j3br/Zb
GYKqewNl6dXn3aMqChsvfHCT/vP/+6pbbtbKmYB8g+7R7rjXbpTNChYL2KuV
qgJdb/o5/vRGpMjnT3aKxW4/554P7UoxXKMItehgu99tfD8zwn/5X64Xdsrl
Vm/Y3cqb1EGPFSp3S812wguEESPw7DDZ7O/tFFFXlqQbCT6RzBSKEs/H00KY
oiPMqP2wmEmtC8EO5fy4auyynAYXb3145txHp1575+6sLxiGlDJHCPbjkGre
4vdg9jWrZdosOdbSFiOgggidXCbzGoMGn3/zhjYtUbGgF1378d/cQXiWZnge
HuEwYDNs9h/GVk+9839sgEGVCbN6RhALKi1Oh1HB7jbzPEWhCC3GWN78xntX
t7qtZELMCmq5bVoNeHVzqzpNILQxu+lU39rMSLFMhvEsrLFiZFJHL79nCW7c
018zMqUBLbt05eqy+9qpe/7hq2+3w3iCdcOI8e5ZNI5Aqpzx5//08wsflVIo
bOMys9pkXEgXKyXRrzPhLC/lRickkMSNm2bECrIUgc3qnQiDCou+jhHvqf5h
Ng4FPHOuklLTpqQSnY0xcIUFWhVOTIohVCJcgJ7Te0k6hDIYFjRqPPEEn4sr
zp+6a025EZZ1uV0zqjUbG5cauQgp5IKGCQNMl9FFq4Tb9POWCCezeAuHxaQU
9qSyaFB/V2UwulHA5PDaHREpQeNh0m+zqG0EADvP2ve//azUqPOo1qbyOFpx
UqEFZ69a07V+3oYLak1qlBYTYdpLaMLHnx6m7Te8HszmLO9SNjQ07zugM7lC
fu/ZseRh9l6dVA5y+uV7d6JMAJ5eeOvM7p+fHz1sS8/++qdn5IpTLDFq+/bB
wZ6YyAH2Mu9xxZKlfMHlbbVOyvmC5bNvHyTnVyME6WN7RkXs80edxu7nhzEi
k/Lhn25h52RV2yzswDJG8KAa/X42TqtUTdcYKu4hWYM7ilHH3z158lVqdmJ7
EPfNjF0xIQjobGjmE49xg+HRbzqpbFqsdnsd9s4//tw3qO8e7/UqLvWaEvH5
RO3s1O0VLpOKZQVLD5a5WzWpEVkYszfTLj8WqQVsyWo2m8unWSbCQIvTgaZJ
O0cf3u/vxNT3xumjVOL4IJtOs9F4UhST+LplT7Dqf/O7g24V5z4ZD5aEopjg
Aj674ueXwiEHo9OVBAowa7VS52Gz25VDX1bS+biQZWZ/cZ2shSzpNC8mg0i6
UKsIEbcqWIzJrp1+Z4L89det/bSr1e20xGSx1W3isPrsW1eZB5+/fDZs9g+O
CyH/srFVaxtcgvMDT9Vv0bX3tzq1aknMMcqA2KPiJ61Cp9NuVVGZs/YgJsO2
WyJUbxcrzUq1nvFe+ME57sl2ubW720uGvDBBchSVpPEUi4ZswNbn2zv7w7Zo
lyez6ZTI8alsJpOReDrGEGxc4Eaelk0HLYY5lWJyfsEW1E7anHedHPHRqeXb
n8w6pnUbppDVAyMRf5D0KRVyoWCaeNMGLztkDgEEfe6AZkm5YfNZ3NO+6Obd
MTkWMuCRqVNvnEZjTozAEQdA4rgPCNiVbvTW5WVNKmq74y6JrnWZUmsyqxcN
nZdtQYgxoNpyGWXJsPvqpTMz25+mc6OVVM05l0BUMC9Z1zaMusUb4xsbN2bW
nYQEKRSKIGedO+8pgBfurUzeBFcx+WWHecPuRuxTZ85sokznVwchNBE0tWuC
/G/XGoWRZYAT//pffjhRGFZoKp3BoxmWjnC5ER361EavkC3UsjEilUxFaTcC
jq6HsAJRSYAo1Vw8Q+sujNkop1KlCkewXD3gzmYakglSLXO8lAhLsMJeJrDN
WcBj4+NAkKEIj4Us17olYv3SLy8oL6vIDJ3EQaObDRmnsmWJtHtyzcDyBuiJ
5EqVBMfCLrvKhrngUV0DbZvyeKqYiThIMsRGIMgJGJSADwhyCY7AIiSMQgZP
SCZL/Gq3lCfVZCYpf/8K5o53MlxQfma9UWMjYsTozu4PPde1eFRiOy8eDMrW
CxlgA4L5E2DV144yR5WDg2Znd6szaNX3P//6s70ytXg+9F0Miqn0P/9J+dXL
+0+k9PNPf/3wPrOps9sCfilVvH9QEzxE0U9lBLFVrtWTMYyPiHlY6O7m9MH7
22iYTdjXpqlXzxvlfKrU3Dlig4ePc2rzi8ClfOFlNXA9NxBjmVqpW+vuDrpU
1u/KSJFkGgpmqsPP+imhn/Nv3tPoOpnpldRj/v2rh6JWVfvDt/e3t7tHBzVi
4ex1E5mobu+f1CHxRHFl9sItO+lwuQtuyO5z4XBCDymIeE65iZvWPASdDgPh
MN9/nNS4mgna6lm6ugLDRMRvOXrR3zs4bHl+KatWy6lsp9XOx/kwURoysvsn
LtPBzq8/P6qIcc+4Jh8/3E1SYTQSnf65POQjLZZcPX9vhlAQva9f7CY0uUcv
W4lRHFGbtz+5uhQ2mOsNxuFhWFLgYUAOftoIBaCVn56a2P3yftaNMabPnj0p
FZq1Vi6TMs97YSXXf/SinSttNSEfKlaliFmGozPWF33xSvWkU6lVknym2O40
Bt1Isj3ol8v1EjK3mjuURm8nYnS+liI9uXq9lo1M/nRu8PTBg6cvDrvVqB8k
RT5MIkhcEtxT8FYCEJ/lo5hhsoSLKZqVSvlMnI3G8AhKpApSLCYmWevkpN5J
Gu7qvQGP2QGqr7hT4pWf04Q6YNlwKjQc5TShtNnoBXRKQ7nplW1kRSQMh3Ef
FFhd31hY0vt9piCHGCYnN1ctiD9kXRifCBVcjniEIAJBSqICHqtl+bLLEKMJ
iLp3yVgQtbKlSbNNrjA485/tjw4n4d3Y8EfjMavyzvjpn9eHOcbsgxGZkYzj
9Mbsxq07WsvivMqgujO1ovSZnGqFAbXZvIty5ealxU0wwnlUd25OTzpiLp98
dvGGqt7xBF8cSixoZXyTH593S3EuNL7w3luvv3Y6sjvIpcRiuZiDcatJLKTY
EARjbKkoJqu8ryaiTg+D0DHP9LIbZBiXH9eswaRaT7BMUK0IEnC14PP6oK1+
Uhl2zYmYP0kVWbkVFoxTVkit5AJ6nHYA1ntajze3zWs23jo1ZY2LQZqXUpCb
wgIYEXHgWnOJpuOAUuunyNpBSirG07xxEatSvJ0I+giBKxTIxUAhl81GU1GE
Co+WB4DDgSBLhnCSIkjHWVPr5UGTGnM9bHXqSz/8eC35ZUVMJ278k2e3n4pZ
rByOQq5AzGkEhMcPt0X1onOrdGfhHvBMcILVbuT+Fw93esOdrXazNnz+xXdf
7zdShgnPZ00oGbj900+2S7nY4MH285dPt6R8hlrCKs55pi1mGludStZmL+Dh
ai4N+sp9OlBvl9u5MO3/7H+/SIFYJM/e/iD16rA/ctdiutzPi6VmRSiyARZr
HccX4AzAJ9LFcjlbrbWLJSlZa0gEwwRiiYhLVXvWFny+DTMVYkScqh6G2WrE
YgvynZdffprxtdo+lQkVwkh552GPtmz/FZ278+aPPsJZHc/PiSLGmSnMkAhi
WcaRLcneuRMrRgXEHEq1XuVVjsIoBjxAIIKRCezinfzzw93d3djc+8btYb1z
dNxvFxOi6DXiaKJkc2d3dl/s3e/WovBmpJrH8qkYi7PJlXfkqB9zu0gOG5sA
7rlYQzbjCde3P9/NhkNkBPcH/eNXSIvcDntNFjDgDCDudfvzXSSAOH75viy5
fz+46iRDL796ediqVes7jaaADXLyG6HBk6N6KZ9DXYUXo7uyac12ayj9691E
v13OV0vZbL5a6w729ipCPMtlhgmzwS10c7Qk4ESiUSnmWChXrVXLufDNqcTx
p1989evPdrupRJr0RlJxno1EMeU9i5BB+nWk2eQuW+wgyIWl73/sIal4LIJi
Qq4gRumI4+bYoj0sIvPukFOjhQJe9Qd3NNeoA0ovmzQE1Q4YcQRFeMXvWryp
JIrZ2XNUNy9iKGibtAbXZAA4uWIR1RbKtXppE4cIDIT8xjWLmIvhdgPMoZoV
mPaDDrdz1baI6bV2zfg0orbdtBk/XlCq7C6XlX/66UEGt695GCbiXr39wc8u
KsMMsOrkQ6jfnkghwNLHt2ZcDEIIAgrIr02srQQ1M8veCK/Qq5dtWjITxpAo
ot7UXp1obaPs/8/Rez45jt9pnn/Amdi7jb2N2Z0do9GM1FJ3S2pb3dXlvcuq
yqys9D6TyaT33gEESIDwJOFI0Htvk0xXWVm+urraW0ktM9qJnZmI3b24uZuI
u3t17HvDF4hAAPHj9/s8zyfwM+6Lb52f80W2VDvP7pcTPLBwTWPS6zfcjG7j
1fcmbr2jjfxw4EQ58cNMzUBYSrAgls0k+HgxHszVfJks6YQiAgYpz6zawzwJ
hUKMH2C5MMsTYcIdgrwstAFHsCBDwnwCMIrRGJ8IW6BQDDDAoPKuehSVQDcJ
r6/d/NV7Mtquk62tB+7dj3Bo7IfddC3uUSY3aKxaoz+RIheVOEc6kw92+ikx
FlBTXrzdKtJYSsqVypm7yvZuMUKnoy7UD3JJ4odD+mAbJECuaJqRrW8/e9GK
j6u+2Bls2269P7+496iYwk6/OYr4uwKQ2imEgwBXGulFeDCoum8ZwsFyYH79
Mnu/eK9f59qP9rf77Xz/oL99+PSbP33SrzfyUSjSa6CmuxenC2XJVvv+N19+
8usPy0KxgOPYzHzzZTSU6e5wAkumECLz6IiSGaN0sDDoHfR5O/Ev31fQQKG9
R5x8Fbn/5HEOZDu8K3WQSg736oVGVSKFTCIX9aFigrICKGb05ErFRLKSadZi
LFV9UlWMl44qCW6EPSkQzkaRSKPZaNQSELCxEnr+m5ZTu6KVRp2SjOdjkWYF
De4MIuunTqoYyQJr6UYqFDfY7GwtFKgHyQdH6Nl3PKIda/WTUrwruAxOQKuU
PvkoFU4UYsaTl0PlrN24vGIJ3P/9108HlWyGtIa7kbuzyS6+5eap/uNn/XIr
qbFWYsFAfjtbSQoSrIUZFAv4yQjm83ktAKyIE+n98uDp44fFiMRTTDhifhPM
epVoVLXsC1scsRK6XPpUzOfo2XWR6g9wk17uKT/vVKtCoy7Whu14vk5o0VT3
0+e9YraaL1RqfArxAQLRyX/1u4MR/9fr9Wql1a03691qmo9Go9l61EtHAjSs
D9pjjUan022UK6VCrdmuFyxL4ccvPv10uPdgP40LnAcQisVMOoeurKqwFy9e
pKhUPbmx7kJHhMfFhTBFhYUwEwljTIzBAqb1KQXmxmLYltJrsTpgr3zq7eAw
2qnRnrnj72+ZnQaNDknQegh0qPT+wPrJVZUvblfojfT6mCJKIuYZ1bxidnnJ
4VkNimEmRAvuNbmbCpOKO5qk5N6YWw+AIYfZCgT0Fo1qVmkBIIvizmoopL2t
hQwKpdzV3WEQM1DI+hZPvPuzc3eCOBP02d1sJIoHWUB59YTM4ek1nYFYmAmo
b50+dhbbvDrrTEbGbIijAhBRlWVJbdi06G5dbz7LJ6D3/93rZxetcLOK1b++
VwhZ5ldvn9sgWrVm7NqJk6/eti04Q8FskUdxlkuU0gKDx1Mj+o9GE7F0mcMi
2Qjo8bqn7R6MQUWBElCDO8zFpKh2CU+7vNTMLI+iNisKbQYlnweoVsq1UgK2
oj4wSgcMN+a9Wl2mynG4Ze7EX/3F22dWPSIm8WEOYxjEjYMWidJZ7XqbWxPJ
+4V4EAuEdHdCO/ckj1MRIW9fFYuldDJZKBcq0rUJ6qApsWKaCwedThEwhnme
p2KZkNFh8IhwYncvm2TMtnJdxObPbJ5djmQywLrQE8p7tWqvW6/kc4VqoxUK
9J7uOaxEUmG5h7iW+Lrw7DdPW8ODw069IIDpbqnQfThodzF/73k+ndzOG65f
OHZZGtCF77767vlHe83nD6tSuaJdqn0uWmODjJPue6fGN927X1dh73XriJtz
ub2By/2HzzqN/fs7MfldRTxLcrwv+Yw0dx81kqlau8VJQryUE2PpEDciL4MX
KUoLCiY1Ytd8q51qSP5M0muJNauNUrWTkVgMCmhoyGNj6Gi1Z7/Effqyk2au
vEc96GUS2YJgZ6QKHuQNTjFZSUejqD/fZgM5iomkEw53VGV/9PkBff6EhwRz
uzsdMcqwOASDMCvQLnHQzPPjE2syMhwdZan4h9/fL2cz2aQYsLOuW4Gn20xW
DNiq2zkk3HpMmSNWkSd24+EMhIvREACRmFkP+snR349AWIHK7xUqD+/tlLZz
PIMHAvDm2qICjjPXr7pxJNx7UfIEwpmnvZhV4WHCAb4ZJXXYg2wiTnf24Gy3
kC8V2Gw3n2wPhv3e0x0BjtPFnV7ErIsePHmey3ab7XK51Om3cqVKnpfCAJMp
5n7Y0kAQRYTylUbc1mw2h/1+rVRvd+qi29r+6MunYvDBiwLOpnCDg0tnUiK0
cGtz8I+fPdzrxcFgGOSKGBQiiDBNkxHAJQNJL2wzIKjs6rRbCoQYClCbnWaj
XjV7yvq7R+lEIpkiN159e3VreXbNgwUBgzeZJSH5rXnnyqr6CgZPJdxvzBOU
zz3vdnlNy06B1nhCOAO7A5YNJwlq1jVuPBO2avSrG+u0W2GlqZBPNT2td3EE
btLKsITsvNwPLi5pFoIhwOzfqYZWTr/x8+PaWERPIQy8ZTKBAZhZu/mLsQBb
HxbDYUGgfBazYeKXNxSTN/WU9uaaa/9BAHS7jOevLG65DYbVVTMgP//TK6rL
8pKAmadMX32yTbs3T//kFeHXPZu95Xrjr/7HzagJGQ2imOBYPpnNZqKgw4ch
TLoUI2PVQjGGoaNgsGY3m5lixAr6/ebZK5Y07IIMWw4fDJmDFjmF+EIBigGw
sGfDVGhlM5V8UO4mQ3gEUNxc1KPVw16MwZ0W99zP/uw/XQ1gYnJlLnzF7IhE
+AyZjS04TSgI+0fGDhVHZBpnps/IY80fZiUh8hO2eKUkFirVWjotO6mtllkO
8mfKsBvRzLrFEB5GMKaAbMl17noyF3vYbyYglnMsjy26VUtX1Diorj0tDzrF
RiNbLHHJ/WetLBAUhL1qlmEM16pBVfagh8SfPtvN5e430rhfKRxyvuGnhpms
gB9+NewPnnxcN5x87a0ZrPjwu9/898864dbfv/xwp7AdnU786UE8JZE425ZU
755a1R80gswS7hKrOal5jzalv2glPvn604Kbr6bZVNjtwnf2uYCfjXUGvbYx
nWcIKc+3S/Eh084XiGIb9fEeI98aHh702pVcXhBiie3hdi2eYBtZhy1WeiSt
r1imlGyFGtv9h+eNWvbaB3xbyO7tlep5RItlCkmX7/DJsJ5JV0q5HJpqZkOc
YIt3pYnLxa8/b91+yyFlmXFbzB3OtbazWYzzqy6+vWQGOO+UaV67WUg6Q37v
/sscLeSKGVZ7TeaCBG6Hbm8nQ5W63xiJ56N+wl3g6G7WrZ325yUGQwnM59TO
6jgeC1jUDEfQHpWGySFwksYoFA74nTNv2wVcvjmzTolMalCyX7P2y6yAyDXx
SP6zwxaKftpsZJoH29lmJZNu9Ehi0EvxsUoxXe90M8l8/4uPGsYbl9QpIUVm
ep0Gzw+GzVitnsPxbIwRBSki9nudbrfZrG/vb1eSRFiK0flWszWSAlAe7j95
up86fNZkI1ICdXphXsDBjXOer3/7qDfcrcEyqO6kQl4uEKTokRjATjkSiziX
jQy2dWXCx8MBFIU9btiuW5Nb3or9S4WIpMrVMvz+jy7cntWSMcQTMADpooiZ
/SRsXh+/tOZ0BNbWfVZngHQAHjror8Z0Y6Y4FsRBiPIZvLb1DSPPhV2mJYXH
6WFBGxaIR5A7W/rNdQhCfDqYw80GpQF1GxSbTp1uycBDkwrr/KouUleeW1Nr
Vo3mNYtHj6quXDCnyqVSPpMhDG4uHBXw1VevWxxXZwwLd/RfPcMiUlpzUQ+t
WwjMduHH07ortzBKz+1EzYsTK+EUCywZp147Qz9tWWUG70/+7N9u5WEZBdFc
MhNnouk04w8DiyBmsot5KVVN0SPCyFXFLTVkNlnXYPetyQtvvrvu97gVK75Y
yBkiSMbjC6A8A6OMkcita0rsyI7yNgeMcyFQPTs2T3T292o8RnJRnpz70b/9
mU+Q8jfGM+TS69ZRt8f4kH2ELICDiAYpF1UrFouia2180p+qF4qcRkNzrXyk
VBBINiVTcu1qnPLJHEIGBVeXsSQZwHGvNcmvbvhsUC2pBhO9aj4RVd9dY6I+
15UTE2TEmXz+pIWDIkdHXY76vgAHHbI1TAqSDOrA78LD+if3k939QyZiDYuR
iD9AQ2Bt17qVad//5uNe5+mv//Rx1fTmsTPn8I/v95/+l6eD3305/M23je30
VPDFh4NM0BWkqjXd+Ukj6NGCWXFEUFaJj3HZEPTSO5d9upcAqh+1IMBtJDL5
fAG6ueJ8fG/Qy9aymXS5QZfuhYP8zuO9TD7ceXrPd5fcjqd32ulk+zCF5ZuD
4X5FZDRByRJ4+afnTSFTcEzLNvyz9PPf/fGLogYpe+Hdh/cHg8OsapO/v5sJ
1LfLpYy4u9fOBsvFvsorBp59N5T/ZG7v08j0JuAQgNevIcNnR/ced/rZWorR
vfHK8ZOWpVWKlEwBCM8Bk9R3n7RL6YyomRifE4/EtWQyex+NDbMp3uPHIJfT
nY3Yg7hp6ro6VkqxBBbCCNDsojnAY/TF41go5JrdoNJ6rI750SAMBnzHN0Af
EJi+6cTMaj82Kqp0zIfHKVNlmEuJMOer7t1L7hw22800X21VPc76bjPL81JW
RKP15988OdrZ5pfOvart9j0Lw2Y1iVYHvWKzHCXhRL8oQnCIGtFAr9PeO9jp
98oZQq2qrkOftov9YXELGulAq9ZtZ4utIkEmSIcjxLPgrfPDz3YfNVKNPVFr
5Bz+oFdCvJ4QCIfwEMZGQc2m3aNZPXM1nPT5wBDiYXmbduG24heB3xxmeDIm
4hOvv3JlcUIpVoIqD4aOrBK2Wc2Id3zWMS+nojQNmI0OD+1WbbICpobW1zIs
GGUBp1Fjmr4lV4Q8vqD3jhIwKix6o8uGU9GVTbXVAYA647ojzqDA6qKXAEwW
CAXM6wqHiRBioshJIZXfOBGqZVGLTXF17eZpsUGFkmk2RpsBSeJCjOEnr8zr
Tt22WLTe9EcFhEVkrgPPGze94Orx/+09J+5VQwkhm0AA/eT51ZDXGsMW9XfN
5SI0fvXU+KInj+k2N7gUz2Cwnxdhn08jC4nWRScqpgTC67Da880iDzhdW3KK
A3W61Z//eFplJxx2kmBEjuWiQT9L20yUj3RTjDa8rdPGKqAvQ4O8b21xXn7b
0zoYMhazO5yIoVN/9XcXdHJ7auaGrBg5O9MUwhGSYdw2ggLZlM8foRKtSlyM
YfIb9m4dJslpveCLP/hhq0gzjHm5SjWBadxu1R0TzfC5dFzKSnjAE5VmDCpV
53mFungputMrw0s2uJsF7ctXj2vLsJoQ2nGrjxIiTqzDhrK4SbexZNwKhmDC
sHRvG459dNAbHFVSANfstKoIWL632y7GaKle6vabB198/1EnufKrY2+Mpapg
/fd///e/fbi7/9033w5MRjeYamUpDAwW4z7fir9kl9UT0JBcBZbsxf1coiw7
F3p6ADkefP2g4hqbqf3nh4rlondyWawmWvuFqFDNVtLZ51klVH8y2O5zhYcP
U1T5Xi6erxR8waOCrfSo17nXsrkYndZS/6ffDQcHj/eanqVjFsuaP5kpHjwY
xIOlh91avXr/iFASDw+3s+V+kvYT4v1+LNfON0xeiU3c33WPbwk10Q9adbj/
0uJn/8//+duDYb9T69eL/PKrx/7u+O3KwwatBVqdnP+Eqj44ajq3zOsLK5OQ
aPdmeE89YOgVGmUNXMQ95llfDLT71OfPm7h6MTJqnCBBEyOT9AXjmR8O9Plh
aZgrT6YeF2G3D9TrLAvLTpyhIXeQhO16J8MEMaeGihGycVkhiwcBD8o2C7Wj
g2G7BBYe5pH49qCbxIRkIYcA7sf/vF8V4yXK+Z79+R4my/Va9WQsUUyzAk7x
sVK7JSKhUUotVCr5Yr9EixTllcnDdvzZkKkmlLPO3UG9nCzF6GKtkoiW8oDK
6nOpr8Lf1Sr3y3SmV+M8vlieJaqE0wEhfk8AgYN2nd0CeFenjp+JFP0ukAwE
oYWpG4vX33hrIlJ73nXMT986dfk6GJW/pUlhG9MkrJK7EOsCkCbvXsRibBhO
ES6LaVophgA7EwY2jGo5QZpgFlSpDJoVmW7DawOpOGJcW59dUa3Prim0iF3v
IHCPW260BngGsss23aOHGnwCGzNMrW2K6XSpKtBpHiFmUg8K6SBgOn9p7Oeu
yKaFyUmjYYgStEAGpl/50Q3N5t0lxaYRbmQ3V+A8x63PaSbOvvvzvz6rYUzH
lDslqThCm7G/HcNx5852FJ3dCMTDy5dlESZgg8kxdSkH0MCmjUH9EVy94slF
5XILHrGrqDARL3Y6rTSEriuHcRQHV35yFQCtbv9IMaLxBBXCAmgcui1PMb4Q
L5spPXXLsBzo4wKQSzUlX1eMz4sP9xGL2xwUAqvnzxCc/favzG74/FnCo8HJ
vOTy5UU7FJGkoCXcRKMHNbdfCqpVwrCRiAVlBiKS7z8YpBHAvpavF0RUsR6g
vWdemaQq+4cdKZnQycCYX8upzwu/fdi5c4l2lismO15o1wvRgN24oAtpr1zC
txk3ivkcUV7vHdBuRDCtb1IqCzhn+uQxKX/+2UGzWK/WK92RDuwffPL1iw5H
51rY1LX87v5n3z5pV5mTr71xynzEDT77+28P7z0plL74p8c/LN90MjEqCcv4
j/fid1eaWTeb5bs5LL55vfS7xzsZeD7xxSEV+/jrzx+zJl/+xVPcNRI3VMDk
uSdpKFQOLfj7uwWp4LftRC3lRrvf6lSKpd52teQyNWNAsQhnh0MqVOe3NL1/
/fbe/nYzXSfuvLMMBMOib7X267p078VhvySEEE6EgO2jYa/er4Z9qVkiE+TC
tUQonBU88Qw2wttClsRgp0t9Cfq//9//+iDON/NIohl3W94/9dO/1PSelmzr
zQ8R1epZD2nPtrwys2VtbJKhb/hflkKFhJVJxbnlYCEWwfUARcKAZ2vcHS3k
wiHAhVCo14UEdJ6dfIQdeQEXDa9ECns7dSlMB0Y14rWiaAAfXaZCKIRSZMi7
uHGwS4EX/1J6kMoTTtQbGRH//sGwy7LbBwcPDuoeu5BP8oUqe8n1j1/sJqkE
za1DVSGN5+8d9JvZWDafLJULpWy80MnHBZxL88lUjK+ifqM/yTO2ddXyhlVJ
5+SKBVe12yrmEpl6QkrSfAKymhWKpetSzf3sSZEW44dlzgeyMMPAKoMb9Hl9
DovD4rXapZjs1u3T85Q0smrD/PlTl8e9N983zaqUNs3k9PRtLLJoichPuFmH
5rZLM69lUvgqQFlXZ/B4hlNYQbdXeV5P82LYZIb9q0qbVacGMzGT3Sz3W1a3
rOYQGSfUqxtKnXZpYk2msgEACCNel80L+SEIsjm81OjWab/oz0Tlty83coY1
Mh4ALFa7vdkw+r1Oq+yDmWtXpnSyFbaXYoUogRKk4/Jr15CQWqZRTW7FHCZc
LO+hajSTXvvpX78xtrHpWDk2XX9ak3QLmrfe0CwqoBeVdOjOEhW3rNj8fpaX
TVmU5KDu9GrXINJH5FLBzRUyD6tcEdEuT9Vio0CbL+U40muwQz6DYnIiWEqT
GJWuVQoSHYA9Hrt56r3bMptfb1O6stv09JLTAqKEV7algVSXZNdmoq1yu8lx
lHvitXfCu0XfIhGIWGZ9dpINQyE6kqqSXlDCjJpojfSnW7QnHA+T5Wax05ZI
yhErZxrt3bDfOpUb4TChC4TD4aV/f8wHobm4D7RvqFxZXOgEr1iOWjkaYTfB
tJhjCoVOPYxsAFtXbfaJX61ICcTl97rsK9OT2lWNRcwmQhktilj5dKtbfPn7
T9pEotytUELz0Ve//fWXHzf8cPO5OHW+cP/xt98c9br88bd+edP26fa9j755
VM0XJKa2s73drOZQAAFdJoUtVUxZ/QwD0Q8fCWL/w9B1/NHR431QXkg6vPzO
118dtevVWCTVaCfZUiluN2z3xdz2i8SZrUGv2nlIz7QE7/BeJl3IsyPOfXbY
TqcayXAy63emDnqFasMhh774hy8/bOcLreiW1y89evokvSn0qsNHD4fD7TK9
NTbrjhf3hs1Or5f2l+enk6jHmk8i0TIbTFfT2ZBVyERirPHW2aviH//w+w6J
xApsejus3Xjzg9d/bI8OmyF1pTi+gc5a8s1eK0VzlGzeX2YndL/+aiedzjBh
OqSx41IsjIMqvUOlZkCfW+4WOAoL+REeBW2bplyd41iWD1PoqdRRuNxymTOx
EMpEaQaFQz/M1cZGdBAKIfaZ+e53B314Ip1lu8kQQ1PxZLpdrcbpRPvg099+
1IGpTi3Li5WiB3/6z398Wk+ZoZQxXapEG/HK0Xav3mi125XqqK/5XCzMYZF0
XOSrVdbIhXKFcluAPKvH3rgz55ZQdMNfbNRbo6hTzggIwuCoVW1fn1AYXN/+
flAuwplMeguU6MSiZmHeqHd5nTar3Qvo3Jhp4uLc9YtongrIz5wbIzAEvm3h
QK9FPv3BlQ05Tkwuq+xWMEoErbLllUC9zS7OyFUeEldYia2V0a9pxeWA3UY9
IQio3bw2Pq+kyNWp6U3ErbDjUSmCeKw2vR1yyDV6q8sLGvQWo15h9AIa+Yju
7RAW0E5fW9VpM63A2iUJv/4LBQ27NpQblW7QOb1pMS+fDgCn3yctJ65ERpUh
mxwfn566uhBt+KbnEYPBE1q8VvrDh7WwJZoEV37+H6+aDArN8pzcLrSynpUb
p6a1b4x1n5NB1QmVyK3eWdPdhGr6KW+l22+IkGLJTYIREk6Fxm6JKaseJeAA
nc1SgVAyK+agTSSAg3IzgPGZWjnORuICGYYc4WQCWL9++dSrx2ReOtdMcIzs
7oX3rsmSlN+GiO4bWxPnryuF7YNOEsHsl97UsDqsCLg8ziKh9ocZC/HkKCt5
XZaoTw5QkajVPUo0lXax1q7kq+1GregXqsMUd8SDptVoe5gRwyEhzS18YOJA
H+Kwww5/IhgSd3YSznxJTKQO9kiksd1LZBqUO5GZPn5uXaF0Lq0gJQkJR4mt
68sLSzduXB53ZQ97fjjeShu13P3Pn3/3WRwRkzGMqnz4/T/84x8+72Wqwyd7
otA9eP71h7ut+NabZ26dcPcz3U+/2+vkcS7KpuOtdqVVCvjxTQ2i1dr5WDU9
KvevfhNaaH+dhEPuwe8fmS5PBqGgS+8sPP7o0bCRrR3sVUShkEjUtnmk+fSJ
FMCERLlZTQeK+/v7XR6PV+qtSPL+brW118lJqUYKSDcbxVIDtoPh7cOPut0P
20E5khvsPX2QdDHlpy8HvcHu4W4dHjs2mzk4Gu70m9s9LhlypqMMgkdBMhcX
2wedHONAcsl4eHHMFYBTX/zxqJf1o7laO7xx+s0Lr789l2oXsi6Fe8uaVcgi
vQfPj3rNwGrksydxxdThN0d08kE9J0TJIBmNkLRxbCFotQgpxntXWx8UwoAv
0RPc68uOaDzMJyKj8jbefvzEVYlbrixlEzgxuocY9T5OkCSJwjAyeore1P28
L5X20sVyJEyk8rlCsyNmeHswnqo9/Oizr17sNQuimE3Vu8PvfvfVk7Jj9YgQ
P96u74iRXi1Vqg53s3AkGpNInPjhmz2fz2R6Rzy0c7BTrrWajXLccPX2lZOW
/gA2RWqt3fuDeqdeLGTjYb8ZjhpUWwBT+8M3B30BZZnZbI9HV2BoakUzamm1
SqvZ0urnx+6uLN+ch2DasXZZRz/YbjNGjiLJDASo3roQ0Gi1mMOoc2dLFKhZ
WwyOHqifMQYBgbN5Qj6t8/aNkF+2vrJiECqi0+/T33j9V+NLyxtzt5eMFiuW
qaYhB+DxeMFAwD3qgpGfq5XyycuTKzq7TiubnJK7w4xTtXz7+iTIeQxLm5uL
N6bdFOKSIbTRLS6uKOZWFyPY5DXB+Yu/2XSeP3f17V+9e2l2wy1y0Ph1j5EJ
3lGvGMk8Duhs8PKZv3lj1WpXzszMafVLRo9fdzUQUbz1TuITYf3iSX0+pF08
ceq0LnJjsXWvUSi2ajyo1oKRgEsIL8zHYtaFTScEe1AetwDuRo67/aannEKD
3mQ9Ga10cK1tpCJWvtQZDnnI7Vl5/c9Pl/aqOzw7KjzZyT//iSfJWfRwyGm2
yE6eXrSma7haLQQW5NRSMD02Ty3ifhjjgl7HzqOCAPhshH+djMULiD+ghzPx
ZD7C90q5fCWXzDTvFWLdsF6uUpK9Yavk5xPgmiOdTkohOpVJxJOUydlpFGLF
WilrFVKhzselcqXUsN8uPLa9cs69qcYxqPmklc8lGK/VG01Qm+/8+LqR63CW
0nZIM+UD9zuNx4elIkvm2g++/v6f/uuv93rVzN5+v94odT552RFg17Uzb08o
SpVI7ul+7fnDXB6Tu/lSr1WVfFgKBjC1jIwDGyBrnrQlfGuHzzpSYOXBv35S
unWpfdSMqY5pu3u1eGLw2fPBQQtziZE6HSCKlQYVE7B4ZafZTjYP9+uphFg+
eNxLt/cbhfpgu1ao15sjJGjnK9v1aotAAkj98ydJYPzMEpsZyYQH3vn25V6v
3x90ixHL7Ql753FvsFOKj5qKEBPFckGMc9lKLNbfruSTEaFYSAuaOSY5isbD
j/7U1o9SE2WZuHXu7V9dNT/uWpW2ZbCpcniCnk13cvewEZwGnz2uKxcbg1wo
/XyngMfighhlaNI4MjkoneJ5XmGq1CsxW6iRwELedWeNMCBlnhLzfuTwea6I
krMz9XyU5yLUyEARFAsFUSQQgBTzEc5RfFzAHr3sDIpcCB9JXbPekFIF78KS
weME0y9++2I7R8WK4Wy63u/ttG3q9dq9+O8P7j3YH9k+JUilYREXhFicYyKZ
WikeL6YifDeT/N1nrcZwe7vbbsQtt5cM43YxLYjZ1vagWS7UK5VWUQraAo4l
Y4hE7MX//NXT3QjuA5qUcmpESouvra+Zdeffv35La95YX1pXLM7Pb5L0rdtg
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
2PRGEgEYsrkRMkCXplE96PTqNICeGfLMioKwJp3NhQBTxzo/sOQmpZNsPOlU
M4XOcALiKr3Uk6+fmKIHIhhdlc0mfObbgR8OXWzGrfP87uMfPt9odLqbG52i
tf/XPzvl34sQDTda6Gx6Leo1mY1h7uZTzZ2IDG7ube1kdCZbL/6FM+mtgmx0
wtRBVQE4are08rqit/ZJVOOIe3NpD2HRRZOpVMRMeW/s+M8Pnn6Ss1uK6zhA
ttMsruLE3//yRJ/32bOGgCVyrNHWP41zR+bGr6zEnv/p4W4jbuz1Sm1za3Oz
XLEsRVinqKmZAVUmEfny//n94e4usfDibXx9+8FGt5DKetHCwW4O0DmFE/Y/
fPewUW1sNjd2Nzvr6zkbfer6m7+4FH26Wc/GLUqH0pJV32ZtHaz7+qMPukj+
/r7mvAYUcxSP//2fjsls1GrljrG0Cms8FlEMvHeSIaUHoYDXAqfltKFF7uwd
3qffHRbsUie80GdMSql266otEdQIE1bVtHzx8q2eCTmisgqqUEZtDI4hJqAT
n27pRm4BXbdG2PfB3UmOmzAvFZ/YVrXjUt292yI3f/junUjNWb+fkd2+KUSj
Zhg3p9rZlFtvt6P7WQgENZQVx5Mfv/n8i4I+UPnoN9892tveqhWcbKOXMadN
7tdam5w5IN6uZKwuC7l3lA/FvKpYlkhgiVo5mQmt8a1uNxiwU/lO2GczhUr5
QsQFag1STait1R59/em//umT9SwaSgW1bLXDrNcZbESlnCMzSSIeQfFcqxJz
xztpsopmYlYXguLJQomMJvBID/nTYbdZbkPciIkzt5D5tJD08QV6pu7eoN4t
o2kQR9gslRrVxjAMoQ6JM2GRqvXOTKUAWwCJv6hmqrjXKYGtIBaNROFEKh7C
/DYFn8UZO3Hi1KVrZ29T8Oc/fHcfwX/6Pzcc7IX5ucX5ken+YYk+BEllEqUX
ATWT757X5stFk3Z5+u5VtkpkjPrhaNDtCwJuDLGtUSeGx2XlBx8dtVudpPL6
HanV5ob8hqnh038zwZ6aYM1LBFIR12rls6VOzjBn+VS/wSYcuTgiTGy1cIlM
nwhoEwHViZfHeU5n2iGYUMjvLsNUns1scYASudbpv/T2xLimqOxjyKVaE2dS
ls241y78zfynPz7/8KjnQ02EfePSiMwLWhONZqvZqNebrfWN9c2dnU6nU62m
o4a7J967y4l1kxYFPxDSACjZqKFOvBk2amWDb7x6YpApss5cnhabjv/bn77d
PP4WVcrRVNhgBrSOsIThT0ACrdwedgLUovpFRtlpgcpVWDtrUC0tiTlCvRZJ
5jNRm9ZsR6PMIcH8uTPnFlnc8Lpowm+S0UC28bPPDjbDi29fdDz6hz9+d1gp
VYoEuHT2lQ+0uw/3HVjKmb5fivhBtw8GmXJzfSenIshcKkzU214rGvZb1Aol
ZAXyqC/m8hEbcV0piCBcr9O0UXYF3Yg7nEjEU/FUEdMsXJ7a+e6bP+wJT7lb
hdJ6p2lispl9v/jb923VHGA6dGh4SidzcWxcwrsxWvrzb588OkzosaOjvePj
zb1WQHPrzIJRRZub2F0PVX77f/344f7D9ORrlAyiyx89eXZ/s5Lpfv14PWZQ
y+Yf/fuDB4XWzv7O7tb+g4eH3bhSNPPGr1jrD7ca3SNi6ZJdJTVJLOlYJomX
WjulTAxEeghAGeMd/PH7x42IXAybeP5k1OTJIoqZC+8x5KJPjopam3ZtfoI+
PXZrGPmimwKsq6sA7YosJ7iu2/72++dPnnzacmQqPlF/L+vOXJhVVb6qKUzG
n3Z0zJ4Y57CF7oghvBvUClfGZxaWYcfkIhMQeBeVcxfnmQHvLfWSKJ7GTayF
Gcvh/TwIRFwul9NqNIZcBkcqGQEtc+ra0ed//PPz+2HBCj+SxsI+X77lo1IT
ZcoF4GFMvX1sX2A4jU6PxipiOtYbRYznbW6REU/6eDvhktO4eoMhSJCln85A
zBc3G1k8EwScKsFy5jff/va3Rw9+//3zp/dLkMMjZazJpII1kQ5KNqrVUjqc
bbdqpWwhma0kzAoLHg4hnlAQI3Dip9XBEbMFghxarVWuZ4os+uKzhxW8Z7Kc
RXDcuF4NGabPTSxNqyGrI1Ff32zhuqVFhc8s14odXhNPqk/USK9u/voENx7W
BIkYkUatDshuBsUL0+defevE2ctTlp2Or1hVG/MbjUQcTWRSmWDA6jRPz62s
8bkO/ZV32V7r2uVz/M09XMNk0AdfuTJ26XxfsojDEBhEXIDPreqFSdZK/cnR
UTsZI60jfTwMUSnVcEx6+8yVa9eoK5NmWG63LAvdNpNUKVlg6Uxrg6evgM8e
5GLJnx6pD8csGr+HR3v71etzfqaJiEVoF9w5vJhyKRYoHJ3NprwzzDw9kAR7
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
6MCwKWE3JWLuSMzidgjpA0PjA5evITTB518/3mvF3dliCpbjpweWIWeiHNLL
sZNTQz3Tg9cRlqDTwR24PjAtkmKQy9g1RN/sKodF4nj1PJHbC8YzsMvu0HJ5
ZK4n5dMBEgFLZ52+50xrSFPTZ9+9TSDTDRCSS1haWUFjVikEAoVBwzIw4yMI
CgWM8CSFetwoEpFnbmPx73/48yE1b9XU0lKV0zKzQeqGifeGNFs50qXba3Qr
MMUPlLZ2C4rrf82obTbKMajpQCwmX375dKdRzYDTr72tOujUu1t7c2ujudnp
4v/uwXan3e60i6mAeOzNX1xexa/KVh279QQUzWoQH166d+c2UipaXFvgy4vr
FTjo8S2d+9ntKdvLFy443Kg4Of7s2hIHLwvGGq10JJGsNJJhMxKB4zmSMcrK
nanw3/1Q0XiiPDJ2aerKz/9swGqiLJF8JSsyUkdf04ISK+QTZ5+FpRyigC5M
2sULcDEBao0GJZrrTjTTTptscWBslmIvvToI/Hj/zPJBI5SM+3wAywfJufPi
gNkkXx7GBUyqj58ki/W4cNWiwPZcvjUyMa/ZaqV9pRgJ4/FFIjlbMOn3hfKb
aZuGj70zsrIiNKjJRJd+bapnyBSMtSqlYmujarNI9TIkS1U0DS3ETtIW6cIE
RzZhcFgzrVLA4eCZdSKDxphvlLI2uLR18vgoLpUZbFIMs/DlacGMM5x8/Gnc
f/p0u5WxzlO85ePf/M9Hhb2XT1qFCMQdXxbp3fbyN8+zqcPTjC74LMc8z9+I
wbakAzLoc8mYO1ZOwRqrT8XG4NWxTLaU8oUjwRjMmbsGZNzICxdY9xNGj09N
Gr29wuETdImIHMOqrPuZo95//M8/PSlvVrwBD2zP/3hNZiyZChAp99j0nneU
Qbu6O0QNriRzUSQztx9uxUAojLuGWOUb/F8218uRYCFFvfyXq6fHO9DMmVsk
+iy31o6ldajlwQ/eG5SHIZUKoGTcyx9c4e998mXKEJcrLCGH3BuS4VB4DWR0
mkV4tNBoFd0YIt+ZYi6iXYn67rZ8metjT9MUknBuecxo8RW7fSJVWY12M2bR
sR7but9IZsJwKZdNx6PG7gYyOVYFWug2akCp0g4gSVKVgqUMutSgVimW2SC2
o2bA9FwlOAPxfCkfi8QioXA8Ho+5u1kBoJPBTDaRKJag2Mvj/fZ6vbNZcQj5
xZiZuWp2uyx8itDqUK7evnlvdHGVpPYWN9tlHd2Qhs0Rq0KPGwMV2KXhMbIl
VWgf79ZKqTB7aOzW1bNvnpmF9588alXzLq3GbFasjSwtrFJXMRImQyhUiwQc
xuKH//0nE2z+8qU7yqNnDzrpWCJmM7n06HkuqPcE2RNiKJzwuMKpUJdO1Eoc
mkkm0nlaAZI2jZjp6xkjYhRivZZp0tn0fcTJC2ugCp989mAdtmhJV/rp+CU0
hWlxaAXosX4aQeO+ffMWSpFNJB/HCBLCFAKjoFLQa0SDEknCj44t4lSrd81R
n0JqHpli7tQcgYaKW2jAI8Or+tDugzYweY8Y3jnY3W61Njq7+zvbm93n3d2d
zc3mxuZmrehaPn9mdo3LnkStytxbD+8flMLKmZsXLy8yRuc0dulNqtPyUUvM
FeKQXEDtqaTTmcjBQSUsksLp7bZbJjbCsDGwXgj6IhYcnmrW+4OrU8hB6Q//
dgL7jNyJWSmBzuOI+XT04NkzM2qz0emN1wpVhVCk1ibUROaKMjR1Re6WCy1q
jc3j4Sw4Hj365LPNoF0vkWqV2BFC+Oibqq1wtKtEwBl3sPz05fNmhCBvb3ZO
c1P9wbghnc5u7u+3MrVmFhaie66tDo9LyC4+mCuUT/Le9WbcaHF7c0Urz9P2
oO+RSMMss5BoFi73zPJNQSPXwl3oG+y/N9k7isexgs8KK7PiVCetEwFayaLA
KhTmglyWJRYGpBwgmQo7t7bqnb3jR083jHK3VykwlB6WRUiKs/3ws73k6cvj
k8ONqBSJN2pkX0aujT38qgABrDVVzBlIt57uR1zt45g1sV8OCPV+rwNMlnUa
DuMwM3bdc9gIRpUyN5+notBWZ1iAJypn4e7c9f+w6+ad+3PGdy/r9aKROSFx
OSauXh6foS0jFIkUHdf423/91+9O12MQoAMWTXWXJBTxKkEui8NBvnEzVpYw
AjY1nMjo+SQ0g2UqeLQaOUWgZrDsbE35/lfPs0pe3ztXxbsltwQ/NDjdQ3rx
u72o3mR1Rnnn/+yGo55lIrH5vOwuoRGHOx4wBNHF7piGzuayUBSB1BiLdKXA
kppg3sjwQB9azKJBjaaTLHfmwKmLLLHIwR5eQfIAEPboWCyZ0JJUK9drsfJO
p1OvpP0udyadjgcjTgmgNwlxbJHCEzSDNu74GpdEofEcubjb6VDRJBDk1LHt
6YwTdEYjUDDudIYTqWwuF9VyVcHm/Ycn282i12aGH3/z0V61WMyGTFqJ3+sU
Ly7yTWbQbmDgkNfPjvCkRAqYa27troc8rkglkc7ZTNRxkV7HBuR4qjCyXsnV
d48CqOs3x99652IvJdqoVlPJQCAAgzyCRMRgSjh0wsrQNGoExZfYTbjRt//i
v/55r0xrPfjVH35/ktquxSGFgoW4/eEEAnSHLVpDqVXyqjXuoFnJB8CuBygA
MQknMENyDhGFUVrNkEIjU8c3LAPvsMC1hITJTz17ue0SUUbO3FK3s4xhoePK
WZTeNXn+fK559y/UnslB+sdfGEl+mL4ySbSpImaAP7GiRKJzO600uHhrhM+A
FBflfC28SJQSQjqH8dYteUAi4YqCRa/a32hUmtudnb29g6Oj/Z29/cPDTqte
rTZqUfnIW+eXsFgnQDWblvqAzu7Dh26NlS/S03rPd5lgBWCT8/6oYGpxZNZO
8Tfd4XbEX6lGwyqsprTficFdFrX6xUq1A4qKmKhczhUMzs4LUD2yR797+aBd
TQOLA/rnL+PqcN0799f/5ZwRmubvuEAYggmhqNYMQTQFRF8U09BIvkaoARiK
QKlx9Opho4srO82EgrZ2neX/5VG6sRPjMJ2VzPaTH5517asZj3rxTJcju1Us
5HPru8fbm7t7W62tTt2IRM+/NyaF7GqB09HcTOXyKX8g4nHq6DOq51Xx2uri
8E0UA5DYnYmMv5ILEgyggLg8M9Z7+cxr53smtYdhjYYT3AxFNpuebiSwshFl
a5fldBKxFq1n03SVTlgPSJMvTmAkp3D/k73ielQ6c/38Xeknn2WLrXIqno7S
MtW8kQBKRs4TfY5g2mUKp122bGenHs/WGuX8j8e/WmlLuKAvbzYySuNmjLsU
2zna3khDkN6txCJH7izwZCon9d1zol8/2WgoeNnT7c+aDoFMT1lXowbfu3Dr
JnZtcWiWQiLHvv/T//zjv/xqN6LQJmCTPwlLs1tOLYdFnR0iJlPJuEhphbu4
adBK1UK6QKgPO0gLK2T8MIGaqtrUAdnkEprrg2UUJgaHWkUPTnb+47tWKJAp
uVbe/fNLsuK+36Jl8HyBfNnoTBiNcEjLM8YTThWHypWBcqkW1Eh5IqPfqQGX
b88PT+mdbP/TbZuu86rpopG1Vr9MIOdO9U6w7T5d15LUfiXHFITjsUg6F7Ya
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
Yak3FQXkuZ1GIWqQWvX2cCKfhPVqAV5qt8eSJhUgNkL+fK1sRWL4GBukKT7/
5OFXHx03IC5z+AKvnPd6Y9GIVUpcJhBIBImaCwDYaRyLRAU9Yo7BnMw7fa6Q
Vy/GEFQKEoknoA6ev943gSKjxnsniIBGqlXoFESZ0WgBRFh2IFeOBqrNVCiz
no+73aly17y9OtAEufU8JApKuQAjgJpHUhQ6YyLutYG2rmMJTH6H1aKQyMU0
ikAnJmOXUV0cArkCLldpAGUaiVREQk6NTs0iadjZ+dlZrVqERtsDXJ6MbbB3
G6DG9qDJU8uYucFlLE9h4K/0zOn5N/7rOSpbYAlsHzaPq4moQg2HvIaujfnU
E++N3v7JrFW6ooja16g6qwvWSzCrymQ1wp2fWWZCXpMeVDPkbrZCybaLp2eB
ZKWWNIjVzJE+HA+DpCCvvte/skSPt2KZ9Wgwt532W/WAnNR/486dd9+aZkh9
+HkGDYiFKo1ENKTjgd34JeTz6QbDqvOz2tIvUJsPoraNIg6389mTriLWc3GP
nYeSRSobnb1WcaeblLe3t/7/84C1YjaRzurvfICQmPwAfiW8++Dh749nb+Kk
kaYNKwEmLg3fWrS6ICONqrlLqqUowxcXmCM4rognsXiDmw+8ktBJBa534kqG
ORyyhdIqqacccrntHKlIzBjjQX4Df+buFIs6d/GuUONrFLbqKrkOJTLiglt5
K067l7Oy1bWdskSgoXog5xLSw6YS10S+Yj5b3ri/3960yxkWPxhavCFVS7zV
pmMW3m94lCh2yA/4fAqTmhX5+Ek1nshkc8lcuVRvt2ulXLZSco68feOm6dnB
wf7G7m4zIBPgh/qFlbxJa3eT3jkrLgZce7vf/OHZwcPD7bRPHXq6V2ttb292
1nWT59/4+U//8ieDQldED9gDkNsj50+e/cUbk0Hd2KSCu7AQ/+TTL49DPhvy
+t2Jedev//M//9dX9Viu7Bw/NwtvHW1mRMa8J2VNdBoxSK4xBV0OjQCJByxq
ML+17tO5Y6lGI+MwRKwqje+wnXSCAl+2mTY7nLnWVr3ydBPkmvSAQhM/3NIv
9V5CxT7+6tXzda/763/+7h9/d9Dc2T487Ma2FPr9c5cuMtSIMyPT1+elvPlp
Yvb7j/Zf/NKLo81MDA7QnF0GAfr6sctj3IEhrAQ1NrNKEsVO9w2jvcD+x8e7
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
JRFzVoQRp0a62D+HGh+/enPc8OD7Lz777Ol6nnXtvWtz6t0f/uVvHhYCmUbR
JeJxlu598PY7N/iHz3L5lDdu4MoqR0nYv7FbCnutyKHa3z2wKnMF3dIdXiWs
FDCV6WYh2c4mQhId6oM7A7xYIrb3+NNvf/hyN+aKx5wmZxSWLPf3Ddy6cv36
oNTVHeQMVvy0UapXdjeq+416sZUP6Kf75qamhVK2wuZyQlZzJtcNsxLsjTk6
Z2oSJa19+cWDTnd3jS5rOYSLg71X3r82JkhExVK7vfFJU8FRJHZ3y8qZ8+/f
40KNnI5PQ/VdAU9ffvZqNx+E3WxaoFnNBzDvnZ/kCvUqNpyKglm9MZWBfXI2
ywgSnQW3Xq8GE1FHMKnCcJTs2RXv8cHhVs4rIQkYSpeEtDSGDAYVNB51EqWj
L9t9ZocLslocvqAbgmC93uJygxqziGiqZEqlSKxcTfstgNGhlcq8aYNYak1Y
JXCuXIwlIj5/NBzpksJ6JZOKBc16Ob5vfGRkqufqrdFu9mQnGzFvKOLkM81O
lx8CLTopqHdYVaDTYzelylkvF0/i8wVaEZfFliiUxmi1nA/qVSavx2fSGMMF
p0HHY8WOMiYJhoRbpbjWi3GHqQuTOqWIsbSm97lMArUTjm1kYLNcDcikVKVV
Y1Cr5UqV2+r2uOy2YMislgFSJl+klOEJiHHENFZOY/OluFsfvjUctTPMHqve
pFRCRkN6PZ9JJ8JBf9fpVxiMkUtnLt/uv3J9anlVWTr4/JNPPrvfMFDa3z3Z
3kgQ3/4/hzRj/WojcZHsgmjKZiES0wEK3JBFs4Jhs3meQq7e7bJIyOavZD0g
c+LylVu945VHtUevTqqd/Xa1WEvqtg9qlnHh0/udJB3NUuUf3d8/OD69f9Rp
FGO+SEjN1ctYDCEHR2cvcudGeYBBgRrupbggOF2My+hSmdQZsUMOayAey6gw
Rsjh5dz5YJkIiRnkJZWOImJxcLMqDVniz7uXe3BSMoqwNnXtfN/yKmoQMYxW
irRGN+S3JRqJWMwhRIMRWDY6opZN4+32xQVnsfjRIz+n963+bCFcy1ggm+8k
vSZhjvD0KCSooGp9SqrYoJUDBr+dJ3Mhhkuv8rmYWRMpJf32pPjaUOHk2dNI
YbNedMqMvL7l9Em9tm6hmmKhtWs94zS81ba9fv/bJ69eZHT+3awPVCfdanvt
xWfP9re3s8L+JbtmZWyF5PPTRzBz+s3HjzcC3nAwHXF6LBwmG15/sBWPB83M
VTJTwJ5Z8zTdOBrm6tVRutWoNYZKioUlMSv/x//3nz9vRwLlHAglvKGgHnXp
7V9cWsr98KuHhUq9nPLBgdxGNmFxO7nIJXWzGSoe+7GzvEQhpBl/fbz85WYC
dvsjSjq2d1kplbi3v//1qy++eNEqN1v1Wr3V2mjEVWvTy1LF5Hs3aQKp3NAl
VsDqrj+qptY79wuZ9bAMQXF5clvhbpOVri4z++BGI2ggfvhuD1aCWqYIo/F8
tGCShsN5n1BDIup1Up1fwxSJ4f1n3xxDErVZKSGg1qaIxk4EihRMQNyBvrxU
Pq5l4zYHKKUukiT6TCMkYBnUVBTK5YwmbXmvSGUxGWVyhYs9lf44pmRzScou
sheNa5KgXcqPnhw+uN/IeVQGmwP2YO+NkN0GoYBJpGcq+HFVPFYKga5MJhny
BsJhPwyHozaZQqQ0heJRr5ElFQnEeJxYoRYgVohzFCmNxyMDFqMrFApE44l4
ud5qN2u1Sj6ZyEb80qmRCSR6pm9gdnp8iQnY8q1STM9kMXT5as5F1CaDsFMl
NHr80VwpYhI7C9WAO+6H46VaV4DF1la7lo/lky6LzQ25HKFUIJRuhVQOxsIy
hQTu7lYSNq3FpKGSV0fvTJvjsBqncihtSbNSzqBShRZnNwPFTAaQPY9hyCUi
lc2khqNwJOF3OawSDpPKZnCkoIbHpXMVYjGcdkIKCWSXCrReC6BT6mEVGc9V
yQVC8sjdKz/56YcjA7M8lX79yz/+y7/885/+8JuXB5YfJ0yqVm98MKyOaFyn
mz4DTWKWK+NxPlO1stB3c271znvE8t7n9wuFdO7Z805AFW1HHXrGxJ2+3lHE
IO/Vtw86W3t729udrWahVMnI9fcfbm+3g8CcYu/x8dHR8el+o5CyEGaIEkHY
hZUYwkwEfll+u4elVKrZXIbAbFJYZYpA2EhlKWlkXd6j9FiIyFlIQ6OxrZTF
MezwxWVdOu3K+JWoSXXJhiaZ0xH+wgKBwWGtDV688MEH717AEVYX7t7yZASE
XqTMJBGuMjkYqQ1zl+A14VAyH39SXQjEj9etlOGbAoU9yVUH53ilUEI+uETA
LWt3mjpb0ojoXVHEs5BFLuMx5zV//88ft1tpp9/Eh51WPYNbP9rLelLFfARy
ep0WKFlJhxMQnkShTI8xGHykfSsipEDwR989yaV0KhWRAxIxuvXH959/96sn
WRV6ksAaHGHzeQC5f35xVatWym0WeatgNQhnLo/q4tWT43oi/uNSNvzlm+dH
Da2jYhxa6b38Vv8KkmTOZm1k6jLj9G9///LZUbOZhpKNajFux117543X7tor
tZ3tp19/VMv4rA6/TyvyBWwOt0uFWw5/lJp9Z7lYVmNRxvarbYOcuzYzfBfh
1Fvqfuf+3/7pt49Pm5XW4f5me+tgu93Z3UzSB+WPO7z3/+IMxcKX6/mDVwdG
VYWKP93ZLEdzEWPAUXqwtx41S4VGpy3cbNY/+vRwwzx2pZfu9pJ6hnBMtUzn
VmKVYScXs6jI3//kk2cVFY6d/fjXf/PEpzczlidHWamwlVT65tNExGjobCUg
0GaVYcGIloRcWZnHaLyBSDySClk4vI16LRePRdU6s9bodWn17GVtOh5UCzho
w3o+7RdKHGqeae+Llydb7UqQ5Y46RCT8xLhFfmdpYUAUrnXyXnuqmvG4Qolk
1Ad5wtF0NgyZZIAPssGwWy9TcvSMWRKGbYbCEYeSQ+UwySTswgqZa9LzJPou
MCTz6VK2XCsmU7VGpZ5X8zks7tr0vatXbo4vE8Bso5oJ2JVUoiC03fB4uwac
iYR+XBcln/JZbF0+7IKL3+31BNO17UalWshXK+WUXSHlcLhCh15oiygWFwR8
JhFD0hWj9mDAatNQh/quXu6ZZfF55BksXSJX0VlUBNe9HsvkvL5wIAxJsdMI
5NyagMM3emCP16IyA0iOnEOQuUXqbt7XGaCQI+Y1OeJ2QG+TAYmyg0NjinhL
CAaXxVdqyR+ev3vu2sT4VWSs9vgPf/rHv/v+ly+fPjg9baYre+2YN1g4etoM
OM0GnVlv9BqWh5aYiKmB829d7rn0wQeIjarGs76RMMVPtpMaIAJRuGpADUzd
HsQGf/PF80cHe3u72xvbe41GowTZIxA/8PjYch1Ru3/4oJsBNquFEPX9n43B
Bx/XxJA9H3PAQTeyZ4JbSFM4co2RNT+3Fn/1MK6TEpF8iRmSWRRINZclZS7M
250KJqBSmq1dMtspOQSAPRrhL9NcIbNMpFPHcz6zgjR56403xyWUhZ7zroZd
MnH9nQsz/AWREbGmXLwn3qxIsSSLqX9eKnVWtgqxiMkQLLp04Yo96DYFFDg5
bY0d//TVw4O8aeXyAJBPOmxOLZuwJm6++odf/+blYcnKNqdgjWvj0cG63pTO
JiPhHxeaTceT0VQlgFnAzo1386+e791J2TmrRN+TdquiRfcPcLkYCl8bL+Wa
L7579eA4LpAIQaOJMKVZvUbVMhGIUYlDUGhlMtqFJWsW9qezqWjQZYVskvHX
/9vP7xF0jSwso61eHVZby7VKN4Ou3jnDePT1lz/8zS8/3VpvN+oh3tpU/xpx
yRoQavz3jxqnei432ol75BQUGt6rxH48pg86iddQhbqIGPnd//59w+pIOeg3
3+jRpMvNePtP//lvf/zdR/XGxnaz0tw+OtzdaLXy6rlllWT2/TMD9rBHbozx
5q+/dY+xv18rRMI+nVXlMFk2tuwqgEHAitwmkRjQWrtxlEvgkJgaxiJpmSWE
TTnTvQG0UkfAsyWpvaOtupctsliskWLIqCWOn0M8/9unTepa7dfNaDTs9oYt
Ioefe3NRq1FbbSp5oFP36/iYhYWlhVWuPpjLuHweo1HbHW5cq5FJWibJ9Sb1
5Igh63H5YZeWxQq0O6VyZ7PA+fFqZzoKzfKbEf3LQyAFFX90UAqGIAOcSKYT
kYA3mM6nHVKBUO4NeczWoFOvsvhtMrXaarc77RCkV4k5Eu4akszlyzkoLui0
61Xd/qpvbebjiWy1Utlsl/IZv4aOuPneu5eu3UHq4pVqLukDFTSCs1LNZopx
X6Sc8AVtnkgiCBuNnnw5DkM6JRSLp1LJaDAc8cj5XV/R8Z1+HwSanGKOTAi6
PGaPR6/S69Rcwlz/3f7J2al57BqayKThBHwSYmbJ1Y1llnDAFillKhnu0K1b
l8aoLKoC+nH5YKUMoC9LrAqxKydV6iGXVKvRCmUEgs5scTitdocLFpP5KtIo
J2ATEAjDl3v67uFYar3KmHz1h//1p99+/cnTk/3dnb2d3d2d/aPTx88++vTx
us+sdnb/54BTz1hAoAfOnXnv7Jn3f96FBpQW04v2ZUJmS2HTrnag3ppM7RQU
dxCwM/XJUVAd3bu/08ym0rmyTQS55SK6vRTVLyELB9Hio4e79VzSz772k7Oy
X3+9oVerg52Njd26B33tEh8WIe2VpJ07fpcc3zk8KmhNQZ1WujyPEQbCCrIA
j+DhV4W+w68anvVoLBMxKBK1RMjOZaiMcjZgt289O2ikXQBm/PyFgXtT9KFb
KKdewb58Cy1eE2iwOOwgxubxWSUSyIVcIMlcXWr1xAoOMBKqNAP1hFev0QJ8
rtENV/b2W1GdQu+2KZ3dNMriGswrw7zYRu2Lj+NyHidoAUPPumIx2yobpXQ0
lCmXKq2dw900b2qNix/hhfz5bkjP+lxBtaESjGQDaz0kEIeXCHFcr5vPAh2J
l5+EOCqjlItnFCAUJZqlT/SOLQ4OE1RatUSWTMHxWinicRrUEsLKwuD5N89c
v4uiCugTE2SBumvnOciakS9ep0VLJ99882C7sZ7zGQVrGCI3XIJdahmfFix4
1834JddHpykd9uz7+pO8TcpygFgaY2WBqyczN3/7y9O6XqRWGflYPFWo0qpy
7a/+7d//6bevnh/UKuXa9tZGq5JI5+24gbs3rw9z068eFUP1jse4eveDmdKL
uCMagTk0cxBcHhNEIg4TKAbjEJuEQa0tD01Nj5G4KJQwWYfDvnIuLEWNv3+X
x2CjERi6yyXQg3yjgUEFlIQ5GcT0f32yHnWz1VGPMZLmMoLCPq4fgw13do+e
7OSbx6c7xZADoK1O9t660TOMNXkAd8xq1RrI+ohDS6eqOHNI4hTS5AW1flgm
1gBSCWAMFdebpZQz9yjHwIKwAQbUZh8S6WquR51uGI5kCsV8JpdJJOPebl0z
6Iw2n1jiD5qsRpv9x3lfNoNaCahAlVJj0AEam7VrRSKxDA4ZQJ1Q6vBmMvVy
vmvpP66WWioWAsLhs+cunj13fVGXzJdrtYzfyOAxlW6LxZfIVyNuj90BWdRK
0OOGuukh5PTFUjGPy2a1a+SqrkidAa/NZ9TqALZMYwF5HCYORaKSKOQ5NGb8
5i26CFRyCUQyRaqUEhnclb5+hNsfdckSOVsgbLcZ5ntunHtjXi4VSRRSIgWQ
6owinsWiUIpBi1ljsOntFquQsEZ3qnnOXHc0AXKVUiZeHZLA5IEb11//ef/C
AtA19c/+8Pt/+Kc/fPHk/tHRwe5WZ2f7xyn5W7VytRLzBTyh2k4l6DELKEwv
xFrom5ifGj375qWz18/eXaAGN/YOSpI1knGnjb+4nHp6ZJ4DNnKVqnJhwVB/
flSJeNRCjZFKs9fapTgMKvlEvi2w8eLhVjEGK5cv/GzEs+uNQhZ7ZGNzY2ev
Iht66x6dNiFWQet1iDCNEmhNcrrQqJWyhVQyHhvYcVJXKWzMnCO09aSW3kz6
bXbIUa6ETDItKLc7lAqeKlGKBt0/VqD5Sz85h5HMXz2D72rXaPdKhpcpq5P9
SKMKMSuPlWoxu9UWsmtgt0dp1kkdgUwlUbf4UnG7BkOPe4WasFsPeX0Oo00H
bxXMajVHIcULOeyV9EdlIScQxzs3Os++f3XYCEL+2vFOqxzLdGUTM/C5NrNe
Jms+eNb10Uww0CiabF6eVD8xZvXzGWKAb8wV/dKVG/0Kv5fJhZIBZ6bSbITX
j3J2kLk2du6ti5dG6BzQHc11iwvkMBvtFo1Jr+AQqNQ17MLENC1AQLk0eOnq
3RGORWmHrLm8R4SVpOMcnC7jxM6LD15trxe66VhDWkbS+fzgqz0YNNuqu3mf
iavyaFk8JW2st5/36Feb5ap+7sPlZBl2ClAYYrdY0wP3v/32+x8+v//o5Yv7
++1CJuyyASu33z93D+l73iq0Sxud9RgBvSaHqk6BGg7ycY6UR40BWp1CsV5I
l/MBFwSyMeMD194dtubS+WcfH25FvKGAwbJ25RLd7BQJBPMTNNACMCVSHIos
tcrKv/z020fJmBAEBAo+2miTCC2c1SmyIPL4y69/+cVpZ6+T9qeymUo2aBPN
X377zXPjaJq7EFZJbCRNUGuQmz3AyvzA7TWNTiMXK1UCFlcJaKR0s1ULGhW+
zpHFnRKHDtqpdiecSgYNJi8cSoWCIa8/EU+V8sWgzqymCSV8NZOlEYq83Wyh
0nuDXg/kdneJWgXqbB6v12W3O8xyiclpspkAAQ9HY3mqlc1WMReN5uFIs+Zl
jd6+dvHs2x/MsFXB0uZ2LuozcdgSFdj9KBzJZ1I2rYxP1cR1eHsmFnTbdBqr
Cw4n/N0mswhMMp0tkohkUhKWIJWQMTNjY8tEjlTMnkYLaGRmJFHMh8xqpVVL
neudXRkZIlI5dD5R6gsDdAIJO3ajf6R3XOLTC40BHdsQ9bv+P4re8rmxLc3X
/BPuxMyN6bk1VV3n1OFkZnI6nWlmkkmSZTEzM28xMzOzLMtMaWc67eSTh/kU
dVV3VVff7uiJ27dGGfqiEMT2Wnu97+95HFtr6wUMpV0NiFVqPsHkMbvsRjGd
L+RL5fqwy6SVCVliEopMp0I6Pny3jUDsuTc0NzRl+/3zgx9/+3x3c3V5eW2l
udx6LDUbi9lwwi0FfN7Y8mopoKYipmnpRMAlw7FYzLn+q1e7Tv/iE/7+m52i
B36uJ/PTUxeeGalF5HypWiox6QN2tSh/tLsZxwxyNOBO9w8/7WUDbpcJc/Pk
kLNRXy7HHRzQzdtYvsBkUBgl1kA2F434WF0nT3XAuYAsurrRzPmtWjF1YWJo
dPxBF46EWmD7IxEjnjGLJvFj6WQoU3S1KEluC2nhc9piiDYOklnmMS6r1OzL
5Hxy9LV3j09DJsfG+GzYQno7Qu2HYwZGxuboNPw8lGmIJRNRVyBiaZ0e1Jx9
ORdyqngcaXS1EXRzYXwAL4okktmAhjCv1DPUMhxDjEIJSEQ6n8bS+WVYWRbw
ZgFW7vuvlnVzD4j1o8O1sM8j4vLwTJaGJwQwrqPPf/zp06VGSYcmst06mmS4
kyLS6KX81GeHxVxSNtvV2TkhLD37/pvXy7WdJxtr/kjAm005OSMnf/nrE71C
f7q23IiH/Gpdup4OBZMhk8OqFs3PxXaiIG5Sj5sdv3MFzCGBJ4fhgGz6Nnlj
RzRBtChHLnVG/+f/+m477NYirrx7mRhWk8zFtMzlTqcAqUjqjunRozi9ZGaY
U6x5zDZ2d4dg+bOkkS9W6SRs/PgQjiuSOMsbOwfP9h+vBuwuAAUCt07ABBSr
0vMVGkATyChgcAeDFhYPLLiZE2QeW1P7/PvP9qqFai5VrBRzPhmbju2/PWdZ
f/nVl19++7icza6uLWpYoH6mORjyC8fRfj9/HsOdu3+T/eybH777+Y9P0lat
ms/mI4eYWrtqDioZuCnxFB59/+fPV/MevZCgTcVzb2/uzLz3ybsn2088sBua
WjyDxw5K8HKriirW4yfATDYUYS7F5fCx0T6YgsOgEfuHGWKZ0RQJGLym/NJS
LVhZVNNkFosr7LOZ1FKlnCsz2wIOC390DC+iTGMp8xil1pOJBGPpUDSVjIXc
Jo0W0NpamO5uVb7J0QoKG6BuOTkMhhEY42mn3a1z+VwySyKkmO++f/Xk+fb+
CUEim44E4/FAC+iFYiZNFSunI16DCpDLW1/PVDJhl16lD+VzqWQiW/DKpUa5
RCCzRxJxr1OvZSxMj9MAjVQk5pCnZtlau6+Sy1aKGadSjERAITj0BIJFZqAR
XNbUBFlAIkPvDI2gxKZIWKv0+AU0Syqq5coApUUOBGJaDt1tVIoMIrNOIcCZ
MmapWNsKJr5cJJRK5m+c/qSdGRTcuNZ1/g53//uNnS+eVZZXGo364mKz2Vyu
Fcu1tB0waOXOsMMbdNjpcywt1xH3Z1aLgDEetCvnR+4df/d/3GGxWSQIwb72
009PV3ytvFTaIjIaASSrPikl7b6VF0cbdrqCN9SlTDR2anG/W4vtuXBxEo6z
ZvItAhBT0A86JKw5wCRmOWMe6ULnqWswrHdnpfT2V0Er62vNasZv4szc+uQ3
xy/f7kBrRbq8L8VnkBmh3JMnW2k6gynmAl4rYgSoxMVwjMqEh4iN4Xyu0VxN
S3pOvHO6Fy4A4iEhTJxRDcJEOKQcwMzMk+mQ4QWFTq2zxTeWU1Y0xLz25OFu
3o++NNJ83QxE/EqJQeNKJmJ6kVxp8+OuTpsCIZPOG9IRJsbJIrMXUGIBM5/D
pCywrQHb+D2MO+TyG6RGPgSJJc3NwglUrjWXSlQqhVRZcPE+Pu4Q6nloAh6H
ITASR8/WW4qqo05fvqz7bYu3vz/ae7yyumLRmV3FRjWmBJ3/H78YlSuIFJk7
loga5HpbeHF9oxH2WvhkEsRcVLBizbSGo1K7/VY5sffYMbiRNiR88pmj+9hV
CGOhez6w/nAtCeChw/M0lYMzRNndA5QsdkAJ7wK5G1HF5JQ5asCP4bRBl5Iw
DpPmv3hcjecXG81Gwc1CgdpOdMxbHVSh3pRwMPmS2X4SbgLPwty7hadz5TQG
EG5RjJotquaFCuNMN5GJm2MVn/zuD02nowXT1vhi0etzqjk4st5i8eTc0WIw
VdwqZ2pN68wwKpFTqQwahQTTNavAtCMKf/iXF/WVR6txKiNRiRpo6B5+w4tD
0EaOQ9yZJ3/9X3962vCqFRyJN5rIFaI6dHsLjjpP3HJrNosivNhkmxjiq7BQ
Q84mEbMw4/OpV4sG6uCx/+sDqoMCGXsA4RLnMWIVoujnqAyAQxnYD0sEQrXR
7fP4nQoBE7VApfFcXouIpnAJMAqdSqCQ2yvVYjLaqsyYzRRMtKzdqNJarIG4
I9BqCRG3w2i1GxUak5TE18mUJr9d67YSBeFCSIyZ6bp6+c69B1CJPlCoVuq1
esbAZYj0iWwmHgmoBMpgvlBbadYyQU8kWyyUCyG7Oxr1+f3ZxVK25SKJQq2a
DoqhIwhr3GPS290GEVufTOcCfofJpqHCF3BcMo8uUPJJPPogysXtG1Z5pWwk
SitXJWpRu9Vq1VEZNreGzHRGzDqlWm4ETEadUsrSCMxKAVeuNSsVZptBofR7
tUoBZuhmJxkQznT0d986Cyr/f3/49rcvcy1pqtWrlUpjqZSI2txJExvP1Vmc
3qBPxeQSqZ6EPZFO5muVRHJ1qV6MCG59fOmDc2Pnzl26Tn742dazzx6txtR8
25KFrOVDcZZYsPGktrwVz2/X3VoMXqM25kvpsNdqNFsNPOgkjoaXJUIy2jyk
Gy/DKVxedzoZ0c9f+/iKrnHwejOfTGXzhWqjsbTcyBgWrvz6F+/fGe2+1TkO
Y1lzjeVQvVr+/NujNYtJphZLTK14pWo0Eq3RGHTARhTN9aXFxaWKa+HSxx+P
mXd3N6MSldQqA5O5NH28EJUTZ+7fHaAF7HIguLlVd4sWFiyryfz2UlNwYWj5
5xel2kq9lM2HhbOjPTDAGssIRuDZT58vlVbWl0z33pt01cLlqkOso86w7IRJ
DFchtnh9VrGEByUIoRBhy+zS1YDDoRJySBiqyCeephoaQV/CZddx54dmFpA0
xdu9zIVkPhosXXr+4s3Xf/rd10ePt4vhzFI+6NZIGd2fTJpNPPDNMzNWf+tL
BBIQjEZyHhWvlZpUEg4eOvrqoJrJxXyNRsolHj5+fMagV5sM9OnJ6XlFUEZi
CPylso1GI4mNBjFxSvDppzG/WQCYhSM3WIuNABcl9sV0Y91UTz7tVgJkVnbv
9z8+2V5dWV9ZLuvYsPtgqERDRGDpeq1AZRTQZZxZilk4dv3akMChdQXiCT/A
43KFRm8CgEIUelrPyX5S/LPnjZBRhJ5Dq91On1el0/OsDj2FhISLkEIOF8UD
jDr4zATal4l7mFge8uqxdgir+Pmna0l3JO1gokY4zWLGLxlQbeQ8CjriarvK
k9747Pc/vao5zQadL+xzGJTgC8cudneOgLqEaoeWLxMCHBBGrEDP0zgcnV3J
U6lFKp0QOXCnd4FOG2+7ehlMEbJZdAsmVy+oGWypyppLBC0KFaA2elMJi4RH
xeDYZLk7GHc5LSKZy5qMJdKJfCYZcbl8IZfJ1PKDaMCpFssBZzwSDgZDYZfV
1oIBbzqX8KpoQrdeBJjcbpXYmU4G7dy5rqvnz12+1zdJtvjDxVIx7tYJvNli
POI38BBYU3lnp5GOx1PJeLFeSMZDTp1cqVYqtbHaUj2q4Ag8AbuRB5kBE/hi
gd7o9roj8VQ24sfR6WgUeBLK1ajlKrbFK0cJwCAuHzNLMXFgoClDxODKx+UG
v8HiUfAUSjKEbvWr1UYDm8aSKnhSmVKhlCpECg2cLJXbbS5fi2tMShkRNEnS
SOdudKJGT7cLvS++/v1PZZXV6i9Va5VyLmUgM7hWv1kPWPwekyXgNRhUxmA6
GsmUCulEIlNsrq83FyPIs5dOn28//96x3uFZXeXNt4eP1iIamws+R4IQpbmN
tUa1sJj0uD2xjfVQvJCJJDL5fLFYW1pZayTdRkbXrQXS3MB98BzFKkHwvF5/
NeVWzV0/MZdfD0SWm5lEJpPPRex6GX7w0kef3JyQu+SItjMX7/SN8d21o8X8
/sr6F2vVWsioF8s9Fo6YM40T4zEkHI4s8daWS4VCmNVz/mRf5ucnNYAlZGlM
KiHPFC9Ul2Ja1OWzUPdSQi6LHmxmNCQoesrl1QlIQipUbnzy7c7mw/ViMiAh
wqCzcDZbrAMsVkBpDKdzcb+NOG9Yr6gylcV0zkEXKBwRPY8tVmrkUl/aiocx
UHChq/zdv3waVCm4OreGOtlLp82qcvViKW13qtk0jlRAxoOHBiemuzpQPGMk
brXkm7vr269fv3q2+3g3AzDxaPQ8OVBwyKBnP54zqbkCPo8nFJLoGgqJMYPD
EfH9vc5v/rxhlCSapvJKjEuFdnWivXEjYQwusZpQyGDRI8FjSVytTGEO5ysR
DR4bykcsKsoYGD58Y9qUsAAyWWSp4qajUAyRRB3UMkSm7//z671yvLparfg0
cgJHZAqnIw630ZkpZn0yjivqSkaUmJGenhmiUpj64jBo5M73XrkzztcbAa2M
Or8Aw8oCpYJXKRBi+yAsGotvtpGYskBGSZrDwrn4eYqAikJN4JF3oOagmS/g
Tl741Tvz9b2HqwmPIuDmoQxWpscaqZj1K7V4yiPis6bGZkbnjfHFJ1sxh8vt
NksI02MdF+/MyRQmNZRARpIQaJZdI2IwZCoBYmxe7vDGtnZDlkSiFXaWchjX
fuXB7X4IR+dzbpi0qXrSGnHpLGZnPmlzOHWGUEv8JXwOjSmgo9haf8hqEvEY
dHc2VapWy7lcMhgIh2LpfC4WjfkMUolcq9e93RBSatUZHR6L2+8we0zKeB5g
ifWeVpk7fIGwlTzedefK2bOXrrd1T0HwUnMkHomFGivVdMRCxuHEsdXtnfVa
udZcbw2xZa4RHYeAx5NJ2oA/4Jbh6HyXU8oHTzD4LBqHq5Tx6ZJgMaHj0nB0
udFqdQeirRFGnEGPjcPEmGxs1BSOSaLxpE4RSJFwqWVmgK+2yMgkxCSM51XT
uTQih9bbhdBw+VSq0CYCRHMMK7Oln6li0B8KWOgzM9Njs+PjKEgv2JRvwdxK
mIaR63yFer0cN+oFFL413vLjVKUSMir5VLqUwrTWm5VcNOz1ufyZfCC9WE8p
r//m2Pu/+fgTuLjjgnJxcefwcCujRw733ek3rL768stnK3GvKb5ckmGdD58+
apbLxWKhZRWLS0uNSrmxkgeme+bR7cfOdMPlKqyCPk51RiMmWNvVGzI9jBFt
5Mwmq17FnO1qu3S6bWyBwrKlsibkxQ/PnbnwoJPi5bE2NvcPU9HVZnO76M+m
zCYxhG4nnr8qzqnphkzCbrCnXEzQpbOYTERMluPnqRqAr4+XarVaIawDXx8S
WgAK1bW8/3DdgZ6es9glQ3fwZKIQLFt7uLm1YbO6Ve5MTM+XWlzCOZpHS2Cp
eBxjJOBvHP28puHrYzsvnqxnlIFmOR1gQBEz2FCzEHA5dC3S5hX383ypXi5S
Wo2YPgyBLLc4AjY5hb4wK6o+2ShF9HzywujVY6facK5kwK7V2sx6mTse2Pt6
PRfgsrlIbrEc88qm2nvRlIV5JFmi1rrsJj1L4ZCI6QRU3+mu5Av7wA36Sq5Q
9EMmCTxnyqNTCihkHKZV0wafcqr7ZjvXZl386o+/f7Ua0ekN1oSNA+69/XZ1
PpjF6VKlzbX6Vs3GBN29DZIkcjJG8WB3tRT0OpMpt1XB5TCl1kC+5JCXXh4e
bHjN5fUWGpRzcRN6YAAN5RZqUQ99/M6v/ttxVqWmExptLodBzGVTeTKhUs9Z
4Dq1dJ7JISNAWemQkI6jiAGjXcQmYefRNGRPJwxLoyNmey/fZC1V8uWsgaoj
jtMTB8tllytl1rljwYgIxU8AM/MT3VCOWKU3ODNJJRE+0dUG4ogN3mTd6w8p
JEEZFB0ve7koNEvGRiHIcqOnsnfw9M2r7aVEKJ83ITvv9sIxGARQ/qpgjhnE
ardRLhOawlFvwGN3+yMpv8WkVekMMhyapc1Ewg4JlsIXCuXuVLLQWGnW65VS
ZXGxkC+mXAYFnYicQmApZJ5RbzBpeCIuhcOhizV2k85oDeYyYbfNKpjpvXfr
2sULl67cHZ2DoDhKXSCeqazubjTrKStfafKGlxcL6ajX5bTZlDSaxKwmTg2D
YAypjINHoyAoEg5LJczPgsl0OEEkYsBnYRylxc7BE4uV3TefPV3PWdXO1ky3
IDlk8GfDLh2RNI8WxnwcJlQdDcWFdBYcx6PNjYJax3aa+ay5e3Do/UFuUs5j
MBUKFhPP4RpsFq1YJ1HZHD4DCQ3rnuLCJuGDXa5dMxYRSsl4GISxWC1mkm69
K9CahFKpXiot131qgYCFJ/V3q7eWolG/x2bmanw6JCcYkYFO/Prd37z70WxJ
fWOYywPWv3m1WzEPfXSqzfLP//Hjo+2tjY2YLLccVc3Nlj492KgVc/lW+bfE
qFlymeOlUkEPm5y98957w96UV4jvOj84Iot75fiJbiGLQKAw2QgCg0qGdV84
2zFH5xOnBiclG2lZ34UL13vHJuA6vXptfz+tlzlz0exOLeixGHVqvdtBWRA5
89Fy2aCmYZxhnQDXfXNIQINx+DrA4QNsyXK1sbzSrJhnbvfMk4gEKstU/+5I
OyBM8oZudpsUM1OQSZHPWj6IZPe3dh6u5FPlrfUwe54mEehcTKyuFrSWn36z
5DeI0ObXf/3Lt8uV3YO9po8HRgZXm+uts726nDdRcbqgumWkYBCLifYW4wd7
sUgjwBkfm0TGf/+//+mgls2mXKyB07/65UfXweaUjm8q56hsg6Ly2eHBfrOU
cAZyQYfXodMCzLkp0L17o2BO/MnBYr5UTGfzGQ/+4gVSSEtBDbLUbL4CxTRI
hHJAr1GpKMMDSCZg07KHJuDinaXy3h//8LS52CxEghFPiy41TPBg27l3f311
mmRdTNqjiVhaDR/sHGOEksmk3RnOhEQYd9ygkxosRAiMyFOSwIpcc//52vLB
w8dPHx8+f3HY0FPIFKJQKhejQaOdXWM4dz5stZjMKpVUrhEIVTIZl67NPtxI
OtzltYRR23rPTqYruC2BRUHJ5HkSbwYpgnd2Y2Sojn6+z6S0+wQYKeI+VugI
FqMGIRECkrs1c1OyqF0fM1ORJCYExPStbkdkQuLITZDTbaDTE4Hw2tOSNaDG
0DXOIEBewBOwFBxdRMCpHDanTysQ8IQqjZoy2geaXRifDX/dSBREXXgBUSRh
y+yhaNjpcJsdQV80FfU6wwGbSQOY7HqLgAyBgKcIbK5M4ytUq/VyqdaoFSu1
YiruFpHRMDqDr1ZKpUq5hIpHg7BcMoahUsv1b29eH7HbjbRpMPjB5bOnz168
PjCLoctN9pZ/OzzJ4vpS2Gax6VW6kI7HYWHRVBp+dnqoBzQ2ND5NECuFaHDf
4ARovH+kexwxiZobhg2MzMJnp3A0OkVs8OVKW4u1R882PSKGSExWaSO5VCUf
ADx2KXF+sG9OSMdaLbGw2YgHo5EQ8PwCkheolDIRM7vvxIlzQ3RHKRmxAq2p
QfGkHEnQJ6MRkGIXIBEzOIQRugY9PtQxRsH1oIRGuzAoBfFt5kA05k/VWkkW
qa42KyGrzcAmCc12DZ3qLvptqVLaBgj9UR2PTZjp/vjXHxw/+f5xcWjm/I0p
unvj6dHDVS/k7Dn6o2eriVylUi2kZAKNnK0wrx3s7SyXsplssVKM+B1yGoYk
NQHkqasnz99DG540hH0XL167/aDVFmspAdtg4CEXpidReKqAg5sfn8AykV3X
Lpy4uaDQOxT0+ZGuS71oX3EtGwrbNC3V5WPcXr6w1ebEAjkg55EhCqM3JBQD
gNtBhGnxiBmwyqrW+EOpXCaaqhTLjaVSttBqygw2ZWFsFKbNbycFsQT55rlx
KX9qmEYeuX+FVtvZ/PyrZ0f7q82Nre3d1bQWv0CVS7Qyo0eviKRd+pQDJtn7
17/9+Onh/lbJb9aJbOuPn3z26f5iqblW81JQFOjQGAo+LaApHn/z5tXnb9Yr
WTsJI9QHKwevdhdbcc2EDPcNTo9f+fjSwCQYrYgWM4cbkd31xy9fPV5JRS1q
m1dlCvhUVMzEuY8uXhuz1Va20r6AzZeNtSxXj0MypDE23SSQqZDQhRmkMtVo
VlIBDQcHRyPQSLzNV3t4eOCtPomnCmElU+c3uIvLS4WQFt1x+tjx99+5DBFY
vXJ92G5lDp75cMB5tBFJFgoBqyVXyYfskZSaDCPS8JD+nsEFnsECpA83N15+
+/rF0W5ArVAnVyImQCqRcTUGPDexuVvxaGkY6BRWqtcK2AqTM5wMhxOJcq5R
r2QLPrPKaKBLVBwSgybAEij97IiBzjOI8AyJMWgXsxFopkLEEyPhdBmRaXbK
UCBQ76zS71Tr9WyRkiaTYGXVo/3FXNZLunVxFMaYGbS4pMXDOF+sU7KQbLdd
RWOwWq7DE1EIUiMXyZbRcGgOhyqUa7A993rw2s1vCtask0IwhQN+l8lodbsd
dofNanMGY3GfPegPx4ImMnwYjUUMj0NHmRK+WSQwRvLlVDyfjQSjyaAvFg94
vYmEy6CTMJhKDQc5PQEFg7EMg03vdIfDuZRJpeOhcSzqdE/Hvc57t7v7Roan
8XwMHEPkANa0W8pXqlgMBpNAZon5LLZYLpGSZ8fHFmg8Aa9FnmjU/OxoW+f0
PJpKlvMJmNkFhEhqidjkgNa48uUXcaMqu73iVeotGrNZ7HB7MwkJTk4aG719
6cEUlKZWSyx2JmwSwWVKAuWtVz/98fv9jEUAazv1zv/9m8szMqXVQWER5rFR
IZopkVLhCl9m0c1jkukMHAE90nXjdveFD0Z50Nvtg6IUa3xmpHXUUHk5AkgV
/pbschfoGouOAkbLC8W42+ytbqzGHfG4SyPA9Xxy/NhHH164fOYejTpzq9+V
iGfTzQKvv617mG/lSATuWr4QLzg4Kp+nvlbJREvrK4VMOhawAPyRG0OD9zAy
SFffpV+fAkc3lj3gi9MMEpyvJ4jf3kpJju4EUdFzaDgau4ChMYlz3ddO3Rgf
mEd2zwlskYBi5PRH7RyWmC5iExQ4gsYiUSnYb/MPjyLCwVgBncjhKNCzsc8f
p/B4C1WbkFtS2ZRH44ul4sFYJpWt5nyJxnLLCVljnWhzwL+4tVpN2BU0MXOi
s0UKmN5bYyyzo7y5++z5emFxc+/x3t5K3A7QQX0QY1CpEGBmwSar6dHv/uOv
n794vBRRsQh8S8DnbXz75x8eLTZrKZ8E0nnyxCBqbFCm2fny+8/XX36+bIos
hkKpqI6lcrsiQYCxAGWYAn7hvV//wy8uYOYv36aZ1huZ3fLGF5vVkhxDi+6s
W0xhq1TCg904duZ8P4ehTCjx8HEiwBjR760zbt4ExUurq7GktPPcbe7+v/z7
X354ffR4Jyvs/Pjd4+2UeHrz1b/+z6dL68WlqktrMERz2UgkmirG5eOXPnzn
nfff+ceB+Fo4FggtGufaTl5iletLKwWnTq93Jetr25V8IeEJhLwqyP27d653
w+DMWCrS2F5bLDQztmh1Y63iVYmkYqU1G4isHT57XIu5FBwun0enMsgkQUuV
BQgwCIYWAGZHa6nYrHafWMKmqnBEPJWHZovUqcNXWVuikI0CGgGBpVSq4i40
TY05iz/4apF67Z2PqZsVs3hhaoFiCoRVeGVlu5qMpyKCzo9+cWwMA8HT+Emb
0cvnabQyjU3F5yl0rbQV84xOl5ffO20KeRMP8wAZpaJ0jhH0m9/tl/OrtYTC
/3i37FeKVAaLUWYIh7w+n9/rcEdikYhXx8GMYNhkCnICIdAaQ7FgMJlryXsy
HGqdVWsL3cNekyMS91gcHl88pmGhZsgLPSNIgbXVtYMOg0oqEVOnxuDwifHJ
GTgCPDkOhlG1ep5AJFBpFVQSbhTFwxNwaKqEwPK6hdJAzKbVtphNwqPjW4wr
EIrIMDQcRKRiKUKhVUo2OCIhv90aTJqB6PrjpEcfXS36fAG1zOtUq1UKGZ+K
xUw8uPnJB/dGpggkBF8rmugj67S53//97//7P3/Y9FKnkFIRsuP8+7/8zTtn
LsJiWoOCyVDTsQIejaRef74SswoQSIGWB+q639d15+rJm3hC28fXsMyQeBQB
kUnAmrcb8RsJJJ6YiSFwTdk0+/ZFQd0T9FvsiWTSxlkY67x65eKF85fOvf/e
sVvjVLWAwK3/9M3TR6sh4tVLC3hG1GXJpJovn7083N3YXl3aWF9MOVnMQC2f
Sdkpg4Ogmxf6RimZBHfs8qlP3jkxU31TIVHDESvTpKUaC5mMfvjcJaoGefUS
CDo6OI5A9F2/dHMIhKZgUPMQDFul4IGunLk7DpmbQY49wKKJWL5WzHr7jxgn
A0UjQCYQSjEPUBIwma+epiyNPUO4VHJz3Ks5W7gS89kMvrBan0tFi6VSSj93
5Sa+vLu6tXPQAu/NStzJnKIuICRiLg0zDmYDycfffL6/upjPrz3a2V4v68c6
qGUnlEQcHR0gC0XhZ7/769/++OVeTExjEel6I5drTy8dHTWi4VLcLBh+MD7V
3m8Mrz7/w59+/9NPPx7s7u/t7uxuliIOfSif9ABKZ8jG7Dv+Se8CViW7/fHV
TpC48uy7H794uZMxzSGLX3775vl+PZmwkh58cqoPjqRmV7ysBzfIOiHNkdGh
RgeJQa9PKTEhujrauQ9//u7Ni8cbjbyb0//BP/zm/hQptPHl5z/925+//OqL
x1s7W5WU326RkFR6+ty9s+//8v9959g1EM8QWYwHUnYmFgpX5Xb3AmIaGQXr
e0Bt/u7l4uLmYq5UDlN6H/T2gwhKZywdC2XjeqNHwdbEojI5dopq4OPl7mip
mlr99s2jrVo8kU3HIumYTUFHsXSYzrOfnDh/p3eot6e/b45pBSxykkCtNxid
XrM6sP3py731ciIVklNla6tas1ovwwBqZD+Ir+WOgymizHIxIMcg5+F0b85k
KVaq9cVK3k288/GF+4ME1twI2x1S0+VaEY0rCacBmckiE2n0gF4v5JN6OmYx
HPfmUkRLQiGHQTRt5JHHuLi9mk0Xmps1G4mqtDgCKkWq5ffpRCyUjHtsJq1O
Z7WphXw+kyrQSNh8e3axXgqGUh5vJh3ye/yxaNillem8RoUrEY0F/AYhfhoi
Eop1NrNRq1WKxDKNWMAAD3W3dwyMTU5PjuEBwBBJFguxqNMRs3jtVA4LCYHM
Sx1ETKQRixcTXlcg4rc5Qh6L1QzIJd6WiZl06bjDpjcmc55UKOQ26lzRiFph
yWzo1AK5Qy9RKQkLdAVnYQ40PNJ161zbZMcnH0F4YgqOqJBA2sdJRFruh3/+
px/fVLX0OajKL4fdPXvmg3/8f0614YJ6npRPWIBjhFIWU52qWIhwyChCrqTA
yQjoZH/bmQUBaIEOaXUnMsDT1PY1yqQ7nTISwQQxFU5RySgkAnh0Gj7NlvPZ
NHjr8+//42/OT81fvT5w4/yDccLCrAAx4Pn+j98eNGJspHbxaGXjxx9+/Omz
14f7+9ubb3/nt7zcXC4a0XBBcqnoZ3ceuzZw9/I90xcHWeXw+Yuf/OKX4N1H
gYBXAjDwrTlyB9y8WcxUH4wNugzFTY4N9Hfe7u24MzYLQ7Ski0IlEiCgt3sv
3L539+K5q1ce9E8jZYGQUy+T2zxqlUPJJMzMkbl8GgoTeLFZiq29rMX4GifF
Ukjn61trSzmH3c8m+XORXKMW5d4/j82tN5ubu48fPzo8Oni4uRiWw9F8FgFJ
owrkArV345vXy3mvPv/80WolpBK6nGIBGqmUAko2ZpS08d0//+Wo3FwOWT1a
Mt+qY8LHkOGlsNUeAGRGHkdhZpEiKyvJpcMvfvj+86+/efPy6eHeaimabh3Z
xCeQeeihgYlJiCkknJsBjQ+e/4eTjHi1vrS8t+GV0dHqRH3j0ZOHTcPCaD/c
qEIxg8m0k8Gy5CKhopPNNHk8CRtyGEmc7Lt3/oNetdVfWkyrsfPgobbuefJc
BwjHlvoK209fvnj6ePfxflpHpeLHYAjMwu1TJ8+1Dc7Q+DCwLqwWspUhCxc5
I2829XRpRKOBXIOEXnz1qF5OvYUP7kL/AM4WsvuTmYApUdPzUJ0DLLORI9C2
QFoFE/qilYI3vLlfzeYzhVq5UKjU8mGzRq9Viimw3hunjh/75IP33j99e5RE
XsDqIyubBb8vkshFXbFkKOLTu9MKuuvhko5DJBoLcRGDNNpzs9O4/OhJ2WM0
GdQ8nsCSqdYrxerS8lLZS+m9eOHOg2mRSpeMLKdRooDH4XOHm/XC+rPtpL9Q
SrmpJHMoZCTMIiVyadAI5vIwMyBCya+JJnPJ8t5iNaVmMQVmY0DHNPl05lgu
n0pEHEaRxKIGDBKZWauPRN5u6C1XGf2tyneJ1LFMPBpPpFrDKoaD6ZDBbjdY
tYqWYlBpNKrcbzNZdTKd3aZRiDgMRN+tm9dvdE4u0GV2lw7QA4DZrHMYzIlC
1G8S4GFQmjkcj4ZbJNUq/IDVoNP7495W/RsArdkT8NjCmUqz5vdGI34Dk0PA
0ZjUFrVzDSEWAw+dm4eBeruHZmFTw6Mdt2/dau8jSknjY8pWjzCrpCIpYXZw
ZBTMd8fThZiBRmQRx99uIP/hh++emsDO3rnbB0ZjJgemYHw2DEqh42HTc2S+
UKpUs2CtoUPuTNKFIg1L5iUxgzSGvlbziMEQotbNn5tCzMOYoLO9NC6qv73t
/IlTZ45/8M6J2z1dU3g6aewWaBKhVNChY9fPdCl3nzWjSrbt0b/911/++MPz
R9u1eCaaXlsuJHLrD9cb1cbKcoKKDTaXSjnb1Pnzt+52UhOFkIZ2/1zb+fff
Gw0s24hQ+MLY2OgM06FjKRSgmzAuph9KGgdhZrvHMODe/gkYGsnRSUU8JgWN
hE4NPbhz/cr5kx/8+r33L4+gWRJDa1nlEsWsUZupqllsLJMyiXUWnxxulR6u
6HUastqhy6y9frNbWVpt1AqpTKG+tp6iDYFMXz6rrjzc2dndPzx6sru12mgU
Qm4lehAVX2sWfDpntRLNFwPJ5YLXYZQqXKo5oipQL1TL6uErpI2vfv6hJlNE
Q4AiWKquPtor+UO5YspBGe/q5znEHBELePj1jwVf/fHOYm79YKecb1W+lsMT
8ekTl05em0ZguEx+ouzATU7ME8YunJi0+/UsuchuRMmU4FkEFk7VWPxeQCWX
WgG+UOZOeOweZ8xiDBkUrYyqba9H9YBZzYR3fnh+Ho+lyYTDd/Bmgz4cFSIh
U6CejsH+Ibw9W99aX93fKAX0Ng2bZ9GTxkfx5kJaA+nmJQxaj0CS8IqRfXNC
DnyE4JWL6DSFVJmtxxyBGIBEqWwq6jyaD2hMPpsYCEsYAtoc3+isNB8fpSS+
nMMRDVZzNk81FYxYNXa/050rhPzR6srmUjEXd4jgI/euXTh3/sK5kx+9ewLk
re+/XtYgSWqTnKlQshRKHDOdEcwKzFy9muHMlQFVUjh5b1iqc8ZDQoHZpPQ8
PKznK/VKuZKJRxw86OzIpdvdtzv5CY81nDG5yhnAmfK4U/WNo6eHW/XiyqKJ
r40upnWARswh0kxkqtYlgZIS6YxHbkzn1pYaVUfrLVsqrhWaZEMT5mzI63aa
jXpv2q0WSQy+WOztDtqlgpPHk5s9NofBnYqE4vGgxxcr1RuNaj4cDPncel0g
E/WFnUoxIFbagm6HXkZfGLjX1tZ2u2domOjIVDKpsN+hVzDIxDkBawLBoZJR
rbqFSfVqgwI7B4fPjA8NDA50d3TcOnv1Xs8YBDoDwcwPDU9OLsBgCDwO3Ns1
2DUAodLJdI5QKLAZ+ASqTCdh8vlKnVkPsLkCudFsUISTdrUgHDcCUqmIi4ZS
+ITpvuGpqQX0xBRmuvPO7Qed/fBZfFzRc7KjG2kxkW+O6+z00TEIRigXMFnQ
fjhTSEYZHEQUCYKSCMVTfWMEMnLgco/NJ6EOne7gt2B8Yh7PEWAhRCVzcnay
49z5rt7e4WkwkshWLkzNT3WLcmo0eJ7ORE3jXTk9BkezvvzbH77+9Pnh3kox
om/puSdgkzi2nx0+fbi6ur6ab81vfmm54cO1zwL8yVH4/AT87rsXLp4/8d9P
U1oEZXH0LpgkFAmHiB68c6tnbAoD4RnVfNgMx+7xuENOk8nibwmZ3+e2m3RS
LgUB6n9w+8rZkx+/9+7Hp68NTEzB8XSFliGpVcJinG41TUcwmAK9pXa0HI35
fY5Is/H06+9++Pm7vZXtrbW3m48tN1YXU1tPG4XVtXp1e+/gYG9nd2fn4XI1
6nWbo+tHz5492Wj9vWlfMJcLAnxFqJB2K+miWMjkCNnJU1iMIHn0xXIipsPT
XfWDTw9W6uWMiSkD5vp7O5EmxXzviHzzj394enD0+qCWLRaKubfXlNp1Kh4J
NXT5xJmOWTwexEgHLFqraKLr+K/a9aVmOWmXy1AgtgC7wNUQJpA8wOqNRzQ8
HpdI02j1DqOeNdiOFSKHu8elmuCrNysBl0EKu3L8JsldKFhpTGssl/Nb1CyN
goKFTYNwglCjVoxK4RAYSeDMuw1qs4MwiuEGNiPE6Xk825dSU2ALaDiZSYLS
mFyvGEw2qJAEbXkjnczZGVNYQMOeHwSzBXQSnszBDs6kn7TQKbSyUm/U9ZpS
LRoOJWLxTLUciwQ9HicLH1wKBZKRxOru+tbWRj3rU+Cmh+/daesZuHL6tmJ9
77CogI8jFAoyFonk6A1qd5w7Mdp1d6inA05GE7jsachMD4KMwUH56boajI5u
p8OFxXK+ELIocL0DXBOZzh/rFMjvtLONUtvyssdpFrE0ibBDC3j8Zm/YImIK
dVqD3SgRsWkSvUrpT4logCncqKebT1YW13cPDx43PBZPeTnpBFqREfEEvU5n
NJfLJD1mX8vtWw3fH0qmvRaHye6NplNurTkQTcTjrXDJl4thjyuRK2f8pWq5
uphweANKCk2kBzgYUFdbWw+UzKRzjcnFalCvtPpdNh2XSiWKKQtMucKqUSrE
fI6QQ0WCW+O9cfPGpYvnzlzqHBzGEElcARk+PdF+bxzWN9g3DppDwuYFZo3B
4AyEohG3VldO6GWOQiXlUogc0UTCp2/hbDwQqmyWLWq5Q0xmy5VEEg48h6Mi
5qmkycmZcYwC4DBcy25F1OzcWuS2j0wZv3rkRUCMutETV8ZIKpWYCZ+g+XUY
mniurwNERI53TECvf3JbGsBO3BxShmkc4RyKuzCCUTkdHquEODULHQK1kEFT
ThrNKr4MPz/bMdX7YChwpB2BYuFYQDCNw08It37373/64vnRsxcvXz5eq0b5
YLjU4DTz9KFcPZdtrjRqWV9kfXu5UbGRSULiWF9PZ3f/zePvv3PuyqU2sNIY
XzYOog3i0Z4xKHxw7O6vT18bAaxMfmu9OdzRfHVlfakV3dVKtVavVculTCLi
t2qlNNhY1+1rF8+cOvbRRxfbuqcpnLkRjt2nUdsO/viomIXfnPY/2c+reVIn
FmXwmnWJrf2NkMUbSUSiWa9YkVyKxjZXM9HyRn1lfavlKo/2N7aXCqlYOJrZ
eX60v7m+Ui0W681GNaUl88KLVTefzI9GhSR2KkEaGqMYFp/s7B2t2PG9g+y1
bx5XkwFOJ66l1MgFKIo8eBVc/Oabr377t68e7e/vbm49fvb8yd76Ur2Y9Mum
b5795KNr0zS506BPVX0M+MiVc7MywMf3HuwG8AhOuhCxq9kzPVAchmVJ+flU
7PQ0013bO6gARLQyCBD6z354crD0h2/LShZtfrCtF4xV5zabHj7XHZMiCXSx
0cjsOId++O9//6/f7XvAp3/xf/y3X8KaSbnKGxNOTs8pdh4vZk1UhicgkEo4
CrlM43AqTf5kLsiDjA2N0de+fbK6stVwcjET9648YPl9Vh1rYRQEwcWaLle+
ufPF8+aj7ZQnkm3U6ysb60sZo9xfTLg0bCCbj2Uy4VS9uri1ubK6XAzrOEjI
ZPvQ/UFq8M2LrY1K3CpUmTjQVlAxaHBxUKPUsheQ0Nmpse5bd3va73Z0j87e
vdDJzdR8b9dwzcbjqgzWcAvdKcQWJ5CJQgm1s421sqSX+mLJfLyFRLla0KSm
osgMHIZB5Tj8zhai4xgargAQ0LhUBBiBEljt8drq/mdff/rms6Nm1LP6cqWQ
jwYD/mg5EwlGMuUW38feXuBnMybCnkQqmchkQ8FsreqSmGKJUCjstPpCibg3
mog4I6l4KOCyecNes5AMH+nuGRofeNDV1zutKjbzfr9XI6ZjKDonD6cM+ehT
g90IM6DwuIM+NZ2nlLDQYmdrJkFzKDQMQ8HTZFp7OFkqp0I2iZAjEhsj0XQ0
6o+24CkS8vjTxXgwVUvE3Dqz2+PVGV02vUGvEyvt6kA6GQh6dVp/1Bvx8Rfg
Qimbp3P7Al61XEedY6oII5ji0VpUqxEIeHj0JFTpC+iEYtL4+Gj3+OgMFEYj
LNjWko54VLgwef96++C1Y7dASmdqb6vp1nLmcDqTUQbrnhEAXCabghw598ms
O2VRuCrbRTUHAkbMUgAzE64u7B2tBjhYHBoz0IGEjpte/flf//z9Zy9fvH79
5vXLo/3VmAhLsxScNC4Hzm61KqHJa/GnI4msW8LmCWZv9cDZuHHCvV/dJ86z
NcwFml4KvtbFYZ3vj27XFYOnPr5wF2tVwtDqUKnRbDTX11ZXltfW1luh3Ww9
WW0sViuVSjHp0fHw0KF71y6dP/3Jhx+cunanZ4ZuCrlt7uXPv/3udVqoX1rK
OwGTXQ4fHei93YfDCqMWHt/e2NurAixnUKPzBCvVVCQXK68tNrcfbZbqu893
NncqBnFgeXVltWbBTY7jDbGMX4WBqVNR+dANsLuaKTrFDAyEIzUkLdbVnc2m
c+LDK6rN9VzMLYQTPBWPRMomC+RUHNcafvLm86+//fa7L1483d/e2Sr4fFa9
1W1gzvU8aB+Rx7IehjblFUz19t68DVH4UwbX9qefLpWX1raW1zaLekzL+wYn
+EGfarqXqDaH6s8O15qLxYTDboDcv3l2YfnNdsytZaNBQ3fOIJx2Z0swvXY9
l2WxL0CVzLEFY/OzNw8j7MFzH75zZljaKLsdjnhQSQKBVH4BsLziFuGVIbuQ
isXwLQmHiC2zZyMAbry9neqIZoor2w+3Kj4+DEJgkuDzKI7eq4QuxENM6dZv
//Tj57/964+Hq4lQNFfd2FpdLGcy2ZamryyvbK6vNvM+n8MTSyfTLq6aPwsn
40faHvSMu55/ubO28XCrEPe2AACNF8rUNp3UbOOSVGapkM0C3UFoBcSh89e6
H1wdFtitLCRSsbRhnptTeJZ/+yJkB3AEPApBZ3GpqkIGEDs8XqvWFEj47dly
PqgiQSeHUY6IxWXh8i35mEXFIi7MTk6MD/Z23Lpy6vTFm6Nz0vxmLVna2Hn+
84+HtVQkki+XGvViNpPPlxbXN5dKtVI26HCZPJ6A2WFxhCLxWAAQm9yuYCLs
sjr8QZfDE9CRUGg8lU6hilh46BRoanoOyRMo7HaD2lVpxE1KzjyCK2TKbXpV
sqSfvX21E2FuoTt2rqcPTBUo5Cy2mM1WtCgtVVxOGR1+fypf3jrYqhUWC4Fo
MqAzuEQsuVgXSMYdxvRq3WPOr8iVKqVS7faZLE4tkE3bxApf0OvXKRLVhC+Q
TNh4EpUuufvFd1+9evqwEvXJYCjqzI22aQzdbERghrpgRrtKxgbNEAArDzQN
H+kcILuX95qlla3FSimTTViwHSdOtLV1Rf7l968fbqxuLUd1AAbcc/XaIBU2
1HP1408ut3UsODK5lZVoMKGEDiIBAc8EyEiS3aOCP+kXT3T1Qid7J2ETYNur
f/2Pf/vTT99+9fmXX3zx2YtHm+XG9uZic60e5lB9WT9TaJLg2QpTOBm1yeVc
SNcDCArFh0NsVT1+qhudc008wKgAPR0qtjlpUBxZ5Pcgx5g8tMgXjhp5ltzy
+kqjmK/W60trm7tvr9BbWVqqVyvZqFvXIrDetivnz5w5ffLk6XMdMGClklqq
7m1UlvzqaDqgtVoZDEuBPTze1t6LVEvR8wSh3iTlOI5ehS3ZQLhYbhF+sdoC
gXjYHC1t7VbCNiWVoXH6FjdMkPHxWSJXobMapAyhRs9nudORgMfvkJLQCJxS
MDMr80VsAqYqmHQpDH6HRc9Xx7yAQb0wRRcweWIFwBWpHQG/y2m3WcxaJpZE
4Om4U4NgshRg0JypVCoTtQignXdPnRnBWht5nzu9sbnZzGbTkXDIpNZZfDaB
IpqxE2YZSjKWLTNYPMlY2GsxkuB4Bl0gVQVW9+qJELu7V7e+HDcao8lYIqIR
qWD9FLsM2d5OwSPJkAd3JmiG9YOy2yjAIBTphI7H5LEZtiSAnOVEnSyuloOE
0XKRhamefgxgNPGwKOjc7ByJqw+k01oyGkkgkTAglECgNMmMIZvCuvvVm6PH
X3/VWp8WrcnX3NnZ2tra3t5++Gh3q5FNtpJLz8Fg8HCaQoSnzt+7dHVegOlr
m5gjBlaSkVTYa6BAxro6ukEEhdetUfAxVL1Xr5rsZ9DIdr+V3XP8Wt/9CQ5A
6Ll++dacae3w4NWjyspKzO2N2llonja9vpw08/X19TSAm5jVBXXzOMBskGhD
he2XL/aWS2GLI7VUyrzdeMfpCYR8FkBARoK6714+8d7HdzpH8ZrI0rMvX2xX
0rXHn3/55lE5VSyVlrf2tjc3H21vLmdyaYNawVVrXLl8Np3LhINhj9vr1Ckl
PAoOjYWM3L116/r1S1e7hwfnsEgs2xSNJyIhm9EXC7i9dplAQccCXl8o4DZr
lDqPy+xgEohzc5OzSBpTYDDK2Di00BpJOC3hjFdpCCeqe7vry5VsvpBJOnSA
Rm0ychVKHE6mNGhVwYxXAfgjGDiJJ4htbxQz5ebaYi6VKpWycV/YrgmlrGEv
wCEbvLWXXz9dTvmDfgWdi+6bGrnR0X7meBtZwuYypVI+m42ZG+roQmgBEQU+
1E/b/uffPX+4Xop5HU69UsxnjLd3wUchmZ2g2u91x/PlrI1w63g3TsEfvnDy
+LEPPrpJ8KXT+c2XL7fLUV9qezOhpvR2U7QicBdUju8ZlOooslB54/nv/u3f
//aXf/r5+6+/aFX/62dHR09fvDo8evr86HCzvrbz6OBgeyVt4PFIY1MoxNQ4
aODuOI2EYGmcIRnVJBeoAy5rIOGy2FwanYZsyefzIUdUKYmb5lE0BsDvf0DL
79bjranRFwuV5UetLN3Z2txcfXvvsFzEa5LR5ofar12+fPnS+ZMfHh9SPXyx
UsuHWoS09OZ5Mv50206CWp3OmJxrtSnJ0xMkuQCPEGUePT18eLD75PF6zafW
yipP40YbTwlowg6pIebm8l3xUj3EgYBgssxSIe0Xi5Y3RffamalCLW5TsJVS
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
6Cyh/uHRiZklIFStbt998GD31uZcIhCLykB1OK1BxqNAyrMuX7qS10plkxnO
cDDeY6K2N3eR2Sw6Vx8M6thUKoGsHdvZGtCT28quXkk7cz63BdFZeTWvDqdU
kmEYiT81HtMzUaDm6sKstPMXM/JKSkuqoBR8W211WU7GpcuZRVV1TTAyg8vB
gNpa6oqupGW1G+evb64AeQjAOxoRAweOEJbFFarknO7GwrTjHx46k9dEUAd7
e/wOBRVFUPZMra5Pj0xOTk2MJAd69/jbH/C6nRYgzcplUinwIRHxOSwaAQ1t
qy3JvXz2+N4Yw//8/e9/f+fAxVqc3OYwKOQGb8hjt6r5NFBJHYJhC0dmVhOA
guRKIQUOasUycUQiVuqKRf1+v0Ov0xmcvkBPLD40PhL3WfWm4DDAZtPjU3Nz
i3Mj/YlhQBYWTFlBUWFxAxxLFHiHhyNuX8Srk8iUHDJb4zLxcbCO1sbmptrG
lubqWpTIt/ro8a0lgPW9eg6s9Oy+v73z7v7zNXC6NbW4fffW1sLs9NhA2Cpj
kVkykweQbXx6bWkQCK3tVRUVJTmZhaW5Re0kBkso5PCljG5ER0X66Wyo3APg
jJaPbizJLWqtA7FD69sTUa/L3zc+PTk1M7+6eeP29fWZqI6Fbq8pLqrqYuj6
Flen+zx2k0Ks9CRnFhZmp0Z6/RYJBUOgCiy+oFWtdzhNeq1awmEwmSwuj8Wg
U2giJZ+EpeBaqtvhOLbSYsSV51eBqTKjisJ0TAGm/Pk3331xb6nXGxkYBTJU
wG6QYIEtyricVdqMZOp6pweMUpVSREfWFJbX5p/56MODZ6qwtK6CKzWigZnF
uamEldWWvv9vf3///Xf//s4/02BGl03PYxpC0UTcb9PqI4t3P95ZWd99srcm
x7NvXr789uXXL4D08PWLr77+8qsXX3/1zXffvfzh2+f3F4YmN7c37z776hsg
T3z9/KtvgN9//vmnjz795ONHu7fu3Lm9u3vv7r17u7fv3L6+tbW5PDc7OTwQ
D7oVhJayzIvnLgOyJUjtvp6xmSEDrAXHZxLYxmAs0aNjsi0xv0EuFe6t46LH
IxQDc3tnIZo4kJILR0/lghlcgd7vNwrpdIXVatCb7KEkUCn27ou4V3UH+pND
g4lEj4UNb6quyE8/c/JsAVLmio0trC6PWgUyZ2JydW/KY2V5eaY/4PHo6R1F
l9Myy5ohJJleiq3JOHHkVAlVgSspbIU31kLpUg6Zo97rIiY+hcTicchYAvPf
gK9USMVcKgZUXVIIVMNLF8+cPn32wuWr+flXC4rLi4CsX98JhYLBCDSWRCO0
lVRj1JHR0ZhNQu2qyrpw5syhUxWtDW2YbkgnpK25rakJxjbaFHwRf2/NwuTy
yszoyHjSq2BgYQgKl4GC45hsKqyrC9TUAkW2tZNFYolSpRDzecK9ZSPoYqC0
8pndTcWFxaV1cJ4EkBcZCoK0AF05uwJjHp6bG7KSmhohRAKsrZ3AF/MFXFI3
ElydcezQFWLP2t2PHz+8OeE3O3t644OTM+OD0YDLrFPLALnLFAq5Sms0aGQi
Pl+iszg8vr3VN51ut9NpM+zxs5BFQjQVXDz2wbt/+fN//+d//vmdg6ezqhqa
0Rw+FYuCdsHJfCYGy7MOzi+PR10mvUFFI9OwHSWZeQj75rPPP7l3YyFh5iHr
CgCgOHnizMWs0roWKFWpdyRnR+ORSC+QTROjU8O9ARMLh0EgiWyFPZpKDSR6
41GgD/B4PKUnGvS4XCYeFo7B0wRyAba9vgWKpzClKgGlG9JclnX2xMVyIIhC
CBKTxeQbG48ZBAw6uRvD19oTi9du7NwCsHFmaqS/x2PWKaU8QkfFlVOHPvzw
w6PZHXgCnUdFgcqzLmWUAb0oDBCsENtSfG7/h1b/0NjIKAA3yxOpieWNtaWV
leX5ccDPm7KO79936FxuHRzTDWtvqK4oLSour2lq62hvriy4ml+Qn1dQUdva
BWmqbmoqK6lrrMi9dOZMdiOaKtgbXeDRyITOoswSKMM4ujE/PZ7q8zuUFCxD
77Ew0VgiRehOjfdqyS2FOY2apYcAxj+6szEWNrI78s4ceOcvf3n3NMgctEkp
kNri8tauzra6vHNHT1xMT7tS1draiZO6x7fX56djckQbkq1i1uXX4HhMOl8q
5EptHpc/mhiZmRnwGSUMPFVo7F3e2Zsq+PgeEAC++OLld9+/+vGnH3549eOr
Vz+9+fnnX35+C3zutTc/vQY+Xr1+++bt9y9/ANqP3//4/Xfff//dt4BbAPTw
9ZfPP/vk6aPdnZ3ry9OD8aDXJKFCmpvbYTQeg4Ahiu0WmVAi16j5JByBSGKL
BYROEFHqTAxHXSqJymi3uiN9w9Nzs2N7q2WaXYH46PzS8vr21ubmxtreCfyb
WzeuX7++vbm9vb25tbW9sb21cf3a9sb8eH/QKKQh6rJOHDx4+nJGZmEzTqyV
0ql0BldpMEiIMDhJrFDpbSYFE49oAYrt1fI2JBoMoFFtHZgpoHQU5peUVTW2
tjTWVpaXFFXV1raguTKgv3MoGFBNWVFZRXVTF05oDkTDAX8oGg0GA16P227Q
yrgUVGcbAMtVVVWlJWUlRbnZmRdPfPj+vsMZ9fDODqwIsIDyq5cuZZQ2QxEY
DK4bVFsJlCwARAkEKqGztqSyk8jkCqTs7i4onkaEtkEIJDyeToHXN3TB20rS
jh2+0gyBUjSAAK1GvVFvckV7+/oSg4MePpqkio7NDNiYzVmnjp+8kJlz+cLZ
M2cvZFwtrqqpLC6rb+9sawAoi8aR8JG1wE61cr2TW/ceff7Fs/trkxPzW3du
zsTcNotRq9GoVRIek0pCwbsBqkKDSi6evtLEs1rN7lAo4A/4PB7ABRw2u9Pp
dDlsOi6sKufC3lzDO+/8/W9/++u7+/Z/eCq3CcdhQsrK4WKjloPH4Shyl9/l
SyTDThWy4HJajWn92Xff//Td8yfXJoOK7prMEx/ue/dvf/7vv+5PayRzsFAi
UBzCvdF4xG1RitgMtsTksasEdDiIrFaziVgUEsvgidRmu9NlVhvcPrtOJuVS
SXSeRCzXmYwqCUegYDYBpbyiLDcLCET11c3dUoua1FRd09iGwAN132z0zn78
+bNbyyO9MaDt3RkU+Auo1oqccx+998/9+z44fqUwJ/1KTnFZRUNjU2NTTRNR
KNJ4/C6Hw6pTIIkimUTnj/U4VSK5QScBXhsDaakquHzq+Jn0q4UlRdmZRc3g
1vp2AhPfDsR+JAGP7OhAkkiwVghTwIKVpV8qB0NhMGhXW1VBUafYGw1aFbSu
iivn0stRTKnJFw3oaM35GWUke4+Z0g7C83mwqpIWQbDfx66/WkWxxlJTazu3
b6zMjMQ9OsnevDtfpjOa9WqFSslBtIJQGEhtftqJI2eLmltKs4raieqe0eGI
ScriyhRKV2p+QCcwT926uTI3v7S0duPeg4+fPvvs2ScfXxvv8Xsd3oHZrVu7
dzdnphbXd59/+/LVq9dv3vzy6y9vXv/8y6+//frrb7/98a/ff/ntj99//fXX
vR/8/tsvv/z+y9s3b/5tB69fv3715s2r169fPn90+/q1ze2dB58+++yzT+/f
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
fvPNy9e//PY7IK3fAbr+47fffwU0+Osvr3/89vnjW2vjMRMDVHo1v47kWn70
4nuArV/98PLrzx7f2liYGgo7HZ5QxGNRa12JVH8sFg85TQarLxTyOYxqnbt/
OG5VqQxWf//E1HAfoK24v6cfOPap8fHR8bGx1MjM6o1b11emhgaG5249/fLr
Pdz/8cefXgMg/+btj9999fjOnYefPXv88f3dRy9++gWg/n+rHbCBPeX/saf+
f/3bD/5tCX/8mwZ+B3bk15/fvHr17YvPH+9eB6Sw0G+T7y2ZJlUAakOjKEqn
V0sHNf9/pX0FexxZsuWv2N3Zt/3NfrMz+2amB5rc3YY2tEm2JYPAYmZmZiph
iZlKVMISM1pgMTMzM1iyLXTviVtlT3fPm7fffhsqZWVlZWVl3rxx4py4kVnG
XmEBbi5O9ma6WtraqgrKuo4RWaUVVWVFBVC0Vc3941OzM7OzkzN0EeP09BSe
5+enAQaTAMnpiYnJCSDD7ML83PTc0vz0xFBXY0VpsSArIyu/vKapg4gDWMJI
f3tdsSAjKSosGCDv6eXlGxAcGujny/H2D43ll9S3tjVWleZnJEE0ero62pho
KryUfvZE7P6Pt2/duiv2XFHbyNjMGsIyNDYpJTU1hZeUlMjLEBRXooc2vmpo
pMudq8pLiksK88CIyyprGmgwp62lhXGA5pbO3oGRkeGhwZ7mMn64m5m2kqzk
cwkJCfFnUjKyChrGdl4hCRn5pdX1DQ111RUlxcUFCL9prGbQycJQW0X2pYqu
qZ27f1Q6gmNTW/vr5sbqknxBfmFRniC/IC8rjuthoy/36Po3V67fuvNIWsvY
DF4pJ/Hw3r1HTyVl5DXMfRKyCgsF/ORILwtN2cc/3pPS0FZ4/MP1Gw+kVAwh
ffLKqor50cGRGYWF+UUVta+aG2tKBWkxgW6OrtzY2DB/dydrC0tbB3tba0tz
SysLUyMDfR11ZQU5NJH444d3QZdv37p5/fr177/98i+f//XvX13BhnWdguKT
k+ICHUzNnPxJQ5g6ReRWVuRn8bPzBRm8mLjkLEFuTk5GcmyQl7uXX1hSVmE5
yFdzPbpjZSnaMa+ksqa+HhiA5m1mkaqjrbWtFW3aVFeHxUSsivMyk+OjY+Jj
I7gcd1cXZ2tDFbitlIyKgam+MsvWhCbllgMrSgsFmWnJcTHxyemZmWmRnjbm
JqY4FFsHB2dOdEZxBc4jRFsF/QpuVV1VVqQfh+Pt5RNAd/0IDeY4W5tbOzjY
21saqslISMgZWFoYaqhqmD4Ul1LRNbN3cXV1tLWxAwtx9/AEfwiP5aXl5OPg
Mvm8+MhAD2cn94DYDEFeQXldU3vfyNTi+vbe3u725urSzNgIgv3EYF9v3zCV
5I6MIH5NLyEG7+wfHsL9wL5PTqCoT472thZHG9K89aWB39/cU/USDKzt7u3v
7u7s7G6urS4vTPS21L9q6RmdXFhdW5mdmlna3N/b2lhbmJsZ73lVVlxWEOeo
IimpbOwACuEdlZyZV948tIAv2tpaX19dnOhp75uan50Aa55Y2Ng/Ojljop5c
mB7nZ5AA77AEjODknKI/+TyeGAqQKqDQz+ZFf5cXQn4gXPjTJfTA24PdreXx
zsokL3N9LRV5eS3H6Mwcfqy/u6sHxy8oIoGfk5udmRrubqqtZ+OfmFve0Eqp
vZ6+4bGx8emZmdm5+YU5AAFdzby4tLi0srq+sbW7t7O9s7MNDF1fnBnta2uo
KqEfYPVxdnDzj04rqm2GgOyFIhge7GmpzE0K59iZaMpLSsGdLOxdEMI50Xkd
QJLZ+fklbHJ5cXZyZKCXuOfrhtqqEgGfFxsZyvX19nAF97cwNzcztbCxtrEy
NzfW11RX19LRNzIyNDJB33B0crCxMNLX0tAxtHL2DoiIiY2KiOYlJ8THw3s8
XL2CYlIElfVt/aPj03MLi3NTk3RVRn//QH9fd0dn9+DY9PzC8vLiwsLc9NTk
xATYzFB/bxdE8qvq6vLSoryUOGzFxdHOwlhHi0xbz9jGMzSRn1dcVlFRkpce
5WksL3b96y+/uy9r5BKUmJWbmRjsbotm1tLWUFVR09Q1MrdzdnHz8AkMDg4J
CfJxsYISlZF4eP8e7LGMsrq6hqaOgZ6xla2doxuHG5GQnpEc5e/h5uHLDYmI
jPC1Un1276GE1Es5+ZfSMrIvX8pIvpB4JPYAivrLP0Pq/+lvX39//daDJ+Li
T589eXBP7IWyrrGJhROHC00lKCnKzy+CC5aXFiPeCDJTE6KCfRyN9c1cQ3mC
klq4XUF6QmRYFC+3DKjZ2lxXCVFRXFnXAHba2dXe9vo1JAK7iVlpKeA1C42a
xEuMDmENYmNpqq+hpKisIP308eMnT58/fSwm9uSpuJjYg0fP5VS09I0tnX25
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
       "], {{0, 512.}, {1024., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None, 
       MetaInformation -> <|
        "Exif" -> <|
          "Software" -> 
           "Created by Wolfram|Alpha. Subject to Pro License. \
www.wolframalpha.com"|>, 
         "Comments" -> <|
          "Software" -> 
           "Created by Wolfram|Alpha. Subject to Pro License. \
www.wolframalpha.com", "Creation Time" -> 
           DateObject[{2017, 10, 30, 13, 42, 58.}, "Instant", 
             "Gregorian", -6.]|>|>],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{1024., 512.},
     PlotRange->{{0, 1024.}, {0, 512.}}]}], ",", 
   RowBox[{
    TemplateBox[{"\"daily time above horizon\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"DailyTimeAboveHorizon\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"DailyTimeAboveHorizon\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"10", "9.9999999999999644729`1.2146701649892298", 
      RowBox[{"\[ThinSpace]", "\"h\""}], 
      RowBox[{"\[ThinSpace]", "\"min\""}], "hours,minutes", 
      RowBox[{"{", 
        RowBox[{"\"Hours\"", ",", "\"Minutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"declination\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Declination\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Declination\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"19", "4", "39.4018004379921649161`2.7586895632767208", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"mean density\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Density\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Density\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3.344`4.", 
      RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"cm\"", "3"]}], "grams per centimeter cubed", 
      FractionBox["\"Grams\"", 
       SuperscriptBox["\"Centimeters\"", "3"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average diameter\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Diameter\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Diameter\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3474.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"3474.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{"3474.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{"3474.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"distance from Earth\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"DistanceFromEarth\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"DistanceFromEarth\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "396165.33744831797`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"distance from Sun\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"DistanceFromSun\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"DistanceFromSun\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "0.9850862239337109`", "\"au\"", "astronomical units", 
      "\"AstronomicalUnit\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"eccentric anomaly\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EccentricAnomaly\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"EccentricAnomaly\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"119", "51.46940197922595`", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], "degrees,arcminutes", 
      RowBox[{"{", 
        RowBox[{"\"AngularDegrees\"", ",", "\"Arcminutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital eccentricity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Eccentricity\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Eccentricity\\\"]\""},
     "EntityProperty"], "\[Rule]", "0.0554`3."}], ",", 
   RowBox[{
    TemplateBox[{"\"effective temperature\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EffectiveTemperature\""}], "]"}],
       "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"EffectiveTemperature\\\"]\
\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "267.9867168785141871012`3.", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Earth moons\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PlanetaryMoon\"", ",", "\"EarthMoon\""}], "]"}], 
        "\"EntityClass[\\\"PlanetaryMoon\\\", \\\"EarthMoon\\\"]\"", 
        "\"planetary moons\""},
       "EntityClass"], ",", 
      TemplateBox[{"\"largest moons\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"PlanetaryMoon\"", ",", "\"LargestMoons\""}], "]"}], 
        "\"EntityClass[\\\"PlanetaryMoon\\\", \\\"LargestMoons\\\"]\"", 
        "\"planetary moons\""},
       "EntityClass"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial angular velocity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EquatorialAngularVelocity\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialAngularVelocity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"13.1763584944561020649`8.", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"day\""}], "degrees per day", 
      FractionBox["\"AngularDegrees\"", "\"Days\""]},
     "QuantityUnitPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial circumference\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EquatorialCircumference\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialCircumference\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "10920.8043824088392555438`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial diameter\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EquatorialDiameter\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"EquatorialDiameter\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3476.2`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial diameter along orbit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"EquatorialDiameterAlongOrbit\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialDiameterAlongOrbit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3474.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial diameter toward planet\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"EquatorialDiameterTowardPlanet\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialDiameterTowardPlanet\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3474.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial frequency\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EquatorialFrequency\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialFrequency\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "2.66169952721506935608849768578006`8.*^-6", "\"Hz\"", "hertz", 
      "\"Hertz\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial radius\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EquatorialRadius\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"EquatorialRadius\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1738.1`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial radius along orbit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EquatorialRadiusAlongOrbit\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialRadiusAlongOrbit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1737.4`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equatorial radius toward planet\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"EquatorialRadiusTowardPlanet\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"EquatorialRadiusTowardPlanet\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1737.4`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"escape velocity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"EscapeVelocity\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"EscapeVelocity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"2374.9284544450006`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"farthest planet\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"FarthestPlanet\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"FarthestPlanet\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"Neptune\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Planet\"", ",", "\"Neptune\""}], "]"}], 
      "\"Entity[\\\"Planet\\\", \\\"Neptune\\\"]\"", "\"planet\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"galactic latitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"GalacticLatitude\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"GalacticLatitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "29"}], 
      RowBox[{"-", "25"}], 
      RowBox[{"-", "10.023343126129475`"}], 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"galactic longitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"GalacticLongitude\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"GalacticLongitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"166", "0", "17.04528412525542`", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"geocentric ecliptic latitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"GeocentricEclipticLatitude\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"GeocentricEclipticLatitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"17", "47.4898044600355727073`3.648236645579106", 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{"\"Arcminutes\"", ",", "\"Arcseconds\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"geocentric ecliptic longitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"GeocentricEclipticLongitude\""}],
         "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"GeocentricEclipticLongitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"54", "4", "13.4919434703233042151`0.8408123138231969", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"gravitational constant mass product\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"GravitationalConstantMassProduct\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"GravitationalConstantMassProduct\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"4.90280014595616`*^12", 
      RowBox[{
        SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "2"]}], "meters cubed per second squared", 
      FractionBox[
       SuperscriptBox["\"Meters\"", "3"], 
       SuperscriptBox["\"Seconds\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"gravity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Gravity\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Gravity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1.6231970656534247`", 
      RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
      FractionBox["\"Meters\"", 
       SuperscriptBox["\"Seconds\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greenwich hour angle\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"GreenwichHourAngle\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"GreenwichHourAngle\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"277.65887159591875`", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"heliocentric ecliptic latitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"HeliocentricEclipticLatitude\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"HeliocentricEclipticLatitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"10.5000760367123025873`5.", 
      RowBox[{"\[InvisibleSpace]", "\"\\\"\""}], "arcseconds", 
      "\"Arcseconds\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"heliocentric ecliptic longitude\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"HeliocentricEclipticLongitude\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"HeliocentricEclipticLongitude\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"101", "50", "28.2832832002735493913`0.8873038568698484", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"heliocentric XYZ coordinates\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"HelioCoordinates\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"HelioCoordinates\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        RowBox[{"-", "0.20213940349554196`"}], "\"au\"", "astronomical units",
         "\"AstronomicalUnit\""},
       "Quantity"], ",", 
      TemplateBox[{
       "0.9641237100442277`", "\"au\"", "astronomical units", 
        "\"AstronomicalUnit\""},
       "Quantity"], ",", 
      TemplateBox[{
       "0.000050146617192502276`", "\"au\"", "astronomical units", 
        "\"AstronomicalUnit\""},
       "Quantity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hill radius\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"HillRadius\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"HillRadius\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "58115.8334831315683209658`3.6401781275303797", "\"km\"", "kilometers", 
      "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"image\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Image\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Image\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztvfd3V9fd7ynRMe41Ng7FxvRmeu8dCRBIQhIS6r2jDhICBAKJ3nuzjXti
J07yPGnP5M6dZ2ZuWevOmh/m75nXOS+0842T+AY/JrbX5bs2h/09Ot9T9nu/
P21/9j7ji+p3lg1KSkpqGsFmZ2Hb6n37Cjt2Pc+XjLqmyvK60pLNdc2l5aX7
FhUNZudZ/l3hX1R/8nnyefJ58nnyefJ58nny+Xuf5B/Y5/tujx/f5/tG7Ouf
77s9fnyf7xuxr3++7/b48X2+b8S+/vm+2+N//hk8eHC4TyqDBg0KX/nT8OHD
2RMOpj506OCEr/wk2g4bNmQw26GDKYOSk/j9kMHJfvVsbL92obD1M3To0CFD
hiReiOO9mW9uyScIJn5oQ9rtb+6nhYUSHPif7ZAhgxKfjyrYAZwIuvXvdoyA
iMeHEyZ++OvIkSMT72FQ/En6/rj5nTbw4/oMGzbsa+0m+2RN4lNwmJURI4a9
+OLzY8a8OWvWjA0b1mVlZVaUl1ZXVVDKy0pKigsLC/bmZO/embZ9xYoV8+fP
Hz9+/FNPPcWp6AycmSuGC40aNSqcNnw4+Gs7nyD49z5wIdRpWNqTFk5Kesgg
yvBhQ0aOGPbsM6Pefmvc0iWLQKdpX0N/3/E7t29+8vGHn3/2yc8+//TnP/vs
X3/11W9//avf/PIXv/z5z778/LMvPvv00w8ffHDv7r27t/nrr776BQdfvXKp
q3N/1u6MRQvnv/Lyi0+NHJ6ccKERw4e++MJzI0aMCNwUcbvWEwS/4UOL0VCJ
7TY0UkuDaOHx48Zs3LCuprryeO/RmzeuffzRA7bXrl6+cP7s6VP9p072sT17
5hSl98hhytFD3UcOdh07fOjUieNnT/af6e+7dPE8WL//3j0KWP/xD7/7z//7
n/7tj7//9a9+yf76uhp6xRuvvzbqqRFB6iYN6EHhU5A+QfAbPko269zzT37y
k5kzZ65fvSJ9R2p1eUn3gfYTRw8f7zl0qLPjQFtzc0N9W9O+A22tXR3thzoP
HO7qpN7S2MDOjpbm9uYm6q37GvlrT/dBoOzv7Tl3qu/i2VMXzpy8dun8g/t3
vvjs41/87FPK//Wf//T//b//4//57//l3373LzevXirIzZ42aQIcTDRpkgbY
N+jvfJ4gGKj39NNPT58+fcOGDdu3b9/GZ8vG0sK9bU1A01BfXVFZWsTXwryc
koL84vy9uYjCtB0UtF15cVFVWWlZQUFNWVldRUVlcXHJ3r3FeXml+fmU/a1N
B/e3HTl44OghuHkQQIHy+uUL92/f+OyjD7764vPf/vqX/8ef/vjf/+9///f/
9G+/+eUXLS0tW7dupRd5b9yVCvQJgt/weeONN1auXJmenp6RkRFBt2ULbQiC
u7ansF27ctm6VctTN2+gDjF379qZl51FSd+xfcuG9RvXrtmwZvXalSuyd+0C
terS0vLCwvzs7D0ZGezJ2rkzLXUL58lKT8vNysjfk1VWlN+6r773SHdPd+ep
E8duXbv8+ccPAI7y808/+uj9e59//vknn3xy4cKFvXv3vv32296hQv5/HQRV
ItaTY6WGiYJeSx6w+fHdNFFefeWl1JQtlK1bNq1ft2b1qhVrVq/csH7t5k0b
tm9LYQ9KavH8eUsWzF++eNGmNWt2pqSAXWNtTWVpSf6enPrqKuoVJcUNNdX7
amo6W1s7mppAsCAnB/aBY9rWrQCdnZEOW/khhM3JzCgtLKCgLpG0x3uOXL14
4c6N6/du3bx59Qp68+LZMyeO9qBDsYLYU1ZUOHnC20MHGnL4cJ5lCO2KW0o9
acBVSbRvFcI/XgSDRuNBMMj/bJ8MeNl6alh9786euWXzxpUrlq1auRzs2FLW
rlklgmBKJfq6ZjVl07q1O7ZsgVM1FeUovqb6OuADgv2tLXVVlXxta2xsbWho
qKqqKimhIFEBESYCXFb6rpRNG3duS01LTdm8fp2YspMClOhNToJK1RDqO3YU
7Qm+4Hj+NNrzNDs5ZsKEt4Qs+KFUnnvumURbOmnAKkv6MSP4125yUuwyyD4K
Vt/0aVO2pW5N2bp53tx358+bs2D+3MWLFixftkQooSHAScM9OVmoueryMoBr
rK4GI1sbo6WzvY1GZosS5K9shVKGoivh5r66WlCmkrkzDTZxGDQsyN1TmJeb
ygXWrN66cYNimWOwhewSwAeakpRrcZXTfScuX76Ym5szduxPbdSnnhohoPZS
7J/nnnsuEc0fL4JJMYjJCZExniuyzAcnI0jfGj8WcuFoL1wwDxzxy6hQRBA+
Llu6eMnihRT2bNq4PndPdm1lBaBQmmprW+rraVLMUQCigGzR3jwEI4gANABB
TKBEwLKTLbhwDJ5Ff+8xAOKHsoydHAZ227eiJbdR4Qx2AE7CFcGRw8ARs5ad
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
       "], {{0, 34.32}, {36., 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{300, 300}],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, 
       MetaInformation -> <|
        "Source" -> 
         "https://commons.wikimedia.org/wiki/File:FullMoon2010.jpg", "URL" -> 
         "http://www.wolframcdn.com/waimage/hset101/b17/\
b179e53364c0738d5eed90410b05bd7b_v001s.jpg"|>],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{36., 34.32},
     PlotRange->{{0, 36.}, {0, 34.32}}]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital inclination\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Inclination\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Inclination\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"5.16`3.", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"local hour angle\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"LocalHourAngle\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"LocalHourAngle\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"195.21659782969834`", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital major axis\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"MajorAxis\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"MajorAxis\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"768800.`4.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"mass\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Mass\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Mass\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "7.3459006322855173653772`4.995678626217362*^22", "\"kg\"", "kilograms", 
      "\"Kilograms\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next maximum altitude time\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"MaximalAltitudeTime\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"MaximalAltitudeTime\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{
        StyleBox["\"Minute: \"", "DateObjectLabel"], 
        "\"Mon 2 Jan 2023 21:29\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2023", ",", "1", ",", "2", ",", "21", ",", "29"}], "}"}],
           ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"maximum temperature\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"MaximumTemperature\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"MaximumTemperature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "99.85`2.427639237398035", "\"\[Degree]C\"", "degrees Celsius", 
      "\"DegreesCelsius\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"minimum temperature\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"MinimumTemperature\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"MinimumTemperature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "173.15`3.2384224958854815"}], "\"\[Degree]C\"", 
      "degrees Celsius", "\"DegreesCelsius\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital minor axis\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"MinorAxis\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"MinorAxis\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "767619.3082668580190948068`3.986831451776143", "\"km\"", "kilometers", 
      "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"rotational moment of inertia\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"MomentOfInertia\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"MomentOfInertia\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"8.67004678713692`2.9871206128287104*^34", 
      RowBox[{"\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"m\"", "2"]}], "kilogram meters squared", 
      RowBox[{"\"Kilograms\"", " ", 
        SuperscriptBox["\"Meters\"", "2"]}]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"NAIF identifier\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"NAIFIdentifier\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"NAIFIdentifier\\\"]\""},
     "EntityProperty"], "\[Rule]", "301"}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"Moon\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"nearest planet\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"NearestPlanet\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"NearestPlanet\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"Earth\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
      "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"object type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"ObjectType\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"ObjectType\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"PlanetaryMoon\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"obliquity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Obliquity\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Obliquity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1.5424`5.", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital angular momentum\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"OrbitalAngularMomentum\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"OrbitalAngularMomentum\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"2.871040294739298`4.*^34", 
      RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}], "second joules", 
      RowBox[{"\"Joules\"", " ", "\"Seconds\""}]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital kinetic energy\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"OrbitalKineticEnergy\""}], "]"}],
       "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"OrbitalKineticEnergy\\\"]\
\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "3.5824365555877133424300916736`4.*^28", "\"J\"", "joules", "\"Joules\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital moment of inertia\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"OrbitalMomentOfInertia\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"OrbitalMomentOfInertia\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1.085454959652632525246`3.677573947594048*^40", 
      RowBox[{"\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"m\"", "2"]}], "kilogram meters squared", 
      RowBox[{"\"Kilograms\"", " ", 
        SuperscriptBox["\"Meters\"", "2"]}]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbit center\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"OrbitCenter\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"OrbitCenter\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"Earth\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
      "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbit circumference\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"OrbitCircumference\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"OrbitCircumference\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "2.413402162148387`*^6", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital period\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"OrbitPeriod\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"OrbitPeriod\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"27.3220000000000000191`5.", "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"smallest distance from orbit center\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Periapsis\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Periapsis\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "363104.24`3.7995622129785986", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"argument of periapsis \[Omega]\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"PeriapsisArgument\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"PeriapsisArgument\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"318.15`5.", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next periapsis time\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"PeriapsisTime\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"PeriapsisTime\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Sat 21 Jan 2023 15:53:00\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2023", ",", "1", ",", "21", ",", "15", ",", "53", ",", 
              "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"last periapsis time\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"PeriapsisTimeLast\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"PeriapsisTimeLast\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Sat 24 Dec 2022 03:32:00\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2022", ",", "12", ",", "24", ",", "3", ",", "32", ",", 
              "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"polar diameter\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"PolarDiameter\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"PolarDiameter\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3472.`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"polar radius\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"PolarRadius\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"PolarRadius\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1736.`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average radius\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Radius\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Radius\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1737.4`5.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"apparent direction\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"PlanetaryMoon\"", ",", "\"RetrogradeApparentMotionQuery\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"RetrogradeApparentMotionQuery\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"prograde\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"right ascension\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"RightAscension\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"RightAscension\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3", "26", "28.637946005658818649`3.3639183049135735", 
      SuperscriptBox["\[Null]", "\"h\""], 
      SuperscriptBox["\[Null]", "\"m\""], 
      SuperscriptBox["\[Null]", "\"s\""], 
      "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
      RowBox[{"{", 
        RowBox[{
         "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", ",",
           "\"SecondsOfRightAscension\""}], "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next rise\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"RiseTime\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"RiseTime\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{
        StyleBox["\"Minute: \"", "DateObjectLabel"], 
        "\"Mon 2 Jan 2023 14:07\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2023", ",", "1", ",", "2", ",", "14", ",", "7"}], "}"}], 
          ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"Roche limit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"RocheLimit\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"RocheLimit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "18366.4171902950122006717`2.9719584952179443", "\"km\"", "kilometers", 
      "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"rotational angular momentum\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"RotationalAngularMomentum\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"RotationalAngularMomentum\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"2.30767731037099532021251558981`2.9829249036239407*^29", 
      RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}], "second joules", 
      RowBox[{"\"Joules\"", " ", "\"Seconds\""}]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"rotation period\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"RotationPeriod\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"RotationPeriod\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"27.3216609999999999995`8.", "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital semimajor axis\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SemimajorAxis\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SemimajorAxis\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"384400.`4.", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"orbital semiminor axis\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SemiminorAxis\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SemiminorAxis\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "383809.6541334290095474034`3.986831451776143", "\"km\"", "kilometers", 
      "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"next set\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SetTime\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SetTime\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{
        StyleBox["\"Minute: \"", "DateObjectLabel"], 
        "\"Tue 3 Jan 2023 05:01\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2023", ",", "1", ",", "3", ",", "5", ",", "1"}], "}"}], 
          ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"shape\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Shape\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Shape\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"sphere\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}], 
      "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"", "\"surface\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"sidereal hour angle\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SiderealHourAngle\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SiderealHourAngle\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"308.3806708133286744725`6.776274792395869", 
      RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
      "\"AngularDegrees\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{
    TemplateBox[{"\"solar day\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SolarDay\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SolarDay\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "29.530587962962962972`7.9596278051226905", "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"solid angle\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SolidAngleFromEarth\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"SolidAngleFromEarth\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "0.0000604213295280281`4.698970700392776", "\"sr\"", "steradians", 
      "\"Steradians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"stationary orbit radius\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"StationaryOrbitRadius\""}], 
        "]"}], "\"EntityProperty[\\\"PlanetaryMoon\\\", \
\\\"StationaryOrbitRadius\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
     "88452.6616774516170373706`4.7437634667940785", "\"km\"", "kilometers", 
      "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"stationary orbit speed\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"StationaryOrbitSpeed\""}], "]"}],
       "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"StationaryOrbitSpeed\\\"]\
\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"0.2354344077677874527`4.743522793758325", 
      RowBox[{
       "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}],
       "kilometers per second", 
      FractionBox["\"Kilometers\"", "\"Seconds\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"elongation from the Sun\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SunElongation\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SunElongation\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"128", "25", "17.59208981861775`", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}], ",", 
   RowBox[{
    TemplateBox[{"\"surface area\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"SurfaceArea\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"SurfaceArea\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"3.7932325638924`2.*^7", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"3D graphic\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"TexturedSurface\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"TexturedSurface\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
       "], {
        {Texture[
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJw8uleQ42ieJ7bSkx71oNDTrW5Xa2fNzM70tJl21d1V3V3eZ6X3yaT33oIE
QIIACBAgQAdD0HtPJtP7cl1d1WbajW3Nzt5qI/ZWcTpFSKHQywk1F3FfJAkQ
ZOL78Dc/Q+JP14x3N//7P/qjP7L+D/LT3VXn+xbLqvve/yi/mDJY1UqDYuOK
waZQKixvrL382B/9d/JD3pldWFhcmJ+dnrp/9/bN61c+/vDSB+/L4z358cF/
He9feO/leP+Di5cuXvrw0sUPLsrjo4+vXL589dq1a9evX79x89btO3fuPZie
W1hcXl1bV2wqVWq1RqvT6fUGo8lstlhtdofT6fZ4fD6fPwAEg4A8An6f1+1y
Omxmo16ne/lBq9X28lNuj9frCwTkdx1Wi0Gn2lxfW1tdWV1dWV5eWpQXK4+F
haXl1XWFUq0zmCxW+dxO18uHyyXPIf+3POTty5PLh+QDfj8QCoEQFA6HIxEE
iaIoimEYjsnbKIJEwjAEhkLBl8sK+P7roqwWs8mg12vVKpVSsbG+trK0tLSw
MDc7/WDq/r27t27duHb1yuWPP5LDcfFljOSIXLr04UcfX75y7fqNO3fvT8/O
L/5hgSqNXl6hTV6HR76kgHzZwWAIDCMoTlIJJpnOZHleEHI5ScoXi6VSuVSu
VCplecibarVaezmq1Ur5v+1WKy/36o16o9FotlqNpjwa9bp8vFTMS5KUE/7b
EHM5UT6xlC8U8sWCfPqXE5Qr1Ra7ur62ury8srS6NO8PRuiMIPAZGgW9drPJ
ZNDpjUazzWE3a+XAb2xqDFaXN/CHbHm9ARij2FQ6mYiFAY/DrFMpNxUKhVJr
cviCEAwGg/IlBsFwlEgkuVyp1uoOhuPJ/vHJ6dn52dH+9qhTLxfEbDIRJ4kY
hslJQGAQCkeQCAS4HTarHCdPAIpiEcChVyzNPZianl/TmJ3yxC6bUbO5vr4h
R1Sh2FhbXpi+d/Py+2++9trrb1+8/mDDDrPFztbu7lavWS0X8y/DmX8ZypeR
LFfr7f5wa7Kzt7+/u7Ozs7u7u7O9NZHH9vZE3m5vjYaDQX8wHA5HI/kx/MPo
93qdTrvVqJZLxWIhnxNFgee5bDabka8+Lq8eCYMh4GWNWgxqxfLs/VtXP3r/
7ddffeUnP3nl1Tfevnj13qLK4oNjLJ8v1RrNdrvT6cmrkGffPzo7f/jw4SN5
PH78+OXTo8dPP3n27Nmnz1+8eP7ps6dPHp0dH+xujfrtRjnHZ9KckJMnz6ZT
aaHY7I+3d/f3Dg6PX46jo8P9vb2Do8Ojl/vHJ3KgT4+PDvbkq5QvbTQe9rvd
dqOS59NMHI/KUQ64bQaNWrmpNcjNZpEb02nXry7cvH7zlly0D+ZXFTrDy140
290eP0wXW3WBDIcRyGc3yI1g8KF0OpthccC8eu/KxYvXZxR6k8nqCYYJNpNJ
JdNpBgu5zUajzfeylRCKZeh4nKKYFEvJWyYRj0WDTt3y9J3rV6/fmVlcnp+W
MWNZoTbYvT6P3ajVaM0un0O3vrS0tqk1Wp1+GKX4an/3cH+7LbFoyO8DQAj0
23WbG5s6eV4ICvndTofD6fGDCIoSqWJzuLO/M+gPx/KQ49dstOR47exMxnJm
R1uTrbGcajm3fTm7csp7g9FovLU1Hm9Ntnf29uTi2D04kOO5J5fH1vZWv9sb
TPYP5eCeyH+n5+fnp3KYX748PT09OZRTNGyVC1wCBWzajYWpmx+9+8Zrr77+
xptvv/vOm++8f/nemh0rDA9OHz46O5Sz2es0a3mx1Gq32l15/v5oPNk9PD48
PDk/Ozk+On45zenZqZzRg+Ozs+P93ZfNUirkK93tk7PDrXa91uwOtrZ35LLd
GnS78im6zTKfwJEowQqV9mh73GuWxGwqIUealmPO5UsVuRME7g/dRsoNh0VC
AZ/brldubCqVKpMfS/Nx1BsJWFVLc0sbatXG8tKayuBCU0kSduk2Np2EyKEB
PxwN2c3mlylF+VavwcPahQdT9+7evTc1df/+vTt3ZxYWF5fX1Xr1hlq3cvvm
ghWMxrMinyZwAoX8DoNq/vp7b7x9ddWXLPe2Rp1CIuxx+cEIwRUkPs2yqWyG
iWEknSCRkEu3LiPT/L079+dkSppdVGg0arVSuSljkE6xpgmlpbyQpjHQaVSt
Ly8trWvNXoROMjQRjcBgyKHeUG6uLa+o1DN3Vj0YbJMBY8Pgg7EEV2r3u62i
DIY5MV9rNlty8l82erdVK0jFUqVaKeY4liKI+B9qFY/RbDZNReGXfOD3uOxW
s1yLYESeRYaqKB6LYWgEBAGf22HWrs9OTS0oVJvLMvnNz0zdvjU1N7+mt1l0
iqXFNbXNFwKDbhdEpbhcpdWqF7lCs5xNJlmu3BoM+61GZ9iryRCdTWfFYmt8
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
o16d0nmtSLyd8iLFqCYWzTWENOrH4qkkH7jvdGFRUqgcDMSNn/7ln7037+dS
DOCwO+Y/orqUaatSaYye7g47kVoCjwZJIj0+EsjNRZ/eB3LRDI2AgEZhcQNE
Boxb1UZHBLTYbA6LbWnVunR9Xrlp0IWiLrUKwAJqIgdihUQgL8Pn948Pn2BI
mGegUM16GR6Fe81e2s2XazuV3viTg/OXNwTXmLn3Li7Kui/CRNiCBTTpZYN4
5erNOf0tG0GDbiNqA4zrFscm7HV4TD6LxuxKaALEpsMZorVwJ+khKE5Eojnr
st3u0AmZtajvpuOghNniCVxUTL/ykTX02X847AkUsDp/4SeV42YBmn9dNUDj
EuFniPNhC7OdtDeuosl5k1UxZzOjlDmMo2JIeXVlkLjnyFkiIdChiydc11xu
+4zy9oM5JdOtTIbHXC4lG4dYhqKzuXC8FvMN/P7DVql4fLLf5fJ52Ba0etFN
F7/9+fO9rbgJSh18uvukuz+JP+vsPhn3CPfTLx/mVzZKrMQyvoX45y8+ffHz
z56cffLi57/p3fubaalaqqd2uCKlmNVEmXy1nCfRNC9ks3k+k8sgZEaZatX4
UMK7FLXGOfs6G/REk4AxS9socwR2wUpHJ4cpVrVAPCOkbOuWDADiVoUnEfXb
9JapKS1UakjIqjFi8enL+6laLVHbbQ94WkoXanVAOd4p8RuaZIIwrLh9lISR
IAYCer01lQzFrEYs2eWa213ZFeRFDlXbppZUC7fCulm/Jwj4qHF+gxdA1L2I
kltHZ896DaHqtgoabftXbTrrDXCxQCAeL3z1+88Hky4er7ZJx+X3mF7Cn8BN
C8vJQgLRZTvQPaPq5qUL1+/ay+WY0w8ZtWaL1l/w+5wxt4sCidSGl7jt3lg1
vH0v5VBxBVEEo6HNO+9EAnYoPGM7aPHzLKItiZGfLkPhp1+Pa5WkP69/9y31
+aSHrsrvBbIUliuwXTbm0cUc08zJXkbpsKbSzrm3Ct8j74KheIJsxgEX20w7
gPDyx8uzFo+BzrDsRhaKJ5N8GCGrVdSCJjg6U5Tao0ahWAz6Hr68fXarl0sm
806Nt/2rMvXks+OKVG1tzfyJOlNr1HoPR9lOdmuvWEf537148bQ7PPn6l8fD
buEzPvH5k8+fj0+fH+2kDHem4Va/3z15ulPFfamWXGMBpzcEwSjmd7pcDiAQ
AgGtOpUMo47VMOpHoihNynMKSIDLkkYs5iVZ20aIZmJLIZg0gLjDkyGgeAyP
Y6q1ToMNmqf/8i1/Io6DwcD9xfub7H4/PmyVUnEBFJI5SO/q7LVLuNWBhqsl
i8M3r7UF2ChVwtzOWIqIlZPV/Umjwudq4/bkYLLbqACQgE9dePvHC5RPXkAJ
Nw7l+EIRxh7URAYVrhIOljVkr59PkXUUqg12eZ1Fp80O95siuLK+MDO1QByM
2rxsZNHpewbSJ3BlGKTwSCQw87MfQPWsE3DbHXA8GQxkwyhCUxBJ2JYUq14x
YnnlMl0Krs9P6bE47PXcezvgpY/j2s0L/m41gJoo9zySCD7YCMeS2bDV6Fl4
L0C74wy3m2ZKThXCvjg7rTuvCcn1RXqrG1HZVzIRM2b3iXEE1bv8KC9TM2YI
kPrFgBjKJMT91sNTKqLz8NlSp9HI54tpoVvKlFpioZFLIaEUEymmc01aaErF
enHr8xcnmWEGynJREnUtvbOq0xJWrFMT0qWnO5G5zP63j48/e3awe/7J7379
/Mun5QIkikyu7bNSLp3vTun/2K+kE3RcaNT2U6YiD6+vOdwKr9fjDQR8DovF
rFGpCNypt9m8/rAn5GbDrluzEbzVaJY7JdLuzlIkGghE+m2cEOxuPysU434A
tqiwoCVLArb1q396LZaKu/kipNY47aY0RlbZasrm1dvqDf10pGUv77tBFlVS
6SACrCxqgRyTKaVi0Yw3FU7TrWKllIi9vPu0XpFljyTV+t2K7uKrF9El0wBb
X4SGNcPw6YjLxnMCgiXoAFMydB+3qvVCNYljWzEXQ3tjQAjFY7Bu0wIIRX4c
MSJCw62wahxGG1VrIbJxCzjjnnc+suYA0msQw3Qhn2dQny9KxIOWQMi7uBqL
oZpr9W9O9wuZBz8K6aCA9tadwKK7VrR/eOO9GYfKNRU2QtlI2KReNBsQHI/Y
bUa7IxnwZ9noJOTnpWiqOkg+cCGeSaOXAmaX+NOCRWc12ZMEEwqCSi+ZYEM4
nVFav/5+p8DRotCcHGcgrtJt1rfqxmy2iKdjoRyjsEbSsD9kJKTq/tbO4We7
589OT4+en5x0EgiJJ1AYT0SjdHp9ptHvCTSzm0nxkPjss68fPvvi8eOvv/zi
82+//+XX+1gwCPNVAmu2hs9O17IVBX9SzzMwEDP/TI+gxmgnQ6BxWQeHFmdt
rGfG0RApF+QNhM0OXJb/IRCxpUPcoBINVThczAu5Dp8k2FqJEVCSjzOpcNKh
UNuMABVxWPXJgDq0TPnAKEIzfs1KEnRWhbQ+1XSvFrf220BEr9aB/nQoUowG
AHUiC/qcGoMfjUmsU+eW1T8VT4iEN5xt5PfKnJDMyCqw2p90fdde+RvvEUMH
V647hGq7IaYiEdnt5IQKAZORVqfVsth4QYj2grooJZSapaQvI4k5olSVChzn
D7TLoUUfRAJT+mCJYHdbuaDDqjYhVigb9cw6ajzAJlPWqVnFxubSjDplc3k0
q26/JdI6i1gXVNSKS1h9b57W6kw6p8Zn1bmW1qe14XuL5oSesoVhHWQMQmpZ
xo3CUQlKJ6NBseByMiBKo7eS//nF6VHmH7TfnpbmfpZ1+Bm/z58gyQS8ZvLu
drxTiw+/lGJ0uZWmYzkfMmIDhChAdAGkreFMf1tOqW+uc9aQwHXT6NNn509P
u8PTncOHe73R55NqrR3m0xKPASZXY/S8TYl4l+Mz5f7eyfPPvvri9PQL2a5+
/ptff9amKztPf/10eHry6dNMlM1GPlRIgw6IwOJ9UAbccrMbDkblNRWRjTTE
gWasKaEvf7kGg1RdIoigM9fPucsBH8kw8WgyWczFAW8Cp7N0gM0XCh3Clsdt
vkQ9Ou3jPDpmKwW4PTqVPWjWuulVK4k3y1yG5Xzs88nu2a79wvphxx0ly6Uq
k5ay+aiJKNuAmFPtyDjNqe0iJeUrQbEq1TIRIh7ySbniYDI6Pi7ceSPECYwX
jW2u3pGOSuFIg0thVLleIgKuRkMWyqC7EKFzAyJiu7qanOQLuJAWklG2xPAN
XozmxHgBCnjsb92hKCasNfsBLYTpkLDXU4AuRUB7hAw8+Nk9GIxi2qV3P0wE
1Dpo1U/p33+wPhNzGHjzA/TWhxfXtocbNzyKlSWdj4Pp7Lrp0mvFrHIV0juW
QzWv1cKJxVZq3laO6tmwMtczLFMR0WQqNKh5n0GtUl/DO0juvpKdxeGwSM54
SZG2WrTmXipZlpyoV+sIj7qZdrKRj2eLMF3ZK+YHzYZos3wzQSDz3/zPscPT
s8OHk8lpa3R0tHs4+sV57YjqVTLxWJZlHh03sHCiXK2XnxQTrSz3bO/s8cPj
J5896R88OR8WYw9/eTZ6ctBqgKTHkupWQsqwwY9n27LW09JdLUoFYC+E3ntQ
qsYB3OYOMrwYS2X4lLsY8Fn1LJnKpqIIVq8Wo6liuRmAo2DMqfGjYTpRKBWY
uJAjyGgDEEeQi471k0jEGWAsKws6FEuxNr8/JjLxhEXnwndGmDYpNo/b6lku
lSBqZQyjSBKJ0mCQ8UBeCPmyhQvDbiZXpqLafjOXN6jqGVH2otzUPX0ONW2B
YUs0fN8i9ig002IJfUZg8WwQx5u7+vU1A6Pt7g0q4+C/X9ot9TOdmmwecyQu
xhKZRoTNTaq9x91VQ16wwbY3PnZ4rXBE4+RA0IZptVGCgG6+zv/jKMkmuQ//
ytzduAgN1nX8dZ1aEdFtMMyVtHXOnLOnzQ9UG9O3Zp98xxIBv2vjLZQ2OXC/
dQOuiFozshbOMZF4kg2FJKtBh/UloYaagktarwea95iUazy+OrOwoTB3ct5Z
IAAwBdCPh/Tqb/uzanNlq9qpCnQNSlO5rw4qve1mptEX2VqbgFH31Ie3yue9
5tZwuHd+dHi6f/bpw9rJ04PDnd3zg2KhytD8qBjDSTLfGPdxsDMe/8evh8Pj
x8+ePz7Op8qMy812x6XtDu8ItNIo5po0SD8YAxMCjTlcIhZko1YYCNrNFIzB
fjDi1oW9MMTWsmHEq8WNgUaSjZEBG5YWSNEcOpUcVRaL6E1Oc9JnR9NCrVIW
M5IlawdGxWSBLNTjGOB2KVygNxolDrY9SThUYyolRv1mIBdDMjEEQ317TWdM
tDuNZLYW8rvgJJbEUo4FS77Z3dnem7SHWZ+LzDMptQ8xhvxu7+LbMbGURQIM
7tdjuQVdIRxLV8tZQxhJpkXkDjg+6ojGN9LwOru961cZulvy0juNUjoSw4VK
i8/kGVrmC3dUXrE1odnrAO+/6w5byYRNzuHMtNNjD4RMK3pDfyjls3dmUQ5f
WnQm+p4Zo80Oba7ZlUbSZSdIyHSHPK5u/liv6exvN2ACU9kk3W1TlXEH1960
WC1GkyVbLMjSKYAjyzaaros4FU13rQb1huMaFDgh1rhide1d2BsWDXeCkVTA
p/d7ZM9Ry8YqtIhkh81kppnwFP71WbdTbL68N7MoTZ7WI4iPCrq++7zJtlvt
wfhkdzyZHDx68vDR8U67NJzwaVbIWfFxPwEyUkq7hg+Y5vHz6njv/Mnj4+0q
X4zc2wxmMlWBx48f9iGiTGNEKJGDAT6ZBkJ+RPDrFFDQ7XM4WbMlGw5a3Xfn
opqQnxNNPqNb5/BacMjoXNd4EyGmUQwzYjoVSoWXN2K5FGa2JqVMVqrVKU8Y
8QUwmmXKcV7gk8U4xrFRfSCY3E7x6tBXR2WpGroOdOsxyO/1c7DV77dGUIiC
Z51IeLPTK+fEKE449b7Czv75tzvNWntSkvIU9SSaCChNq2ksjerx8ioU8lqd
RbMtGE1hWuFg82OEZe1FHtRAMVBpANqRVDaRFquHj7tlp16ixRweSUfEGF1I
pgu5VA2mnSQMeLxpfHk16FCi+WjY5V9+MG9YnJ77+J3XLj64aQ6ZQrk8sXET
CtgMcYfdFbNaAv7NO3MIF1myjFc9XF255Nbdde+fZHjUDWfpVQUaOGklp26Z
YoMJMH/L1CbcKsIKfzfwPoB4IwLZEeey3X974ZtTfC49PCZ+OM34Kuxifl8g
DYshuycORQpSTEob6VxH8tW7FFwbtlhcJs1+Z9BJpDvNZGE0YTZPvmgURju1
Tr8tbT/a3X683y4WK/XmYYPLNnkaw7ttnnQoX09MRtReKa+Kj4bDRrlUbhRd
1/Kf17J87mbzJJrtHeZ4rpEmm4gbDcIh74ZSqwGTyKxWueoURDQcCkNWbUnC
soXsor2ChtRKh8GqmzKEc/lKUSwnqXaY6gZAr4cf1mWPCyb5Ahfsxzei1O1q
B7swxbNxbbxWr5cKgyYd85szR7UG58UmFAHc9rSqFTaYN2+dNp1vFfpIrSM0
EE+96Ol0m5mcGAbZLGZUuimh1x7066OkRHlxMW1b963bIROEG0BjZEMXt0xB
T61LhM1Po2EiAjhmNorxB80yYHWKfYxNhqW9BPVQzLuhBiOU4iIX4DrWNBhk
SXEvqoIAHJFZX+2bgms6Qx5fm3HDSAByJwqgWfH+D39yH8YlgQs98DE5Sfex
gorZEMfyzNWLr10iUxo1E7yyHJOhzzzlnzwWQ3b93E3drmCYXk4B/rvGX389
KrTn/6wKWGDaTH/5rH9BJdzXaVVWAMSdC9fJ3pAMQ44HN/0OcKfXLmO1KuW2
4TVSjDi8KIkyjUqeiWUoDNAClKyAqenuSKhYb+QnUqUtFULJYr3c7fa2tnbG
2wft5m5HTJYbnTFniWSLuViW/P8pes/e2PYsP+9r2C88TrBlWZAVWmGmWzPd
t6enbzj35MwcK7Jy3DnnnHPlTBYzefK5qW/f7taMNJA0sC1oYMACLFivDH8B
uy5A8AUBYtfmWuu3nqew+S9uxh8dZgtHnBd893tdjsNxrPuDSQKLBt7p8l6k
nVLeN//xt28k3I6jXs+x3QZCH1XqeXZitDSq7Ug4ariW4kz91V4QE9O3KQRH
aq12c3/D0vxebzjuuh3fDfmjyquznpkM3UDhI77/8cp4vYBG31Wrs9++snPd
wfK8e3Vx+24aW5c3pze/fzU7sRfdfm137OEiqk+ikZBTXkvt1ZohT8666oo1
2gRqsRDqMZVnxVY6BcgYdnDQYJrpRym648hFMJe4bXnjYWOg1UYXg9x/l/zn
jtMPjKjOpT6vrFUYmSSJ7oW3X5m/euvFYXjSiy3XofvHnjgboTRKcdpZDaGB
GtwA8ivVfVCDJDabkSfdXqLZka4LTWjjn/+dn2faHpOqaIRCAEBpb9cO4LKo
p+/+059u5hWnXGZUkUiDJMdoZ2q2iG7WrnvIo18aWLH0rLyYRO3dg3ZJr6YB
LMdyV5XPqs9Zj4AR5iCLtL7Eu3T95wQcdXWTNbRKq3w6HiPNiletOSWA+yY0
NRzK5IBWU7WH/WkCVD1W08udxZs3s6HTWYDZwdnbb6/f3lwvV2UddxeTbtAf
eggfcUGvz+s4qiOoQ6qLN//qrS/Ylqyo0SDwWk6/4Z5p77+77r7+/fcf37y/
GM88nSVt24cjDW3CEBV3XY0imHpJNoZ9msBBHdkqc4ulwKjtSjO1fVhBGFLr
xqvmULyuKXZYcaCMSUwCmIa57I/c00V8Of362lv+5t/+dYc9mc6vl9/6waur
i5vTCOl/tegU1tqDP/gVzKmXDjCAoOLXS4y22CO0WOe7K156lA0qXhfeKEkk
bKhCoQS2KGAFS0e13aM25Zu4J7ZO3vbWa0bqSHozUx/3/6/v+sdLmeHiSvbz
/xa5SJX5Es32E0P1B7e/GR3/p69OT4eWcxNHYoeOZQmHjx2Z5DgLK+8d7tFC
+8kTgHm5dmQth9PIdjXAcOVK8d4f/+JLTsfTxHkPvxd9e9m405tRSqWS2Njd
P3tSBGF4pY2kibbr8IPCUqy8QbaF6maVjijCaD5c50pYPwSK7fxhmWTFJlXN
IZ+mPKtxeKf1ftD5B9u/M/Snz2lz62Vk4koDxOB2s87ABValIAGXTcIAtmun
74azaTQ06movAqLzQCFPb85Ozk4GS6Dw6vVbbz7xccfjTi5evX717W03CCFq
NB17aIlISwoirIoyuv5+Qgv+VMa1JLIN2aArXds6+/j2D//mN8eTk+vL2fE8
Kj5/KGDcwLNXPYMy/ZCDOIbhwbKkyCIEsbjUEoPuItEgWW3kISn0VsrApGkz
qwzHCcUzKqXQpPM4FR8qPVsQPOSWNjpX/9qPvnt3/Z3Qv/EnN68W3uwVlTH/
5q9/+N3X8cNf3Cw5sATngEeMVhPVE3GLG5MtvpLbxmSe43uz1UWk/faKVY9J
6UNPXVwvmOYnD2zByhQkUB6qrtGtoO5LWC8dPMz+7f/3u/NXx3273lQy//RX
+Cxk7hLjEH3/w4fXM+fN62QRKVMrp7rxyPedk/OoUlEuoAZsxVSrVn7xk3UC
K37yhL+XFo35Mo5MvZNYfuPZr8v3GrEikg5RhNLo5np68ME0FEwlXfXzn/7Z
Gi4r0HrGdzAKLK/o0WzUq8lcSNp1rrR7CB6WC8WarrSqiMxl2ygj1DRGu/NU
QJF6ah/vkp/tb8mlknt7a31eO1WPUFOaK9n6hJ4dm5lzcceVDDHX+Pp93+NI
hNHTnx8qZ5NB2A1cQ+joMQ2eDPgwMY87ZucixpFBR1p+dTK3Tb/XtfV2C6xb
bB1A6qC9WhStozZved64r9GBRJVRd7AykeCHVf0DJ76euUZsk0WmYqiKhshy
9ajr2h2FJCGS5HDMRYDEY2pWrXqsE+FgZWocybM6ZaDbKIA5hjebumCIKU92
RlvbI0zuAKqux/1xT2l2hd4kZM4HzsXH0H11e/P1pPIXl//vv/7+m7/9y/Sn
0bTfKzTgBNm4116G4gyl0OnHeefwJ0CI85owmLnxsAD74cVswo8/vP+45Igz
dqvCstKxq6MqWazKa815sczSh794vM395f/9f/7tRxt7SqVLl9diLZOeqJI2
/w+/u+hh8tnVq4vb455S3i77vYDixg4oy19dPau4JmxqZPneH5c64tO7Lw4b
pRp1GnPi0Necxta9z3MrJJIQNAF2sGET2N+dn37sO34i1B795H5uH8M36g2y
0njwp8/RxEFbi2YmHlq7T7beTis/SQXVIi/TKFhb2TFcyuyXCxSca+EoWeFS
f5rao3CGSt/79u3gN8tHe1au/t1fdqb4w2hxcnYdsBKpsY6z/2Lwh27H3EFx
TSZ/9gX06mQ+W5xOw/FkcH5zMQvU4fX12BucDCZ9WK2n3Ujq6NGMY0Q/7meJ
4UFR11kJF5T0s63dbG4TsyJP79mqF3PxpaXMBjeXp6PYsmOdXnVnVm/A026y
TXXtOm80vGE3ClWGAVQfQ1zL0GFYWMmsGEsUC1IM20UJJM+yam+kCUniXk2P
BWygYYQP6b1wHh31ZzRppAVOm+59nhr/8M352Td/+PrKVRFu8vaiKz95OJ50
h5KV7YdK5W4GmbzrBUJJHwMyilHsdkZFZM+Ymuj0du4pw6AidtSx08QmfSEW
4KBJtWvFIs0fGH89hmQ/8zKLHTztX54O1FSZUeS+yINW91eAjrAnF7HCWO//
5bc3N999dXsCHuWAac847jMdhqTb1njQ4mQNj5//92UWULdTB4drW6uel/xQ
lHKHL/fKIF1CcK4VmFj+z6vsixrgxiZRvPf85fqRpZcPmBOXCQO+svu/gHK5
iW1VRh7G5XecOfX37/l9oEqrBeKAp9qNg0y4rS3ydzZjmERy8Nkl82QtigrP
1a90qLIFwVTpeGoKj8xvm3A4mPrDxDRDRsnz/+7rsSl4vb52cOdn4XfLy34w
mfaj6dnbb77BexeXw/5Q788nrjTRG7/cl6FDTjXbsE0zTJ1rvQRMKruGWe1f
7e3ffbSzdbCbI3W3Tap86CajswnbV+t9K8aNQGu02oLWjOKBuiaMGPIr/d5z
F4gD0TUdXWbz2wQlUIwMcxVeZ4kKCeCU4afyLC5boLYI2e7352+7oziz3rxn
44g7n3NP2sJumqCLzTdXfP0f/un7m/H191+/u4y4YSTghaZnWq++erW0PI2h
6hBeLTxojy6SDsfxH+bJtKscAuUAK5ts69Xr6UCZ2pbJgNGNi1r9GEfRvRpf
rTL1Fb1BTsj2zDQAD0haUjm80uy9GpQt24S25LlQepZxmaIsdU9uPOesP7+d
mQ82KZLIHEG9YXLK3Wux8hCR+pr/6At5ZCoGV6qjaHoTcoDdQqu404KaNRLP
DuuTN4lAFn/ysIojmSKT/vxRFSj/Yrdcvfl4PQ9dfBA/+x+qh3tIY4dn7ifH
zhzO5R/9cr1v4lgfIHIgu7ezlqn/9ruvbzf+DkMxwt7127OTz/9Jp4qvmL+2
mWYwnBArAlWsDCbZwuvLt7dvLmcTfTRorEffD81eosjVX/wcFm7m9vjsfBD2
J6fvfzvAbk5HqtJhWI/LUEY995OX04uocxrh+wcUnW+W7r3kGs39l3kAzFQP
nh/u5DJrd4ocvr8SJ9/RlytcieDnwCTk9YXRDASD1DiJ5LXRpGct1Hpb3NgZ
2yav01CzAfhqxxQd51C272/GuKhP+5wsWBPTnaziimDmY6T8MUmq/0V6DX8l
YjDRYgRGgA66PVCwpOY6cdltTi/luHNyfX18JszPf//dx6+/+bjsD3u9wB1r
Og1uaGezE1oLbcd7+36JVDI63kBZUjD9+Www9yRjkT2k0SZqKYbNUltbvInX
AlHVAPhxabNhWArQENsoClYNMcW9l4pf3vybD/1/tuHFGkRws39pO/PT/nTe
2p18OI6ExuNy1xp3UcHI1yjFYJspw+U9G2pRIoKDYKsltvJyaf0AJrJ5T2af
Ku8lJz74Zy8OoEoncNvZIbqO3Lv3Z09PnIv//dhtpnIPfnktHv7jEP5VnIRs
PasLB+DGF2psWKZHyTTValTV+zdXZumLQxgrZB7t6sT+5vaTV19T0QBcy7kt
op6x/2Z+8jwba3awSM5vT85Gt3N1IFZXVk43C/tP6se/5xfX8XBinU2S5Yfr
i554ejHqhaEJ2SwIJdTj/6lyOsWp89uJUqqQSH774U59K5ur52vt9OHOVi21
tX+4u9Mg657Wq7YwiCps1BqFDIpzIBJEaBbXVIqU8CZj0CuHG3qiJdmhwVNg
Jk9SpKh5k3HUnyjbQiRThGaD5PLk7Iwev//9D86pvmXmlw55/6eFUr/Pu2XG
AFWWhx43uoyIcHVhPqtlXHiNtGeXi/kA7fzNH65Ov/n+6zdvrm7erOT+9Znk
rWDx7GSaBJ1LN+wy7QxQT3zJdDyWgRV/NlHYsYhrgrr/QJf9QS/M1Lv4rsz7
F5idxdIvOVoagDIMTRB50N4Q4qH/glj6bis5XURTkum9eX0d908Xaq75w9tv
312G2U8RJfJlmgYJnD00dUlSNZmFJB3DqUazyW1U25VKAVzDnurRgEMJC6xL
maemyj0n2WIT05vZ1MP0vX/0+U7a8OtH96D649PXyP37D/fenRpJf/1fUNVm
48svZRyDIBoDa3K9WBMP7X0Ax/JuYiepn30O9YqfYyczh0gXMBIpwXSO96P9
0cfX3n7WG7z66rdvXr9Jrr+99l3X6EfcxfuL48VkMh1NWWxy1j0dny6Mmj8c
95Cm2YHaqgV/uUsqvQk7PPMF8ssvtrPVXKWRy6cz+wf1wmGmXCxnM5V2bv3B
Gku4ZH3n3tru5tHztcNmaX+/RIm0ZfCiTIXEEaByTYkfklpgoQqPMTwCgkAL
M4avjqm+zVM0pQma74cuH44G5vnXN998ZIzlqU3zW/dT1kqw512VK65+D994
uZVeJ8xaG1CsfEaVELo37w/sgCK/end5vjw7XSxf/f7j+/fTy56suRens6Af
RBcX89cj0yOLNfhcZ0iPxSInCUexvTybrhS+9qBijMaByUBqX0c/2bFK9SuX
oMV2bXnBtOBV96u0qD8Cxq9P7GooK4ImOq9lW6X0ep0LdaeJJqO5Wbvbtlqu
iUhUqWvV+P0oIRQOKtMiTzJwPVOh63Ajt5YCDzSir/LGbI4gii7hDfhoEmoi
I9OswB788sHOn5akbLVKEjLGyA6l3nvwc/Xrb53aDoR/q0rQwxQBklWo9GIn
la2h5Ucoafa4ja+Oxzevxb+7pRSBbmNDoBLk8+Np7eWyxfX5s7++mHaf/CTq
TSbn5/Nh2Ln+8NVlHLjCydtu0HGcvt+7NtfpiWd05qcj3qTFWCepDqP4wAEo
aTbtQL5SrwCN1PputlAotUrV4u5+o5hLVWvleilf2H74fPvJYfvg7hf3n704
zD//dKPaLB5JTfrqqodTPGd1fKA3pGp8oClcu01IFKoLzUox0+QZqsyi7VI9
v13gx36nE1vDqw/nt69jot57/9WH708Xx/bRwcNt3xyMmTxcL2/8ceAVXvwU
d5GqBRXPXDPwTgPFPxk6Nh4HPV0K40EQ+vbATn95tOLxep1pSJal65cfjvs+
nVPOZLSFUG3YiALTDoT+wtUDimVNQfAbuDOOPfUg6+C4SxUyvAXwc2H0/Hra
HQ2HUo3Ahm9aNX0vDxXUJsoosOGy+KbEiwncrDQ5tOkOcDPom9bhDtQxdyGm
21VI3AtcApYFSN7de/LyxbOtz9vD/uzE6Xf5Ymnc6xi0dHDSmUSSKpEroVz/
5cadz0YLzrIYqT28IYBQyfz9Z163KPgJ6p+ER0rppWxR4h70Ws+MF438P3zh
utPnTW95fFz7J18M37X8JA2hbhoWnSzaDyGlSUh+46gRnMz6k+GwPxh2Fxfn
7z6Mleg0ciNd4ZVbgJsW6nHMjk+SVR6LwslMQ7J8elUtWdFdCoVW91eqoY3C
4W62Wq7V6vU2COd20g2o1qgeHh6+3Dzc2F579uDx04ePNraf3V2rtiCUlJdJ
MgpYJXSSrswExSzUMpsA3mbk4mFTk9GVvlQKuCSWSvXMsxcPDxcx5yjqyYfv
PtxOLfL291//9vtvBuMbNvf8p0+xHJGMIbC2l9oMFPjgT+reE3QkeOexFZ3N
82ml07tJGKWxh4CpooiKcYRW9jMAJSDCXkFL51GhhiYDnTeII1kkQg7DaWUl
guMoSiKK1mga53ZdXluOhbqoCnr/dqwwzb0/6wgNM2tnPc95c+m3akOeJ2S6
+aw175qr9uWR+V9dR3XdEPGAV4T+0JtqPT1OBB+qYi6sCzsExTKAKHOHR61m
beh6+edkbf2zT5Cb+cnNcqCxDfky6SoMsYKhqmuwnBtYL375+WePVVdr80lI
VmbfOlzu8S/2Cmb7Geki+yQBYgTjoJKQJW96peEU3t6su3ANroKsuvOiXdn/
wB4yih7Wq51827mJdC/ZfokIbP+bs9Eo6QyH0/GqC2bjxVezybeBIGuKiPGT
zXI4urw8Hi4GiYeYynzc59sy8ohCMQZrbbabcO7+Qb1WyaVSqSwEgEWQZjGg
lDpqt6vNZj67vZ3d3d/c2nz+ZHtn48nD5y92oXJqY8vINileET2h2ZI7ZIhw
h895DFJ1g8qlnh7BpRXuFkqgyeDNzMb62v6W4CIkDXXfv/14OST9d6/ez09W
LwPO7r/cLsL7hQzeWm80y3vPDipAVQpbJWYWmEk0j0vr601U7MrQ1nqhkt/7
VETVEN5uMKLsGE2LzrMrgRTgcp6gkzGKl4tkyAhGm5QC14lO4m6HQq3DXQP1
BhHj3gQnt5Wn8e1Comz0T6gehlUQAqoxq4UpP9tNwiyPr8G5mXWk24tVffoC
zB0j0PYTaAWdsj9U/FimXU748QA52Wq0XoJ9WzVTW6jPwhDH45I3ZQ8//dXs
tWGOAj8yORo3xyxw7bAvnji0YRvhky/u7O5XnSR1d5u4ZfZNBi6ABAL44bNq
F8JkHQeF0MMaTbje4OpPQFkKv791fg5ESAOGYsdb+8QBG9Iw9uYq881Aidjj
9+N7a3JvMlqOpovRdDyez7rHU14fx92TruOIjmcF0YBUji8WF8czYzHXvJO+
zCqyq3okKgtMOdWoNbd3jqBsKrWzkyliPF0AOKxdOGrWC6VarXV0eJD58X+a
Hz198eLlxvbm+tMn68X0/nq6/bN2sUCbEgzjde7HJzwglmJpBGzk9zZfpist
vJk6zGdSxfr65ou1g8p+VZCA3mJx+epi2D07751OFLhcXt970T7KlZ99qW2v
HZG0W8YKta1tybRNMjgZXk5m8v72/t5WPscTu7trpSpcBWJfbiKa0iCKcEUm
DwRWTqgqVtx7/tkzGgRrGZwgGjYCiWccN51NFpNI8F3+1JDNHkyfTd0Znba5
lusTm/qb447cyKrgHlC5/csz7GdhT+TzpkTpReOCP3uV5DBfMwxeterPU6e/
YQDU6fIazBGuKPNZkGpmN3YqY9crVd2vTi9HAuqrtOLB97+0/xBRtgVHUJFu
8bYg/m6V739i9TzXKu2uAzJYC4a1/YMtg9MVhgFkGaw0jwoSyzB+n+RpWmmN
d4o2Bh4eaPWPIRVN7rDd2JJMw0yqPy+SXcvgsIUZ/vuvu54kvH0ff7ZzMx1O
u8lwmPTns+XJkBSnPcvIBVNVck2BtNylFXcS27JjTyJKQgPlBQKnGABEOGpv
Lbf+DCSOioX9bGotD+BsM9+AYLjeBMq5Wq2GFrb397cO61uPHj7beLG5uV/I
Hjw6KBcBoLBfLRVF35aZ+mEqVwAo2pfAnaf3n9799RePgVUhtp7evfs0BSPl
QiZ3UGjJesDRwWg+Gi+/vjobGgINwcLLXzPt1VWOdo9+9XmLhUQs0MDUI3m1
fx0huHh1QT29t7v+aG2/qTUyQPXRs31GwrJpEwcpdgZsgVAV7nSYUnE/nWkQ
yPov60SLExk+0/SkeGC4XZeXrSB0TzDlvOURPEiWacEYrdbDfhXODYbuCcQm
MzPY+sK/7df2dc0Cq3wDtFrYdHYewFi41Anh3ellon3S/xZysqSrWyih8y2e
VYwSFmzc+5wN7Pru5ZubyVjnT7u4mL33i3X67f8698bq0Ni5AxiWC5+Jn2G6
HPvu3Y0cNI3QcrGbvk9aIo1jaHfGEzpUAa1HuC5rDqhCWlRUUCdWZQLcAD3V
V0lGkH2bR1QL2n+EJYpkG0hSbPztK/rya/0sKf7Kvh71Ft12jRb9MHE7ATCb
Wq6RVqYLiRmYls34Q0fqW9pqDnyeBFrtajmfPULbR6uM2f6Ljb37RYkFtnLp
w3wllz06aNWK7VKxVqkeNSuNdq34fGsnX8wXNnZfvEjtru9vpja38xWMbB8V
GumjPEA6UObgMAugbWT3+ZcPHj548ejRbjq9tbP98O6Xd563qFVFSPgwRQAg
hXSuIn928f7K940sY0dXQhbDiVq7ASJP/ugTSkxXAE6RscpOzaxVji9H1Nrz
p+sPXu7tNojc7t7OejZTLTbK9FVTt7vWROCg+6V5v1ZmAqlZKUvtTyoQoEcw
6WmG4uKMJvoYbcNJn8WpxE0qr1dQ5tahH7rRAt9m8+hFvvyj+7pMdi8xTf0o
E3yVtJXC4bCdbwM2Kpv8NFYxexhL5C5v4FNizUsiBq/n82STCrNroLgSdscG
09H13CRrydmJwKb/xVNWqVy/U7Wmdtb907bNxG4YoQPPHhp7D1FK6AYOVB7W
ntiGXYS4lzugZZtUvZrU+BBfObC9f7+uA7gh8ZjQbeW04yMFRF29VtB29oD9
pzt1ji0hw2pjf3MstyyjuZcHkndn3V6/Ix+li+VmC8MQVlkOhoPj5WzQGxua
astkOArduNMXG5onV58U1w920w2q1WJLmy8OapXsHlCv5o5aSKW0n08VS+la
9kW5kcrk86UKkGrVGyzRoDEAB1L7h8/vP9ne282VC5VS+vHewxeHlXWGqBWr
xVytkNt/trX78MnjnZ21tcOD1bdn97748u7LTLUlC6VKuV3MBDed4eXb2zj2
/dWO0pn9ogJhlbU9HOeBJ198KpBSpJm8eHAkEEWsc+ZVXqw9f/zwxcFedn99
Y/1lrrXqu8Y+FLX7scR5jmZn4LPjOj6lFB2HqI17Ky8B1BwhErQkqAIJCS1D
hKY9VFHSx061rweXscRwsxEjJ3VK8avekhJBiI0jPZAtq4l9GIivCflUrvcY
6MgNSZbnA5qaR4QR47Aa4cEoUgULXf1sO0f/rDhTS3cyIp/Z4VaaUU+6ff7R
/TsVKoQzHCfOzMGkk8yTfqIqJ/MQzKJ3Ux2Da/FasbpKQpzpwvudMb7xuSVY
Si0vbHngr6/O+/bTP8qc2CEjn0sZpsCKeczs3tj5l+SDjWIPRgBVVvL4HvdR
llzy+X3SDcbTRTLouSZ1UMCahUK7kkZVvbP66s+nfj+gVEnS49CwCEPhOJ1i
C882S9VMDWMoli+kCs1Gu5DaKtQLKRzMpfcrqaOd7Wb+5e7Gk+3i7kER2CBR
0qZaeUtpUwTYer4D5DOFOoXUi6nd3c0yXCo2CwRYzhUye/up9IuDtWdPD/fz
hYONjZcrZXj07MHThy+2QRCi9tePDEePb99fyII2mXYmAZf59C9YMvf407/3
2V67tb2+uVcXrhK0mmuhoNJpbu1lQvZwb+3lRmqt0qjVSmW2DUEA1GpMddLh
JGUYJq3ZohNysW97qm7vHijNqA2kSlxrrWqHTYInWYVyb28I87yCqtQKT1Fe
11vNXQbn2VpeYckEbozAMGfdhJiEyjAB129ImxPoLl4EfGFh7DZ1ocdTsQBX
vmQNB4cZVqed3yoq8eflLIeaqZwSiEQ5I3kaKsj7+Vqx9OWdPI/gHItMX12+
enV6bBsW2SC5doKny4QZcLn8eoU94n58k/jl1yOl9nc5iwml1erbyh79h/no
4vrL/9kbdGH0VswhTWC7iDO4ulECt7MtlytrhCWUkJkM3dgrbgSf5LsTfzzu
hWdTcf2wVm9CcO0oTanuajw6p5OeZ/RNSdZMP5I03bVZSVwBJt9izHa1hlIg
ArZX3J/f/LSttcvoCthTma1ysUSlU4VSPteuvsyU07zcciSM01Ub2NzViTwm
YE2cEplWvdRAmUauDpeOWkC7AkJAs1jK7WczlXK+kto52Fzfev785fONna29
7Z3tw/RWk8Pq6OxqgNHR0HUtNgFzX2xxuf0V2D3+rza5DXej8LDsXWogpmE9
Ayw0UpWaxFeOUrlcrgS0gFaj2crXRbq9gh2TkCWUtZV9ttubWMEwDAyV+DJl
i6uy172TaWnd6vLI8sJr1N90HSBaiTDYqioJdITNScmUV+gDpAm4eNprEKSK
bdAf6m3cxTX/gOB7g22qKzd6/UprXH4EwuMYZ2TDyGgjh0CuCyj/XJTw1JMa
naGsSksQLZKD8wRRgaViTRHlrZ/nRJXBSDR7Jbe8OPLMjl5Mrx9qXteMTEUs
iFDF/7PW/pYS3c9iwIPmWdeSedWVqvjG9PxUI3/5DwRfgBEjYlgKW7bX2+1S
DeMhDvQ34Vmm9V2BPWut+SLBEhP2i+HFuL+Y+p0Q301ljlYq0S62Ja0TeQ5z
dZzEQTL0TJmzFYsSSF6kOJkT0RLthUQbBFFRU6haNX/EOUL9iKq3kGa2BiEE
Wc5BPLWynFaTFlmQECkMtYV0o5qVSYoXrYpoMrWjFsGpWOmoDheLO5V6o9Ss
7r9INVslqFYrHOwfpPb3N54/W3XAwUHqYDO7sgMJbor96ayjeaqmquBR8dln
n4C19Z3tnZ3s//jQ2r27KVTKOdgf6uysk2PERhnNFioAWi4JOswSxaM1vvQY
GwQwOeRClerO2i0IIpnOUJ4MFtxRsUbPadiz8zAvkqiE9OQ9e9oA46jb8pjY
ttSw4l3PVlDuyFavG+SgyZWtQB8DoaraBOe5E0PmU+UWpNajain+KDqnxzxG
gAcbJZnieqHWhBGJwkNGbK1v1sD9dJvF+JiE2XXdMG2mcmpywNYqlip3qWXh
wBKKgX4mPwATjX5/E5uhsPFr6hJdMb5cB4AX6SeHVin5Te/gp5wzGYTWqlwy
gXO1zVqg5/fce4RKmnIUdjzJYqqOD+TrGEZARGv7qCZM6HSIfPdK7nUVL1X6
IVTDxfTDpSY1nm0WiCrQBHkRDjvnr2pqvzueDJOBZzmKoHsMJGgqL0r6em12
1z2WWVuneNntxYkemBhXAdaeMTEBVlrZfBmlcVdCSY/mM5XqZlXFN0t0C2dc
wRwHvkaDT589e1ZSNBZoN1owircKudLhxo/HIQpwrdmqVLL7mf3tw/WX6xsb
O6mDVAFRLItD2sZ4frMgeIE1ViOxk3t6dz2l5NbW9rI7//VPzf17FRNqCGnj
X806MmsKHHJEwgVRa+08owlhLlSr+LxP2XRgaUHvot+Z82yDICwQRdeRjoDt
EnisyZRahiqNA8aSGUWRf/QXASZQx+IylKkDxuxi5B3ZMlLsxYf0cs70T7uE
DTaQIGJHYSRgdaJI2UHszoyLU20xmA65swHy8rM9zw+7WKv5GDD6qxHYgemV
eZQAdDeTNa2GTnevsVJwKTFmPfSad8xzfkOQGvjNb1azHjQ6r6eeKSXyXzzk
zRKBVVo7EpR/ng7kvIBm5dOw3+/PAjuyUN4D2m0JxHLaAfndIRfAsm3nSZOo
z/RK6ZAik7CNFGsEBfnTDLgwurLnlk+Wy/FFT5J7Slx+sZVlQRjkHFs6WURn
E6kezoa9fm8WSARYAmtgqwERmmPeNUa/FGKOwQRNRNjGSNcDS4Z+fBA/6vFc
qVlsg3g08XU6mmrW4WYazj+5c+eP1mS04dho1RxHXPFnnz19skUHahsqZasE
mD/cyZQ31hsACRbhFgGvZvvoMH24mvxUNpcvNhlDw6nqZtEfnMQ0zWh20jFJ
ZC37rFH7sll8unHwJ78qkI1SDmg/ghlRPBlQ/ZW2IKJULVXAdgbaaQXBLhUQ
7AQwQ/JW2Bvqy3AECowb1xiePNShUjm3jUuIzBxCPUhsIbpodWya1vtUE+OG
mqXSzXpZEfiuQEexLRoeFsdrskVHV/0/TDeqhtiNGSdqt9timviOOPv6rLuM
+6vB0IdDSNv+JLGYoP+7q8qOz1Wk3mDzCD5cZ/kSiP10AyfeVxtvLFCaW1t0
yHI9EB1aq3S1m00RYDkfOX/jyrGaRHdeYCfioQNA0vo+sIoSmUIBK4o0qzvl
Ba7ZDyHTo9mOHFfp0OAQzhPqjlYkA75NYnFAUQX9unTInRSVqu8XVItno98F
Z/L8Xf8k7pnk8ocEblc4lkRYs+ONFx3XMUTZHiWLbt/Ibe+WqkD96PDwqI4z
YBvvJQqE6wQOSapj2qfTfl9xupo3cUkX26npAtcZSjrWLLGW9MV++c/v3H/8
xX9Z72BWH2r0uyuOKKXTz2pYqwGCSLuIbjzZzRXzD9a2Gy7QAlUyXyqXS4Vi
+Sifq1WPaiQv47VMZitPapHOiix3RHVNRhDWalVOTe01jvbSedIDCKiE1TMn
1t466bJex1NYONIpEQ3EFsRQHKlyWM/cb+miqWpXvHvhY6BpoPJUrx1SrFYt
fSkZcl/fiPsNdjWjuGiSSgvyWNMQ3vc4SoQ4TtFRwldiX2AWl2HYIxPVF4M4
HpGu96F/6lJuR2k6C5Rb7ZM378/78xPdgGHTMEp/6rqIGw2OV5Ao0wmS0IS4
uwmy1WrtV2KZcyppgs0236nru1JLrHs4bJEiCT6rcPU7d4t8Zz7qa6Zduy+q
ZIA0V7NZ/2PTKiIqgtfaVIfkuBbLFdC+WvZFT3AGWt6cDVRetUm6ozWqIJdc
NCwXvcazFJIXekcQdpXS/93SX794tUrjD5Pu4viN/CL+ahFoFgNKsmOFfnwc
G6HaPKoy/UlAQ/VCA6uBzfJRBSVgTiZp0+DwgqOzjNQ7kaPL2XiQED8yQ88D
aELRZNc3D+9/+tlnqWZlHSx+9uDZ2if/DQwisCrxet4+tX3Tg0WvebB/2Baa
+a2trer6XdknNzY1kSSbh+lMqV1tAvVysVZIwVA+lc5ncqAoKEE4sTI+AFmq
Kte2M21F1ngCoLchUqYIlhGf505FUnqOG3Koaov9l4nph6Mu10WvREwFBvNJ
PApp8PjmciA5s8gIbWiv95Hcfw5DiL8SSX7pZqk+BQqsrFDNluQSK112Rey0
K7K0KMsiqyJyiNSYyC4lkcE3k4Xp6U16NUGuTpTB6/dTLQweG3O9ezM9Ow0Y
UeqKswX5IHKUBTvsBs0ll3dJiRb0/PajKlZdI1brhcgdhp4LwtT8YHsUCpub
JaqX75LYKNDFz/fSu7q/HIqH6/iZp/J+rT7pPnnIws+3mOYTZPGYqZ5fP6Lf
8u20on7cieHqAsuA40HfnIe8pmN4BRPfvUkO1kWAVlCCxakIU+RjORwtbt4O
FD+5TsI3ZwmeHI84vAUDvKJoqqJJuq2iONyiIElmGgRCIPV2NZ8vVBESxlYJ
jKSqLNamnc7cc+IfT9L1uyBjIfYEzRv+eIgRyL1f/PqLB1s1oJpNp7Mv7/3J
P6pEjSLvChzD6S6siYEVDlSo9HIHw6qVfCb1sDNbDeE/BuRsba9UOsTQWjZX
aRQPigfbDz+/U2nxhh5dzIPrP8wTTXJCW5XTEJbaWlXCt1hAdryoZ6J8RbUj
7+DBI6K/GMMahQZ6p9uJmZ7QdULdPaFGQ5+foP3z44iTpF5XHpLtfm/tOdqL
cJVXOLalr0KTZ0NGV9FGpbk0YBvX2ao+cLiSaLKCY69k2y6EvWOgcuaTBKxf
TmKyczu3baWl9y8Hx5PAgikfZjHnfDZX0PHImF9JT7onokmcxd1kKlZI9lZE
DSwLgg1wfoze5Xsmo54N0KIUyhnlY7JfNdzoQKSG3/bYbfR3gzubsc3HhGCo
Vgfqq/vgXmE1CEeHOprjPSoR5YC/mXSvHjXOCMZHwX6UEVYJHp10JB5D9Rlr
/bYzSb845aXwOCQR6+b+jjP9uhL+P+9nZwz9tiefR/L4fOFRcKsKADJP4jzH
UBirk4zEiKzMgziD0SyBNcvFH0+mbEMEBsE/njjtyZZgRvZsOZMcU3Ol45Dy
xBV09tRWcWtta23Fc6kiTm08JVY5L8dx0AlDQ9UsWQWm/c5kFBimVCjzANoo
tvPrRqKoqZ+bGUxssiih6WQd9xyhKjoIDWc4yXPUYBYpgRVHnD+YTiM3cEIK
OLIEQLLtqJeMdMtklOZgApbp0l8gIyfkg1en7mQUC0SXikddZ6YxA52mjjXx
xAXVqSiYSxMqz/HSxovVq/JhtWvlE6vB8HOGkngwv1Jd39OdAQA6gW5CsGtS
HYrxJ3FTjk76eVgCZvodfEB37Mx8Sa0QdTBZWNfHQTlaTiezSv3NqSvP7SRU
nmyqXUZyO6a3UhPGZpxXKkzJRre2uZiz5UqgeVY5jhoCHRt7R5CqTa86drYZ
XZ7qZfmr3gG7WKqWHscUYShtusemeWc6VjBeIzu6LSZq1f3Dtdr9eeM8UXGB
dNEyPEqcyEtkTUOv3yVs8hreFyQ/SDxRy6EVyEGi07nxb39Y3HqFpeWeKVdn
Q46Fm1UcQ2gKxnlFoFmaVgSy3RQ0U2Mxitc17seP+8QbbZyEwTzT5aR+xwxi
DZeP1+fduG9Sakj5J8nFzERKNaBequQ3t1+SzTqNNWAOUVhpOTJlXTCF4QBC
lzNbDW0nUhkALGWB1bjUMqycfYROJJfDhcBU+diWhhZQFEM3kGRRsF3OTLzV
LiT1jhd0fc2NlUlXXTVpC4Wgrtvv+qHK0tKijQ34UpZlTXl0Ec3m1nQQrJzj
QjDiMynp4bRuLYL2kBsI3YDnLeZ0xMvagzJtOXYy5aylcbH0Oh1dsxmmPRA9
y//GKdjJYmzGoNqLen4XtbuKJI46jM88ffO6oAy73dNUdSxFkhgBYCZ2evpb
+mvlSoQuppNFZxhj976gdYO2Zpc92YlWA6bB58eMHSz9VFY7iYlCbF/bZbNn
nJrlyAXzrmXYntTMWUWNRxu1MBSsGCQTr4mvLCy97+BSrInyXKb8jspFdMjf
UtJfDdlq1xY4UzLcZNTWeTvUra5ntM3+aw/9Pk8H8ckIVzX9/U2hFsDzv/qX
82hih2h8pZnL3rHkqwAMQjC+GnySEQWBoWmKwHAUETVdgzGiIesi386iMkWS
JEVWgGAhOyFjBo2ml6DXF2ar3Gac+bJ/cUodtdKgYoHtnYeP7gNwsdw4rDTb
zQYo0SLg/PgRIb6j9CU+vh4Nxl7gNOvbdQimBWQVNpo+7ck2KXdEUZKns6En
oLi2+msrJAU3EEKedQPWcqumn4SmqMbTMLbMFVJUspapOxNJ1docAITTOYzI
hxwi2SzlX11NqJbgdJx5oLKeAI8sSHIFHjwmALfH9s4/xjaNleh5LAXjrpcs
KSgZ+pEpB12TFR1BJuUzxzDUm/dDsdd3r/RTFX6rQEGoWLdGodO1RuOLyK/h
x/MrDZANdO0ZpQvS6NszKfr+JBgMPIPbT9HD0BWpju8PeVsi5RpQYs1LgYZK
85LN5Qx5Faqm6ki2aVyPusoD1lZHLXzgHMaa0Sq5muokxuXr2YhrRcOgXGO6
iaS6R0a3a9pKEmvjs5hd/Tqq+dxi3JKYXlKhVsu0XkdkwV6KddIfu7Ku+x0M
mPbODHtbV4PfvL3uMW34dPHVR0dz/chQcWJVZpqCYIYhMJjmaBLFWUIWNVVi
Vo0A0gCZS2um64sU3ZNQ2jX7skVVm/ZCiWyRaDQKa3V8FM/D/SMChHAO23v6
cmdvvUYwmZe5MkSgjQZrsopKDzxLYcanHefN8WzadXyZw5u6zPISJ2m2r/ka
xdD2NIxUK4zmnmnrhhroeG1d6hrPCfqorQqpT8ihb4T9ILAtzw5MhaJwsIYs
QjfMbxnbO+MhksOzRbrBN1CsexXEQMuJwyA0gpXIGt7Y9kOC09Umxmru8u0s
kMvg+NY3sJjx3yamU6uPzohYVQkZli7GxfvmrTpwbYRKFjPX06Jg6GmOF66u
L2rTTmh1L4Y0eX28qhFuJ7Za3S4ofSFYipdXQ00lWuROa7zKaJk3P1gP3TFC
2MEzorZ9e2HWG8ocYlTLFhWB6RCaMaH1m0FEZYhxL5ADvzcee29Vbtq3Ewt8
8266pJofTie5gzeJMw5pvBcu+vGMi5JJos4b5+8LAmF8d14TBCsAO38z5hV4
7VP7D5GZ+XU8Hsmmh0lW8u+ToP7z0yt3uHxz0V2NTK9tXc71fuhRiIrXAZxm
oCpIEI0f9ZIVMQRFRVXkaQxrNGmmtkOgcjISOczUBp6mDBYKzIoncDFbAyCC
RNLb6QY8YPLVKgrWatVSaYWLRxVAIstHLRCGcEbi1TYVkGwSGotur7+c9oeR
FCcBi/34XAkfJUO346iIyocXZ5qqiaLVG8p2JPUslqjkv3eFzCMCcQFocv/l
kLVCb4VJNh90fJmFciWesmUv2rZeTT7d6/iHDeqJqY0MIJS7ocVSpy5txSM6
xikB7TsdAxt2RgxjD6ZLvRdrQM2yDSsWneMLy5ubWWlpW5plCcP/42svNh6b
Xc/1yJxpzEx8PIoMQ2IV2eyfG2RyvFqB05Fh/P4mEA1rEI6GLvCyFg+jOOAo
gm7zTVqYxCvdSdi3/9tbhjzm2ONXiNch57916iUykdpDyVRiXY5xpxdpF4Gy
wiM9GSXmtGIcD0aJMbqVzs47Oe1qgKHvrmb0wfDS9UY+R7rOsusN2JV+9kJL
nL7RmOfuaGIcK7Wd0n/+K0O3XeTPg9/2AjCtvLpC+cQWqeh0GGFr7+yB21/O
ksiJk9rL68szZWnjTZJuNyACBmoNRKEYWeZIiaNBlMYJkiaxSgmVwBRLe8cd
bzTsjDsDtatCaqT0hGIuW6xXURhqttBazW9XSg0Ca5SKK1YoQhSOcArZLCAw
AtA8CrVhrIDp4/GgF47s7tnSX42WH6/uGAV4XelOx6beEuzpEmaBqte7Hq9u
ddZLKL1DNC+H9ReQ3dTU0oNPoRM7WvEBY/RxO+jEMgDCGEZKmvqiPWO/MMZX
1VYhEh8F09abs5lz2HYHXVc2BYrnrua7265KuDO+a0q1XqJjaCCKyFzA7F7Y
Hr3uK6IPhHowtIMJFPzH3/Xn8gPlZmr4gcgpJybnRJx+bdcpV9UuHDFW574R
McLiXZ9nYITXo8h16TWrPz3u4xZixDQVureo6qui0Lu+NkR9ZgfHgWuuOJiu
T8cZiQ1VXjS02AqNXpBce5F1lPSlc7dqUTG8mKJqpx86ExlREIIbulMuG59Z
miMPFjo/la3xWW8xmo06anT5ei6weJ791p/OiDu/+0+/m6vSi4ZnzKZsPzk/
5tCkEzp8W9WgOKKX7Nw7H9jOXKr2bk+G0ekq4wmwDqArsm8RpKLKAktjDLdi
AB5sIwjUBmorF2uEwdnJ6PriYhnaE2Vhpg1uxdTNQiadK9dacPvHU/oKENAm
RQpqgDApgABBEjiFEXWEaYM4DQEU2gCz/GQ2XXTccNyxnKTfDZIWEZdXdIBi
Os/wpuPfjhiPbXK6vHQmy+Pj40EwiTojBxH6AYexyBoyGQwdZIVDShxgtNsR
CLxVYXQDA+uZJoqLt8o+eHDVa/5z1epe3uI7gmaPHUU3/V5jcFzMsYzPKbTt
GnDD7sH5SkMgC2RkmbwI9t+LhGJ4ndlAuZ4T/M1fn4aIMxzyq8v1jcHsIuQ9
M+qFcDAYjV3LPhWmvkhz/PzWoFf2zMQ9xnJguoO5r/tqQMQnHqurUUe1sab7
yjZMRvSjrg1SVwu6bIU/TJ8ZgjBw5cXxQHbDFc55zncS3R13vwlz3ZMhfjzG
OowW6x3KNE5hf3FwqhydzfwgIOSBJo546Lj/4wPTxOS070ijy4mEAhcn/tB9
gMTLlYZmeg7P2CEVWV3Do68YRWkZmhNLlpqyzvtx7EVm8H4wGmAkiTUa7fqP
x67hVXA1sgxFwBCJEmizVluRfKsNlgr5fJsj2eFipGi27uE0pq1eWajCteLW
i/V0scGRGAnX2iReW+UFAaEEgnE/fuSXwCAgSUMksVoCJMM3KkeHx5PxxfX0
1O53B6PpIDHtVY6D7gLZikVv5g6PR76mdVVnmImN5HRxdTW1venNq5kZzc/O
Rr3OyeX56fJ47I47gBVbSTekJLApzUah4bNeIngOP+Mb4qKrbgW91rFZu5jQ
UEzzXdmlG4CAhEa1DrTN0FExpfOVp5m6ir+AcSxPx/B+95WEEYMZF1PzoG1I
oklLqskzypzNKTPZbXPO6t7KhVxbkeVYhC323QhohsFsGJm6pIfjXqeb022U
UwavmRqOTfU2ZRLClPHgwVcmx+L2OzdC3eREtERKdpwRzPdOu/PZULfmU8Mc
Gj13mQSW8/pqSEfnXV9wTX85mQRobnB64kP5STR1VbfvRo7hqGb/2pY8qiiM
b3wf2tN9r8+kekN6V5JZranQ0nKAU5deARCPWcM84RBCH84ZsetUGiUnNjwj
tvRe4MiV1dSXqtVms9QE6pliqdCsVeqNRrMFAbXtWrVWayFgo1bM14EmyjMo
qXGUzsK1Jku5Ftso1He2U6l8ieYpCGq1gWapUW+3W00ER9lVQ4KcxjWbGgoI
bLNK8yLPAE1hcfLum+Hw4vzGi/WhR7uqpFTO4sZu5OiL4+FwYNui1xlY4wSS
Zse94WQc2fNXE7t/erY8n/XPzqaXx6/fL1fS359PT6ee1LFxcdpvFqcTxYX5
D6Ys3wAcBPQWnsFTtz+cggR/DACSAlj4j+8Kk2xMcEGCtqfG7enrRex7Gzxc
RAyFQhq9YbHe13gJlkmqRRMlECRW+SUM9WxjHCBUiFcOFmNberkhnZ3ZL8/0
V0tozT2+vVwlUmcUOclFfCjp+IiN3nObTpmLgpVFd04ZGmqME161lZmG6a6i
nE7NAa0lqNfrdOybk7HndFRnFKKmdXEietpsFEfHA8nxc+OPg6srT31kRdKV
9YSL+OAcySWx25X7MSNSu57iOaGedIGjUd+zuNoDxRnzwcIpVU1z4NCj5cpW
ta6naayqkvJExZABR1kHjCyuwE7//zl6jyZZ0itN7+fQuORqaEZr43CIYQMN
AgWgxJWpM7QW7h6utdZae2iVkTrzqhKoKqhGN2dshjQjuaDZbOaP0O/kIlcZ
GRbfOd95nydc0VHAw74BoxQ+BjvtRm94fnxa6beqrX69CQ6A8XDcG6EoDENA
u/n5yFxPkUQPI9nc68BtUAdRvD8et2r1ThtGJwgOd0Cg0wU7wwlM0izP4CiE
mSbLqWMU56TeWFKMUOmfb5zN7Vo9HFbeIp3DrDLk5hIUEP7aYDex50ezpbe4
93lJVP3t0gqL2f7ucXfYrbbb68jd3hfJIXt6vnf1QL1eRbzp+56eWgQ2jCUC
7nFiwGc/bNd+eiOFSy6af8zH1+Ju1cV61gIKZpAref/KnyI6gV6v9u99z3Li
RhVcgOktxVoYe0HxozWqDNj9AFJVRNQFBqPVAWL7rpHZDgX/5drYspVZ+oAm
D6TGHZHG4e9/uwtTUUt3BEqCtuerKc3T7J6aSD49s9iPMwGt0/Ef36KhKFKi
LCRCTKx2ROjcFGoaersk2mym+62HB2JWQpH9IcD9w9oEaO7mr1Hgy6P1QRh7
V/VMP1k+8b+SU3fLlU0CToaJ9uv9O8guCXDmhQvPHU5sY+gneKQ4EQOvN7Y0
QZYrh0wkypXJvbMqkWfCSQFm6r6dRtk+zC0c6U4akAZ2utCgWXv7tt+rdVtH
Fx0Ch+FWdQSPRwgFQNAQRIEu7ZlG48ICOREdDagerdSb8ODi+E2jP+4NAXDU
R8AhVEYhNiFoFANQdMCUhoeDhECgWEcQAI7HLgba6mZtbq/d2WwbAl6K26mq
mKUOru7nyfzWMh7mmSEy+CY1n66vpCQ63O2urhfurFhNk81huX4MtrezO2m9
5g6h7k+dcS+mJoSsuZ9PSo3paHv4j3H+4Z40i1WU3rpaOqdXsahlGu0WUx3B
HRT1LU7YLm5uDKJMm2ZlvNGYacaOQll1cUZAQ0OwFYg0tyIGciHvy5Rh0+6S
3aiM/kOKfK1sGwLy9z3/qj8lhj3p+eH7lUXurq9a1SvZFnlFGrFTRtR7lnW1
vOfIDE9yUkNpcRvlvD/J7YT29oZdeFt9OtXD3VK9TQbx/TRIlGBDT/+2Zdnv
Dms9CQ737qKAh7dlWFdv6Y0HygHfny/D2Vy5v0IwHy0uiT9aoZMvEydZzPpK
Qy+GnifwG6qrkIcCCwSN1APeNEpi1gPfNghqjJVDaKqJSfokGjMPxS+7RzA2
wcExCPQ7raPa6PKycdasAVTzqNkZdXqDMQKPIGiEjERez4VOHR43mJ7IYexn
M2uOzl+cnlcH9caw1+/1oX5nPOAZCGBJ9PPRfZjgmUEL4wRYYAEW4XUuMp1l
JsTX+9xf7nMWhcumddwgXBS7hyLMlivTj6fBVI6y5cPtapFvZ9P1Yf4uWT+v
sruPT7c386uPD7dK4PqlPPme+XRl9RXJN7JBmEueNhXXufCofvdACK6zubu9
m/lKQoS26ok6wRtzUfbRx0+rfCmFt7v9p/XuNv3SaMx3igny9rXcVBLZpEjd
M0kF8a6tcPD1SnECoeaIbOjPQwc0nAE/XwniyLqZEP/l2xg/a1rS2uCLh82u
0lt6IidbjlMOWIXmr7nH1af9/8IX6x1Ic7TKzGVHnbpquEoX0c5ZbcI1cfN+
T6/+tGoIj2tbY4J3y/vdKi42G+b7q9lqNw2W6Amvx0PcSGMsWamO+bjLw0Wc
e5gG2x/R9ve+GuSbaVJWuD0+sfih4zJQofzeNuRDNIDuj5nMTDOetgnJYzQb
E3FqLM3chuXN8KX0ZbECxupSAxCwzHygeV6tD1r1dqXbHXT/u1/2webna3oQ
DJjQENbBBW/eIZr/ZExgGmVSDx9Cg3q/dVprduuX42GnR0wwDBiDND3pMAoN
TXiOHExkqCNrqkyQPCezTpDHfsLk1/e5E+zVJoEMJStLk/VmnqQ3ax5PQk+W
ksVzVmbgw8Ph6ub27np7cx1O06BIbh+Xoaq+u38+RFKcF9LcwoTDPa+yVGd5
Uzplpt4rxt0SEf2tKKu5v3r/f34oVPIHieqUom/pkGJYvk5Z37pxEtEfnj8+
vn/3pB/ztmAI7Jw/sgJY8ikIZSQ5g/rsXVYE7DcezSPRjBnd0AFM8wWKDG3c
JJhlQzPv/988uRLfrIkmtVGaRIKmK003DER2zNiOI6dox4uP7C/IwgtZTb7x
LhLDV6aqWqyu5tF7XYqjXbQOvuWXhxxPIy3Sl/Lq7rDPvu9uHs/2T6l49zDl
8Aadp6VTdG8Vx7enabSdLlRKzyO+iArGujlw4Ww298uOgI5eXatnWu7QMTlM
XVoNKdGJMT4CKWBYTo7cDz7nGUOUETQ2Tdd7r/+6SC/Ljz/lqfGwNx7Xj84u
a5eVTrNWGTT++384qV6OABCASYZmEHQM0K7AESoJqLIG8roHnIM0TtSrx9Vx
u/+Z+wAepHhoQrP0BGNJcoyJItIllAkjszQKEHinYi7jcKZbU32/T+Z+TSi3
5nYZJEU+392trxItu1ElW3SmO8vP4uvDTi6XY70uYm3hG/ni7kErqMHHqx8+
2VK8SCwj7DK2akwFEACK9OZRFe4Z41/iuLC48HYfFz9urreJQ2d8T4XS8HCj
UpzB6VInttMgkfmf/kPIJTQvwXeRGnCpIwDXOL9xWV61p4llMcskm4ENyaEn
iWejC0nq7ox02BdzxLZf3FMj+of/b+7vh79OXWr5ZPL/++F9bEQcqTEjJVK0
1SJkqdKCCWIhC/mSEa/Z0WKmy0E7vg8+hsHW9pdmdj2rx8l0y2Zhci2F6sbX
fvjoW/F2S/5wRenuDclbvry48n+YQlfbYqz7AnfYcz082Sa24ytEN/nXrb6f
L9IkboHoW5eBFUfjfanj6V5fX7qOKDOxUgbDduuTW1uXyQmJI4LIsJLlxiLE
TbAw5Cym1eq0+8PB5Uml9vasPzg7vuj99n/48rQ66o8h7PNVxaUNtgFJS1IT
pBJJ6QwovP3qGOz2Tl+/POv2+oPxsNuk0TGO4CQikrjC4iwAmg4D8jioioIl
IihO6HGSLjl1KkrPyzXSNgWEO6zypJj60/cfn+dxbBETQeNZ13Rs5fp2Liwe
I3ub69fL9N1us/i4yt3o0d9+Ksr6vnsQII5TSoPQlxtoMJyHLeXGTp9uggPj
3Nnmp/0m/ustvolJjLCXKvZ4yLsVS2YV4XBjmaVnSCJN7bYrZBBI6cxMjYUo
RmvfjUnT8xhiRjI7X/u6T3oUiIqmxJsMvFk4GEIbknkLSdDb2uafrz5mr15U
PWL/FGL1eaAGUY/F75WBQJpWkJmmw70qzM83z1kRMwbRQgKNJCf9uF0FU9T0
dHedbMrGxlXbmdgFadOr2fUs3c6dZMZn19HKNKyIuzJH++3KXuXBdB0Z0t1+
Or70jOkMCxe5N+afHm5uRWkV9JGZ1P11+k4jNI3nUYdrK9d0ZcOMouxO+oKa
bqeuPL8q2xGe4K6X6yIXKaEgTJqswIHdi1qnP+6P259PvTw9qx2/fV1ttk66
wAQajycl+gHAsNslKK1wZEVig6QHctDvXjfP33x1dHZWaXR74Gg4HJEEB7Ms
hvMsRWqUgGCGxmMlA3jsxBYIhmBYJ0mWsTPNN7NVgrV8ESvm+9hf3Ww3i+nt
uwTnEJHW1bEX0VjweLd6SEIVU2NrEyXL2+9W+Xo/VZdfffPdp2m8fZwXEwPp
LAyAZ3J3YDsMHN7Mt+HtYhV4Ad3bedLjfawtrcUEZhd5nG5vpN+bTFsh/btV
uWM2scylh1uPbSeSGWS+NYuk9CAasV2usnn2BxJCzFEX6cU6CxADQQx9WrjX
JiyFucjjnBOVrwRR/3kzwU55Nb5LobkFzT0xCMr0oMyBcO0mNB6KzYHnmZKM
0JomtfDEd62la3upt0xW85sPfw5Y4qciaXNX3fF1FMfrO0UIbhOnHG6m8bCM
pqs4S2fEVZ6oIcn5SV54auLR5u1cf+IHO81WNFXyeJTtgRPmifmmliYLO5uy
ippzl966/ptUKVZYYoaphNmBvjR0PtJYX49Ckw63NhtF1CWKgJNmpdYZQcN+
r3V+Wa9eXpyevDxvN+sDjkeG3RE0GX1+/kQP5YMlR2gEGarMRJscnzXr7drJ
1xeVAUaAbYCAGYYheZEkRI1hRFZiaVUhJV1xZEbQBYJgaIJ3wnA6zTxnNR13
nScJlq1sFm5vnperbPPuXRbImqJHOqvmeTjdPt1tRIohJpo7DadXH3bbbx8j
0/h3v71a/Xi92SgSJbqIvNUN8gCMMqKU2fsr375OrrduoeqmdffDcg9TqOFW
KE/DjeBG6QpqZ+tB2d39chUUq+2nv8w1SrX0aKuqVNkifuBMMmfMvI9nb8pp
hrSf/dcygbJSX5USiSiWMtiXRUT9TzqSM/+oYtD2O78/CWjBImWZc83UH7Yl
VlyO+2gQ02bVjXQVtqc62KM52fAJ3dW5Qsc00zWxh2L64yYfsH/7iXEj68pV
p+H13z6Co5u5Ys22tzfm1Q33oOFJFC9mjLzWUkn5oAPXkvED2VAKOnTSiFfL
nwzZFDT5y34brxBFQN8Gke3awQY6s6twd7DYO+HAktQcctlgwxOC79GYEixN
YLVPBZnt9Qig1e42up0eBHVr5xfNRqVS+fLo9eVZsweW+t8f9iAYGo0n4LhL
ywZLwICokuBCbH5z3jqpttvHNQACS06AZYqi4XLwM5REUFS5aCxum4JgSRrD
iQLH0aJBkbzux0lu5Ae73TefTCOX07hcmeT28OH988P7hFJVxfMMPsoXMmhn
a03mCEzdJFmW31ytnvcPuzklBMlit91KqOFY+sAhLbffSEnASdXkLk6vsSyc
zmWa+PMfD6vlzmiO9/QrOlQvOdMNGGIcGkPl8OT883WxWP70fyWLKTtzpHg+
G7Em0xNsSjdh7Ek2vhKfVRZp86HbqU80SqI5g1ZmaANgFY34cBv5SNWaYKYg
8tpCVoOOueFY+oedU5X0YcoMhwYt6/x8YKcMc8UYuz7naPsEYuRpBJJ5qkms
f4P7udD/8YeZ/wTpT9u3Ejbz/7ieH9SpFWwPWeJsZ6hhjc2rD8ICMhLPc58p
TmkZssp+Yy6sUjNiI0l2C+lfbiXsD6W11k4ywo33uTTXaaULhzRNbldRmFh1
bsMgRiwpkjyzNQ0RnGVo6JkqCf2Ly2a3XRax2Wv1Bq2zy0azWa0ef336ptqo
VatDoCzsAJh0B2BJeIDICy40cQW230TRylnt9OxNY3Dehjl6BGGgJDAEMBA4
QaRhmqRRUsZZkWMpVRYlmldkTVQVThTdRFdzt1QRjTWCyOdDT7fZzw9IPdw8
PT1NWbhUJJPQ7A3WbIGKwRMcr26k4Gq/f77/dr2zw8wRVi6xLsGXUUzFsHv1
0jdNX04gb/sxJvViOz+klrL+z3ePh+fvV63XVFmsn35qtrC8gHmfsm3DcefB
2gzXh/9sb8xyUnhuuhJ8I55hsMe4rupTbTv0QIzp9mgCI3qwEaPlsNVZGIx1
kGdHvg1V4J09dITpJmTG1BLm9hQhPzh5s+soJr3uQA5/lPy9DkkqrXTMK12D
QUG3EHVRjjdmE2uRYLtBBlCLfSIW+/khfLmSSis/rF18fTvbZhIr/EuswGZf
Xu52KpLk9nLjps8s4Cq09jW5VjZuYSiZh9jC+79cM768X9ao2DBRQ4lmto4p
riN3DleO61uSdB+n2vlZpuCxRumiqGqeUywDwxC7lXZZ5GZnAACtTrddal+n
36ycHzcbrdHpy/PPt/SYYGNoNOoPhuhEdsp2dxNpDIxOR+enJy9entc6F4M+
hY4xBBXL1el1WUkRMEFgJUYURZ5neI5mTIelFY4XZA43dD8i46lu9hbxyPE1
lbbpCTvCSVLRtXx/fb8UNApBA4ezfRojcQLHQQzXD+FqTi8ekySeJg6r+ikW
PVOkiYlzMuYwrBMIsDQ3HTdAEda8vro10bNvf7h/uvvLd1vna7J4vxJvBI0Y
sRzrrbbTwqeXPE9MnA9q8TzXhSzIXH9pCfS3OWU54MwoGSpypKovTuwuiS65
c7uABTixPcMt55kFw3hf5L2FNmXGXap028Ys1WVg83YssNbh8cDjfpf+0YCP
jHrEcSHNhr4mY7Tu5TNNCFSYlx0bY1M1nar806ZrfFokK5C4WUDOZM8Zmvgw
S71IEr47gL4NJE7A0UTkrfyknJUU+ifbHf92fRCiyJT1nTsG0kWWFonG2dzW
mKCREeqxtcxa46CXXDMYuy1IxVPdKfNFEY5IQdcDTYIzJ1zt15kyHlLwBGxB
GDRoDEoBGHYHg9bx8TeNbr1z/vq8enE5hCFwAg264+5gOMI7v7so5b/+h/NW
/ej45OjFi8serpb7foJDE0FEKIDiSZYkCJxiWUniWF6YUDDMezhRNoNi0JKf
h070+e4a2OlVasgYRBMAzk2GbVzlBepxY0TqpN3ssIriIKk4BIb98WDQ4x/u
bouJNatL2bN6t5slBDtNyXutAtKEYZBMF7bHkrdGqyhP25Z4dZVK8B+ftqv8
Lz8/mK+5jXlv6SotEkjGh46noZS2mVo6ovJUqHPWep2ARFkdUo0O5rV2rJgk
quOMwkRyS29A6rr8BKICe67BppHJqfR/uwuvsGr5t5IKyga+x8uQvlFMpOyO
JIgWHszo+RR/99vT9NtanXG6u5j3Btryjl3L2ZozCJnc9dVMZb9f8u+SvnQ4
/Bno0z/xp8L82nKd3Y1tsIYUrq/8cmS7uidJrMGKoSRgdgxPTAVRBN4iFE5W
7JSeS6L5O8oQl493ZZCZBekJymS973wtb97rDGP7IRNucMUc/hu90CSO4gKd
0bfTdL58TICOVSI71BvD8HAEjOF+b4QAnfOjF53Llye1o+P60UmjUx2AQ6Db
7w2Rcb/z8quvqo2z31SO/vDVq1dfvX0zFLq8xJKSQcFkaZUwTjMUxeIIUxa/
lA1aQGEaFtAaOuBUw7A8L8tsz11udhyUWoUOEtSYEMqgBTVd87LbjRMS41Gn
C8pZihFIvw+gky5haoun9x9lcUxz8YfVc+I8x5GeS86EUZq/cwit9vYu7jpm
ojcWQZMp4Wf+/J4R//Upkj/ebBvdcH5VeDIloYNz1JZFJ5POocUi81YriBZ7
wg/J9uefsNY+tt9DmG7QapK7ijA1ifGYzYaYqJUpH80d2MpizlgGICaIrINY
txtEKkxO0wj1zwyXUKtdUNi71F7ZwcMYv4rINtZzpYflGe5K6LXmhIKxNSRs
QQcC41pXosD60sAwl4d5eHe9bRFeHHHxu5RQ4censNyu0CZfsqkQlkKvKwyt
W7ydn/upCWWRahy3ll6SuTxrOkpu0sTC8tc+ahUh4reTxBj3TRymV1vVlK9d
z0CXFgIf191caLTVTKNo0QoX4XoXKW22B5TZXuuPR5UhBo5K2O93Ou3Kyetv
3rx8e/z2/OL84rQ56Heb43Fn2Dm6bF2eHp8ev6wfffn5Wv2jc0B7dS6UYqiL
YAehqW7382NrTAEXPp9wXooXzbMYpE5a3TEmMYZtrS6BaTRfTHNTBqYGRbkh
jcIYhXU4z+N4yjRmDo5yRBdwlwkwQvt9qk8ajre6uX30RCacFc9/DIstZ/P4
nAcjXy3+xzZP1Tu5wwW0Wk4YdsM3t9n+/cOe/f6vT3Y04yrW5wvYSyFxML5K
r1vLmA2arVlqsHFUY5LB44ft1fMn9vJelySIBvqw7yBZ7k01VNCGkshTVJBj
WiQjCsJksigznJFIbLYNEX3ChpQ7YYPQzhTBMrZ3yXTq2GEeeYYzntyInbId
phyt7sTvV3HO5cpkcRqXLmu4KrWS8lSeZR5lv8s3cs/I7+dGiS6fzkzGWd6K
N3Y/KBZwNLXFtT5IlTqnsm6Mi2oJK1gInDCG5RaeBUWGaiS3E8T3sjxIiiUb
qyIO0uM+R07ArR+ks+7SNSCfBoDSrTjwf0VDIpxbOLWaJoltY0i7Wu80T1vt
dimAwAhEe81mr9ccfP3FyxdvTl6/fvWmflqt1JsNCKqeXJ6eXZ5enlSaF687
lW/evj2vNIY0IaoMz0MY1u5gaK0HQCOELVOfBD9/IziBocm42e83miOG123b
WZ0fLVzfYTlfknSWACQL6oA4MR5CgoiTmKopgSwL6ECILU6i6U6nj0OQwOhR
HuhiEuwt56d8i1AaotqCLtn4y18NSq3ggnmUirITIYtPj51umuw2T6v49qfV
zuiah3kSq5Lmu5mJKO8QTSPFi0mZspoDtkYanWyn2yuZ4csZjzOye/MVY/Lu
2leVLAHbCIOR6rVGK4pgkpMUU0QKIW80Gls6zc9jK4CxElAXsSyYmrK6dixV
sRTLnRWRUJ+LgyjT+E+fnNezn0PDnbYvtI22XiR7lrVdxt742fv5I1qP/JBE
Gdn+tgofkq0dZ0FaGI7psnJW7CLK9inGde6vm7jvRux4x3YBEHwhq4YlmSYV
5duouOLPRUG8C60gyRdwk3pzPhv/FgeNd160SNgpqRPOWPVxSmLc/wl8HmUO
O/UyX2M2ltCp1JqNWon6lXKHjwi2Va1fnFYbQOvrVydHZ9Wjly8u3140usNB
p9loV09q9dOTl9/86n9uvDx5+bb2uaxDiMIGo/FoiMGfzwBAoOG4O6aZybgL
gQBI1C8b4LDWrtYgtNzhGs9WQyd2TIjRRSuXJhAOTxDK8B0co3AcIAA2iF0b
qXfdRWrKbKsJefQE4URT3IWcZO98IXi/34gTNJlZs2ImAw2Y9pZXy2IXh6GL
TyHv7+9aMi/j2XeZNt1dTSl2u3Ks0JdB0YgpVcog1iJRStaJ7fvCk7jGxCvW
fqbtsDPZ1KIym4BrJ0qjRJc0Qox9baayMSgIPSNgwHnZ16X7ZqaJJAmHoDEa
om0GJprSwiUR0Z+KtjYfRaXNF978zJ32JKiz+E9Jonzxrc4E3NlF4u7DoZ65
c3m045FMPSwDlLX93Y85cpp73Gq3CrfzYplzZQ+pxIYXZ/PgYGLbDZunx9DD
1flwFqrHp+kC/JJdTn27n1hmvFrkUyvmCTOIY1WOj3Tn38K50brAwPc7M1Yz
ytA9A8A3omjwr48sp+16XhFoIsTPBaBdvaw0u7WLWrtda2Ls4PjivCx7pT1u
nrarL9+cVl9ULyoIScIlGw761bPzy9Pai6++7FyenTWajdEA7XS65RSghMlw
0OuNIbA3KTEBHJA4SvBor1/+1XG7320PIFg2XV3URY/xw9Dxx647J0qpwGgO
VHWVxbEJgxCQFFmmMHnDbYpc5mOsxxsYWY48O12a2u1hmQSB5RiGZEwePk63
85zo0+p05s+zxZK3poFZGm+Jvf4Y/bX+ZL778fupprlepEsWF8riwUqnho95
WrG9lpHngo4CUxpwkk6yjDApx44UqFxPzmJ3p3JiPFcMNc5/mJQ9zReGRmke
kc2jtagLPiuhsIh2WDcYtFsEMAYCVp1HdhpeLQ9OojB7PVjV3t+dVOds8P+s
dazzkZNmCgp/JyC6x8krhaRSKVZI44rsrT94fzvYq67BzDj7/WIWq6E5tU0l
sr9rKJo8jfXVcorV32KyVZyCuY2+mn9UosFxHjtaLPpzWQkyW01cFAypIPNg
GGn1bYtvQtxotE2TXOwkigBFaDBTWKhlieQ611ZFFIv6ciENB81adYSA3Vqr
V6ujrS/rF8dvTy5rrc6w12mVrQG0ei2UhqFOfTQYgZ2TRrfRb3R61Vr1tFs/
r102RxAC9Sck0Gp2qk1wPMBKGoRwiqJHQO/zPxl2ewDQnYCwb4ruzDPktBxS
bjEyIoalKBLAkAmts4NBF53ADMp6jghDZL0f+iagra3IYCpgMPXunADj5Lld
mN7ShSPLmf55kSyUn+OXtDL/ROjbuYdOr/KtJTPxDfk3x4Uv/tU0f/r0lOqe
PDVF2c7kAc87JL+wcne+yPsfUrx1LihSp4pAgo+OahThSNR4GLPf8F45fY1r
0JdQNZW5PsfRQTjtGZ4aPZQAqUgVxuEjLi0LoqgABV2MqowF5dezbb5RnXVo
ycqTFPHorsYuWTj4vx3s4cdwVKwM/vsRnyQFlMdyaCwftzvdZfGHa25qhPJo
ruZs4OXX7qhI8hKRU9ciSyaIHOjaNyG9M4pinC88ngB3t6Qr/mMpL7Nk4wcx
xri5EeRmTHHlL67CoAkBkCOaJt5yh1i3Xd5LtNgjKM9lY1M2lp57f+2LSVKi
62TQa/QalcG4Xq81Ly+PXp91m/VWSQONMTgcQQTU78Ldy2blRePt8UUfbY3A
o8rR2+Gg+6tv2qe1t0dnvVZ3SLGcQJbtgSJjACcpBCd4tjfu9ivdAdLtYRCg
Y+2AqEhmWAypAVjEmZzLyIDFYLjXh0lPkTUaavcxQuAkSaQIYjJ+gUiY4mR2
MVNiPnfpgijFX7LWi8etm+EZ/O4/3if3NL/0X3iYdUN0vZwl7x/CxRXRF+/g
m6eszj3vnp+D+a4oqYDBTMnRoGS+ugXFZJEechF/r4jocV9A3wrBxSAuq8yq
HNWE9ZurP5wurFloqKRYUoNDKSyuyTqUyJx1WLGko0fuxOfCfK1Hc04iVL4+
6L76AzYxv9s/PMycwDXzpTy1y8kgy7lRuceMKAx3y2IZRKoQ+psPhZNGzgrY
PP98s4pniWo7O5VA9VDy5qvhPJRNyzJsd9sfrbz0EHmebaQmx1QbsV3Mr/XJ
Dx62i5Pql4IZLdN5lBWqmc00Y4qPrEgIJJbN6TMZS3gZkFF8fWDTobuY65Yy
RGl7utAFS8R3u5JvthLJl8TVq5UFfdMD+4N+u9cbDMFBu7SuCQQO+7322WVj
MHnz++b5l0djjEaBDnh2/Oaro8arozfVbqf1y190W93ekBXLAnIKNsEByu6B
0KAjMI1KtdcAhmNkdFmH+T7q2MyZ74skRcXJfMYbQrM17INQDxtjAaVwJIX1
myNe8HweEoXeCEMrL1cBuHRzb79gNYyCpelupzXy2fpuc+Muf55RTwrtjkFd
53GQ5agu0Rvt0mDHA2uZ10wOyzbLm+drx73znIT3M3FfbO9Xuw/2uFivrnbx
+m6E6b3XUX8gNM1aatltXKVgyI186aS6JIMtHOgD/POlRkFUtrdpqn3GVwQs
jceKE6i2+3GZhjwv0wgC9Lu1l2+JXvLX3cLLPf1xKcVbDkQ/ii3a7G8c0o/J
2w/PazkxZL3I8o8zP12vfuEsrXQ5TYzcyv7qnwWmINC8fKBhVTN3gpjtee36
Zpw5khBOkkI4hywju7m+8rvvAhyI2ROydI2ZphdTkRaXpOLeK/9ecHqKZzEx
1hZ4hzHHvSRjaTOMEgolHEV2BSANBDqI6HXobsLS1m0U7X1zcf76uGQ4IVB5
BhoPO+1mF+h2JsNOq3P5ojIeAc1O+wxo94WQPDvrDsD62875y4tBfTA6P2v1
mwOEoBkEQUlCZ8etiVIuCNjl8PpxGRIACg4bL181esdY7BL/GCpSxBVPWGoA
qtcfdctRAU4ASpL4kv0Mpg4LfOiqpMn2eyje+L0hgtNkupk57NKzHQrltYtj
23q4un54elp4NqL/sOSr/zTy0I6S17scSPiKlUlwruMQ4weqWO6WP0WTm1U4
3f1t7mbiHw1XW7nd1Wq1TDPV5WBrMCQvEKuvSwQPDlAiU7vLnRFz9Z/zt4Ee
DuqcwfGSqgWstE0XOKc6hWMx0nJsmw71ZNgmq3Ctau/irHX26su3XO+nrSo6
EVk8BOtljq0+olQ/xgiGMWV/V4iuem+HnhVla0iYrwLpofhK2CcGnc7cG+D0
rhiqGDnyok1eLKaRyZirxPaxRFs7b3VT5Qdzjs8Oh6uws//BBH4DTtQyxIOY
VG09ME2FJrbAG2lctpiGwoQheZwkANNdSViQtpalL4TlYpaqoBsMGU+lLbXg
LY5iBAzrY+MJ0FXGY5KKDHpYr1+c9frNSml8g/7gsj2o4O0vu8MWOKrQpt5u
4WCv+eLkqNrqNuq93kgcVwbDHjCGcAIGUGIEDlEVakIXFbjxtkTILjjpdV69
GRHDV5PuG8mkx6S5dQx7KCcRx0KkSg5IHWPkMqoghRlQGOoJAkkjcBuhXsIu
Z0nyduN8vhGZlpg0JutDxHgOlE9/8SJ689vsT6nFnv7CDHhR7cKaJhHBdjZL
8KDcQarslawxf3e3v32Kg+3jIfW4eGaYHqRP/YBP16RCn3UJGKIlwW/JMoqu
dQ56usj/HoXdwZ1ZSWQzhCeSyUU2zwVs6HumIqaPhUbkzxKVJliAiOi1Cbw6
7562vnz1VQ3mpuRmRskzjxeLqbb3mPX0TL4DtKWjBovUVqb+6tq7tVFzMVzv
tKuf8tRvfsg1zt0XmVD8cd8bqJbb4Lbxdk2La348K9zOdvldllKvjMDN1cCe
dD0/Z413Wasdg0GXuJ85Oi3Ye9t3JD7TsSQSnURctAbTrsFypHwbrsgEBZbs
7PU3uwIBSgDPx0uiEv+32/kIGMJRQxYHhWFPocDume0JQKcsfbt10ajU2y1w
XIdOB+jlizHKSCNDIzieG//ud43Lk3bnspTDY2B02a1XL2qVLozCQHXc7497
ExwfDc7LRXl7MZmg1KB9do5q4bh1/O/hKUhdvmqBQFYCNz+iAxjHccmQGY4S
eZ3p0zzdAGyGaHcmaKcBvH6BCJLhP8judHydWElSWkzmzPaH4uanJFzEmDQz
UQoD/wHxwYHoWp5CssHjMknFNPIL1Zk5y4jZheOrP222wdV94b0bwc0x2Pzz
2uIhxPeDXuef0LLuAtmUOUxQPsXIMBuMp/mkM1m3nae32tolU1ugJPFg0woT
xjabLx3bpkIfuM5MiVWNwqUbIHj2xWXlHA4B0NgtMQZzFaXYWZaECWuDYgg/
SnY72wizVMtTr0hTcisV03D+0fCSt5uHdJH5epCvnH0NXJmF1JHiuIiEdYQY
nqV8VDZR7L+MLHdhx+EtfuLFU8HpJwKjTSeyEYgBqk2tYA7SWzPNeR7DWNJy
uN4ZjX0+pGbG0Yy4PFw3v1ytfTJYX6l2SY59v9SKzOInY6J/esJyQ6jZYglE
t2hdH/UbtUqtXW/U6y0Yw3vgxVENBqFA/71pnlIE/uYXzcbLF62LV6fnF5Vu
/ZLqvDhrVDrjMssr/VFvVIeHzV6pFO1Xr6sgI8rj9lGP9gO6K0Kiyk7Qt796
gYkCAUhKLEAkpOmGpusMAjF0B1TpwYSisHqLZBuXw8Y3Lwksus1cc+k8H55k
ZiGq04fd9uZqKgrTZcqtZsPzxrD1D1g2bnCVMDw/JlefaN1V55vsneV8mh8S
fXrVhufJ6v4x5sOVek188fUP7yxDxEdn8RppXjRt1R10xrDBCZRGjzMDY1AI
JbRQBFNWmSG0KCn4pocy3tIUha04KQRBm3CI+HRjwUTh4jYKEuN2fQTAY1Gs
sqW7W4phi/b8nWj684JhSSmYXt84nilq4bScIU4v8jvrxTwjvjtELWSVZ9vV
MlgsNH3f/vlun5mvwB+/f7Q0UvPAOEQ0fTVnKq0bL77W3e3CA65N346ARFXH
nJjGKzZgCE6/L8hTQxrOpppDY1L4sz/5ty2Nloh4pvir0VeOLGSzxTycyrYu
Ul5gTfK5FcoSxYjtNgQPhtDohB/isapC0rDXrtVqjVq934VoiqIk4MtTBID6
zRcM2TiCwPPz87e//6r7efdf9JutDjSqHleGvUFrDMOddgcbtVuDwfnFZeP8
8rLbvGSrR8ds6EpjmGVjpD8Yn/7yRZM9f+2L26VFQDRnOb4pkX0GATEAQfvI
BObHNU3pXfbJ3lecGKxc15vnH979Hz6VBcv7VYnwU4cfTXV8qppCBwK/7noZ
bw1kj6VqiKhAvuQah+uFw4Wb4trN9jogL643jyV3pOl/tehf7hOQlWjyspnJ
rROcW8R4KtXBQjI9Ikgp1moJUkMTQ1xjNZtQJq4IB2DNT0Yh3XdoOmcVQzNw
8zEj69F9uQtJtN0DqKYjgkz6mvo22RurCNZkK7V1e6oMlGn8YK4OythkjHTm
KdH9G2KGltZhFUm2c5fxfD/XwszY8HwAf7uRlDq/CfZ/sYuKu++Kbjkak80Y
sNRwlVhYyfXOftyZzbMYF5UQox4dKdQicRkL/mi48LfrxC2rmj/p0xetew5i
pulM19tBxMs+HjoLnbF7hJnwE4Qjq2bqiDr/mqFOm220RWmDJqQh2Hh4flxp
VCu9br1JYhDJi0LzD8fNt/Xqiy8RCtKw1uCbV/Xzy0qldV5pdkpprLROa+Ne
vz6o9kmyV+103p4PLyrn4+Z57ayBDeqXJ5Cs6V1fsq3SEU8v6l83m2cIPRFX
IU/RrKIpokrRCk6QAvD5W0NS4kt6HYwuQwkIJX+bxUkp9u+eIya6/zDbrkM0
XMNEIjlzBqbJi6OqJZPkWmFSW6oPQH1Tyv18YazjLPH3zwdP8eMoiB7uQ+/j
vXh9367/3WuNOKl7djY5n/TaYky7240I6Wqcu5RMaD7wcAMduQpLDO2NhLGC
jEhU/VvvTW9p1EqsMlXFC1klV0T4MFVouksw4267l0mRSp2sUz02KQdxHc6K
olDhbVl8t2OPt4mZcprnifSPCa7weZcFkj/m26mq+LfxFWemSjG/u8OAmdvQ
PoY5yB1E0JmXZORMNftqTsy0xc4X9dwV7Lme386N2cQ/BEN/YYVWlGDeU4h+
kxe7jZs6sW7tPjCTr6JItC4lZsGSw3A3J8EiMnjN0oYhbKpNtieOcduRAqHC
wb1K7/PjtiKNBEajCQYA/Vql3R31kRHMK/SEIqsvjzEM7L0470I4Vrl8AQD1
9mW1VWtVK6+aozeXlWp30LpoXrRkHGj02l8j/bL+eO2kJEhyBA3fdAgdF0XM
VsvRCbYvgbe/CDMOFzcySrI8S3L4uGQxZqIqCGorOE5z5QtQ+OWEskPH3aRx
PoqDmywIqG/vZ3Kw34VFbxR7S5ajHYWEnVZPgCfUW/ZaGGuoGqfm7U5A4w8f
p/pypn/Xmix2efTdPF7+l9tIFxXhTwXOU0j7CIvPNbnTpwUjpbs2S3mJLIUS
QvCb9y1gMbJowFi7TG+AaBk2WHkgOJ+e2kyam4iqhTJPwO3VDTWxUE0Bam+I
K9X1WupykQe+buFEjFmxFwbEA4P8TV50hgGn+uFUo5m7m8jL5oi2Ws03B1G7
WU7TXc578zLkbib5TPf/mtu2fxaZXKYm5MASrVhc3AWz765891ttc8hV5Tpa
xGE52WFmI7u66mqWrxcogvtMso9CRPl86Aln3PItz+8ci+JGkqKuUGa7i7QV
HV7Xhx4DLgKh52qKjrEltY+BwSmcGUJ33AMQEul3O81+D0LaHYrB+iMSg+v1
8XBcR8ZgbYyVaVF/8abVrXZq/cbJ+evWyXnttDEut/xFDR5UgMmw2hnWqzW4
ddZqNbFOvX9SHw55DOXoxLIp0joi4HMuXxkiL9IIJSGj0vQYijQZRSUJWSAw
BBwpcqv3+y8nznK62Iaiu842H+zVYn23X9BNLZ6FhCKzBnNMJzHXJTg0Duiz
PiWGDIR0JlehKCGoePsplwtu+VFpHg7f/rhb/yW4Phzyp0nN+UsEAWDvwjbB
gu9qdhnwQ9BzWAqE9x5hMa4+oSxGd0KjEUzdBiSL08+nzRfyeeioyDrwNNa/
swXMBbjlEqZRm+sAE+oginZPDkLDsZcGTl8XyZIfuFdBLt58j1ZXEhOppfmF
/nKxuJ/G8GyHmrG8mu9zM1omrsdpVH4zf7y6Dj4mvF0nM362NDxuJopulifp
/SFIPnyXqnk4i0YwfpuxN0/biOYkjzEcMrIJdp2NWZfUneduM7TJoZ43pXmV
sKHZ/s1kafJLBSvmt9G1UiYPeiSRC8VoZ14gTbUeJmDnjXY7PBkDJIKoZMlu
3f6YKrmGbAPDLgq3YPS0Uj15W+G9Lzi20urVql/87vXRab3WrVy8Omr3mvVu
v3F6fnLRGPUnWGfUB5vV1qDyujqYQI1qvUSFk954pBFyjkFpWH8zC5rK2qRT
BSMoGW6UWUCMIZLTTIbXJ7AwnLAWc9F8+5Ir7marHa99nz/4ebHapnc+wGCO
LGPAJXOrtl+ghutYIF0SByVhWm0lVianIgeP+G0iJjf7zULP/96Bv1veP//x
xydxx7b3f5LfSHnBA0cXsuN6LE1OP+cSq2YuL7J8GAzHvu91VWPOcYYxZhgH
DTCWIlws+muAv5qqLC/uY8Kem4JzlV11n+9ZnL0YZgowZIjRSHDt3Jk6QpTf
aM7Cg7fXHKYDB0tdsipCZ1IeRpZq3y40Z7aAUS896LM0S/RMpx92EP3zo8u4
cPCXJdm8uc23C0WQ7YmW5qubt4t7mV3czBy2ho3IdhjzRREVNzxy5Yxd1hr0
eL+CDNWnxj8ZNvnNEkel3EBJQrVdcri/OM7c0liDvZp++63eR59qp4on2XzL
F3MbExGWHPdQsyeRYKPPMkq73bwc9slBC2RGR32oC8A8TVcrp5fnMFkjQgMa
NCq99umLL1+c1i7qp2/Pv6zUKj0KHV+eV85HDI5060eDXqMJDdq9LtCotytH
55Uvz3unBHzWheoS1GHX0dAIFqSpMt0WAXVoAIZAgFR9DZc0kiJblGATtd75
CBGvPvmbRe5tlo8LY7pOZvMJYhU52UGI4j1akxtBuwrCg85w8KKPjdALIfHO
0Sbekm9vgq2SB8mzkw/5x62VP0Z+dusdT1JENgaUMxpyOi2HsWpnKW+RYyxw
SH+lqk4BZGUO2nOftNUoYDEvs1mBAxQo+efE+UOf7685RkRTASFF/iapmn/8
Tq91l4kD9cEeR+DGbC6qpqHFGusYAb/wLC7mkcCRmJVedQJZleIVxcRctiwI
dh7Nr9eqe3PYxsl/2IDdw3ydRnKRbzE9Xi+STPbmKjJ6f6fNiKiIdW3xHT9m
8FkMw1w2sy1RLwOVonh9YX0B2+02W9gDkWHlPzSnPsnSxJo9t2+cbre1BftP
HnccZPnekSUCbmZ8VEYvzqKZQAYSBeBWOsI5DMFOBuyghSDDyaRb70GT7rDf
boGkLrPUCOuN6CGg8zw9atfPji8b9aNXX31Te/m2+g9ntW+6pEG1zruNiwk6
HA3ewlRvhNNAt9n7jIdvXp+8ujx7URuSND8XvgTS2HE5bW2irDtsY4MOi1Ak
Q5NaSokGLXE4QXAmU6q6fdIs1qtpnM4i04nixTqOFm7HLkppcZcPC6bu8SRU
r1fBPj44eokAnXG/7kaTdkaRKurcbPeavfPgEMzeG8L6kPycC+2z1TwFRd1b
OCgx3S2vdG2aHHQWgfUO+/milvK91o6ZZGm5EZKPd6CZFkvDiWXDlv/00Hoj
o/Bh/fZk9C1O9RJVlyPD0SlOyJWoPQKpSPt8syVdSnF+q0emKouKpy/m6oyW
/OxK6fuxb8p2bjMemVsW/eh4t/NivU2jwMs/+UNrVezd/C6Mt840ynOXNxeR
FP2u/3NoZrgWR3y8ytpGkQrJgLYWaZTpIT6BdRUH6WNNpqVuP1ZMXLWa/xtR
IgTn3Ovw8WKA4O6fxsfPslGRUD0kfN6ujaR2yjMTSDIjx81MGbXmeleGYBgE
eLyPSl9ZZY0HMDTsNpuNZq+HEyzCSBRKC4xIiSwIVs7PWuMaUvv1vzs7qyOt
euMPZxxD0QACnzS61d7o5ILut+rEpAMhpQFe/u7k7Oj4m28uTrqh4XZexQi9
C3xFQaGa0zkedysIg4vkhNF4xmQJSSXIMVG+y6D6+19pXhH78fpgK4Z6vbxW
5SnTXc8vWYS8ygSH5HiY6ZxBmKADveblyUW3Upf9EcYOyPlEzZ6WVowFD8+7
cRmX19Nl8GC/RAOdc9bpbGkh/o0/fe/Y6/V1MQ1DVo05JcpCf3PFMbbNzg4D
+Tp2bSvORM/YqbEKa5SMS5b6/SsRkCep0RecW3f6XkINXjGJSg9chVK0v80X
opm6nhuajFq+nBJdynWjND6sX8SOKrpmISRF32XI53vMXU+z5+soUPQ8uf9k
+Pn1fHlfbObZcqzypB0FjmMcdf48LyheEZ2hHCR4Fi3JiqZeSdtD4E9EsAYV
k55g6xDDIki/RKkiJCr/+ByPROGReCEJxFAOc4NIyglrKTSH97U9Uhc1UrSx
5j7kvFBlSsuw0R4LIJM2omIIS7+IwG5v3Op0u51uq1MC3HCIcwTNIjQt8COC
oUoAOL88HcBf/Pp3ly1wMqzXjoYohE0G406z3WqOT1+DvdpliwOGw2Hv7Pz4
7FXl99+cnP7ykjKJ156HqsF2ZXA9+ZIgvq7BjQoMoRNGLaMJA1FcxGESoiii
89tX0Fy3k5un91fy2EDDeTxP8kBkVYBi1jeME+FlwFxcdjiEJ/ud5uWXR+2j
OoCICIGIus4+3S1W2vBQzBJx7aZT+aZP2QCLQTd3ghboqmqVZugbSDgvmT2K
PJn3FvOSAuylxMlA8K+h1r3HNrO9HCZhvFINAopsFNajtyQdoCjBpb+RkCTy
HE24wQdMv12fv5+zerSYqkN+ZfBiEvBEbqa8HDnKZ/9iliPesg3Fc9m1ork0
vMoHYTFP8zhfFg+7+eZukdL207W9vLu2dK7oGD4/285HVjfarifSytdFRCFo
Xi33e8/8GGaFp2cjfvgbWpSTmG+r3gNzUuPIPaqQXzx366yCk76Ti5Kzyf1d
pBNlD5K2AZrUb4YszQddiy+F0LixGIEAEQkugx7tA2UNh7Q66gDwsNXstof9
xqDbg6FxKdoogU5QEiYACG8fdQal8bW78Mk3nW6v96bTb7aHk/pRG5hgvWr9
4vX4/+foPZfkVrM1vetShBSKkDlmprtPm+3ITbJYPr0HkPDee++BBNJnZVlW
kZvbtDl95hjNTIxG+jEXoBsReP5WVVYi8K31rudJAF9enp/1wclgOLg6vfr+
1ydn337//u3pr99IM0ZTU1OAiw05NBgOByfz4Vc9YDxqkO9iIMFDEBvLHMpM
OOqSthtCqtaLxSMHMMJyfQyX3irVqwPsPjnSQR6O21cjAADRaWfafn/evoBg
bDr+nhiRy9DGqNI8eosdEIEPO/TjvZKtoXid5LKlk4yoOpKxXY+ooZXW1SJM
vYii3cfadjje13ge8f9rOec+nC2CyA2sWFMzSQwIUhZoymTxzpU6QAhwYWHC
p+CYSBfgGOA13g434OLIf6jesrWgPyniJI32QjvCybubTyXoSr5bq6kDC9ta
xh914J4pn1ONzpqDLB+iTx+P94WZ55K4ZrclC3P7wNneRa99OPpILDlEXHoV
PU7lU087nP3PwTLdWvcLi4k6ryM+Y/uqMrqNp99OzyY8+AfAlm7nrwljFS14
WFZKx90FkhLCjK8A6HDIEGTtjMMoBTXnZi0pJMdiJMnO58io1W2xLjaDIGBw
fXl60e+PpuMxhGIIReEkg89GPYyazrqvhgwGw6NeH+i+uxiMWtPB6Ho4gIbj
0ZgEOv322XxwdjYaj+f909OT96en78/e/vr3l3//O1WAPEU1tbA7v9t3eGkI
fDXGOieNKWJzlZ61YLjVHfUnPHn2nQjbvqSvAzPgsA8lo9IBJ6mr5fLu8c5L
Pu3TZUVg48ZCmyHVbZ1PvmwYPhhB8+vhb0jcmWCwDOhMtlg+zQXvTxVd3jlP
j85zGSZbgvTaQKbRgumgtK8ly+Uiu0sd349KzUplqCNICt2jCunH5VnTQEkU
hj5rWds9iBv21Cg8jL4QMJOZRIuZsbE1ho9YwcqpcDvP5fCD8+n+HAuNeKez
2GenDrGIBNabf77N87q8ydM68Mr1ckJ9Mumi3Nwu6nxTHWple/9Up7V345eH
et//fJO8yZ7Xtfm84bvSg7Zylc/fvcnLWD1Oyf+a+rveu6jwF/FSN6Q3f+OE
ExkQchAyLiG1hFssdeMktfU7wktXLnHVFl3HFuno1vIskWTX+0J09MP/WGkR
14vtuOZ5mKLRRrl4HIFmo7FskTg46revz07aw+l0AAANnKNUo2ogBACjCYkC
GDKV0AmEjvtXU2gym46g2RSAx8M5DIIzkgKm/Sk47M2hMdg5H16ct6+/+uof
fvsf//4rKhtAomrrF3kBsTZF88SUmoTK+1evx2wzd5oZ1eqNe/bw+5PLqYFC
KlxWRX0bYA8HmsCnw9dQvLq7/cvRefy4DmsLZyaj03dfv5l0rjtfaq0xFWwy
nOMU/syJ+VxgfSr0mo76fM+v6x/DuMofPdr6aKMzvvuVTms2qCQhrqRlqN9t
Nc7VIsrIcPVMNkwYEdDEofuVVDpa4qOeqXuaFLYbnTKTQpgueHEOcpKjD0lL
tna0LS1899FUMtNtOENayLwfb3PpGcF8i7DEyLtdr1a+kfqFpyVZ4qfryEma
pqzuV4Ef+RG6quPNKk2eonTR8bY/h4ex9DOfG6v75WmvPD6syZ9QyGGp7a61
+M+uuVP+J0Tgy7UEk/zbE0EiBa2DmyRV5X7FznFYs+3leBrppcdKHDiWXdOw
vLViGgFErgOHyKLFX/6CIgNeZ82nSpwjNIIzpA1DGDSBOAmbTa7bV6dn7YYC
xsMZCEAwjoIoAvZ7IAih+BynG7eEW8AcmLfaE55pXvf2AkFm2KzJf6LxiHl7
MG1ocDSa9rq96ck3//A3nfNvztgBxaiaIPnX4zrhaDkGhobnpw6PdAGUZr+8
giTB05Prt6eka8kzCcQXT59XuOCmEDq8OvvDtVx/evrh5Ze//rJR7g2k+/b7
k4ZE+r3r/nQ8wWEchJjp8Eoincesov3cJrc64qiJFj3e/ukWsH841Npy6/Ba
Af6NFgUBb+cRLEeuuFgIQdVYeCrEkmInEivRN9AcnNoHrSH4Ki6rspSQ4w8d
p4bA2GUsWWjICqX0OLO93KJ0JnjYeIe0iNJDGMalxIub7cIrU5yGI7qI1GKt
ZqGW8AhtrhZBZtX75Acj2+9urCQo0oc7fyyF98htZWX3y4u8/qstTZhdbsRe
LP2vsJ8c9mSVmnDNftOytX9MEuPv3zBw0MpvOR645OW48oOz3+WNvW4dhXsa
guHcpvwft2YmCYmqXlnr0fbxEZcpXGsWC6c44uj+9jkdGS/fz5r5RcMgSmlz
ipPBfnfQpRtmvz6/vjh53273h+MeSFIwTFJTHJmOQWQEziG8P9QEmIFJBhyO
Rpf9GUwhZ2OwN8EgcIYNXvfaYGswAkhqBDd5ArReX7x/9c03aHvMeFE2nxEO
juvLvMx1cDSTRMzxMGOEDt+d91EU6l++P7kkzBHlclN+jKkPHyTadKRe9+rN
GRE6abn54y//9N//VC0tQee+f9XuDgYNcIzHIICQ5HQENN6BW7yRV1ByZ6qF
CHaVnFj+5ZdPd6F+c39rsrQmaMz0zSJzfY3w1zJh8LhVmU5uR5rD2E6QO7TH
YqaMUbikWkZsOKZX1QKmpt50lZAMcr44qDLHsQiKuHs3y0uLF+5S+Yftxg50
RybcjHZk19C1TaYYkuDpa3sW2HVtmTFrY3Es+3deuZTUPX1wJ2K2XL7ky1Ns
o4bbON7erj/92buJ/d0V/dlUY/xbrC7NNN0eAn356bP7tz4b3nNff13wTnYJ
P8VX3S/PMrpq8I7Yp7JTLwXD5hmJ861/yS3NwsQomrT9u1c3BSF60zdX0dJm
Zx9PO4+/qh8xOhxw64fSFElJYYLkf0Nm7cb7wAnUuR5cXTb4174ejSCeQQGE
YlEMR6ckNoLnc5i6wgyIkVgMvOhQ5PBkoOEtHLgYNN1P49BlazA4/6IMTR6P
MHJ89t3J5X94C7URWTXdWkC5GWZIiGrFJi8iVyKBGyiz0Pj+q3ezSQMTIG1g
IW25YJtgVot1hbOOSLYvL0HDcaPIN5fFp59/iQvFSPwpQE16vVbrqjNqgms+
RebXk96MxDDdSYr5XYaLmdIJlPrD58/Pn550pZig/XOIpnqz4iVLUnWe2AAi
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
GB9Ekh3uBi055OIRgzVyB1UQ5TGs27psds/Pi42zQvb163zl7R+y6TfHb99c
HF+kLvP1k29eHZ9enZ1mrl4epM6qEAxy7X7x6qoFI4zF763UM4XNdDaez+aV
DKIIhY4+Gg9d3993noExnXurSPo2gWa3a3V5P10Obh8ttW/tmf0+mEaW5+Ex
JCdNzv58ClkVRAiMgj8f4/n52UwM1ZLHk5X9W5vnu8rCDqnpze3d+DaS3rPS
QzjRx5O5KuIa565VAH23bXqfJJHfjLfdsRPcuUpLopLBno5PebrjdGntWPF5
uTb/vvyHI5Ap58pFhKN5K93gwU2vfquBFSywrxWKq/s7YDc6Lst4ty6Nhrbx
ZzNbVevvo7q6MgC5fip+G3F0p6xFCW+6jKb1GECVQJj2pri1JISq9f6/b0dP
HyfeVh7llYjqLR5HY9EzUKRdyKOCAea+Zd7c0Ja3h/JEpqT3xovlnf+8Gzfk
j4aCHEhAKi3AAEv3uufVQxpvAq1U1xKcoU6ERDq7C/t8hejRL1JUOfPf/eHf
Hbz+w8uv3lxlsj2SwgMZgQpYpa6MevhYj2He0SKkEs045+bux7VgGMFANWOS
hY9P0rhIKA6ON+tIJ3OQKbRPD56fN7tXqdzhy1evDy8Pj47PU+n9rB9dvjnP
nr09ePn8ok1htGiQhWK71iAMvq/3HIuPNqPV+lpvAT0rwLP1IEEMxzSaNsuF
2rs73zOGzoBy7rY7bpPgg/e9/k2kqOPPt909wd2y3RC9lstc9wDoNHEMoRiU
5ikMxGtIoTM2+W+qsLDyXTF178QtbjFZJetfxq9DYrn7y6cP1pzDJT3eLiHl
oz/9lrQjO+bB3WyoYHOkgU2n6tDvvqHJFrV18DSnAK3vdpT/7zu37d9xuNaX
55Z60MH/Zmf/NMxSMlxDkX5MWnsfTE4VA2KtwWroAjcGqBh0AFU/mA3Sz7zy
ri2YrhYbuyBgHMJtV0hrOaA5yNbXjD5iaUbFj2sLlfZjclxkDYpsaCFHj3zI
4puwW6xx5nu1wDBLuj+gE1PxF6Tgbnwuw+OM58mZo2uwBaU0GNDaxcxZ44rp
IGXDOEdbgcIowiG3QgW+xyF7EzOZfJbBO90u0CCAN/90ZbHF2NpPUOlUHhqm
w3JJSwndjdymNC55fPf4aFPbdw+cELkWeXVy1eYJXeBtG2kxVvb5JXDy4qRf
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
8OMurnQ7bdwEOYehNU+QLA9qAchQjUTO9opKufD9bDJ+9RD4h2+8u2/OjICS
3G5dlvvn62ZbnmbDxJv+Jrx8f7V4uUxv38/XsySgp6++nLinXu92zjsqprVw
aORoZBvOoFaTEqUVUhk5qgsx+nhfqkKRnKHy133ycGby4+uxNhyMzq7nk/mo
fE/kySo9nCiBubTEWD874XkqQ7WV26geNwk3Cg1babJe0o9SMy+OojvrcgLJ
U9YxulPYNIXM5Zu+gtL96pYus3Tm2cTBRuP5IDWUeiW56pxe+R7G2MuX0tgE
mAtD6hxU6OPG6N32x4UyWCkTQl/DKM5U90qFn46UfTPtuY0589T2PcuVFjOD
U0TVkG4zL/Cz3DEX/pBsljr2MeanTDlJFNLhml2A0RXNSsxjMm/4hDziu+Yq
rgLoqEOi91eB5GqSZtEgR2HkERnylG4QBl9oPivtVBtgASU6h9a0xAzsftab
Ttg/gGVPidh2R59NRqCRRJSUiNZquWL5yQiunfHMBRff522rCbK0CLGtAsMX
nm48JainD+4/K9Vq5cIW2IHciGJo+FnhQV1tIXknoSJb9lKGJhqNrSLV+2Fh
PG4eeo8fcGeLPs2fehd0U5lMEm2wCBWFMtFpAxBCy3v9mln6ydsXo3hxuVq7
Y/PvvzitkS8zddDLgvcvbAVgWpRS6EZdEpJsFjVN70X6sHNGwBwzVJuf8LIN
M413C09Fl1ToVBw2XL9/mZ/+CDvUZv1+8382B4rcT2ZTBwhtTy4rq9NVypQ2
McH94X6gnoUdt8OEIwOVYoYrxFYiiwMKxTLU7nK0wZMk31gv+F0Qbfk/XHWs
P/wQdXYn2KeNN9fi63cLtzvrCXm9tiSX4glSb4rFP0FGTx+3unu7VCvOVJVh
V1Gj+uhTm/RiiMGrXg6hkp5NLD/wXZ2ZD5YL2SLMeWTpTizhuWs24A0FF+Hg
wHPLChPQgKS281jSUtsPNS5imJss2myXx+fppxXV0kRbhDWa63RtpmI6DMu3
UbyGaH+OMcco3CrUKyjD5xMSeXEUDLxPwBUsY2yEMv1B2G4wsKHlfdPtIoHq
lvMQorsXffGxkAQHKAR1ILnapJP2g92D7fKdv9x5Wqi21VKeuSKoQuUyWjW3
73AqrkU2o/u2JSHMcRFEdkQ3c6VeOFpck8TdnUief+UqC2uN75qqYub7YJAK
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
gKXZ7hxCzuI971EZSArA+44uvbi5gt2vwb0nu3s1qlqutRhLgHW/+upbwCqB
xAMJrar9/kE6koTdUctrf425l7uZNQKi/OnYcnAS+rvjMgg4I+aLgQ5T6YzW
KtWMrM6nkIwPSklIBAWieODe+69egXSSL2eVdAImBK2Sb9UrpU610GlUzG5d
LfIiEQDw5NKla5euzy1dAqA1J4p5Bc4JZikM9ri8vISzWjglhwIhn5eWJca3
fjeYyxGbb6eTMJRGN9aXbCQTWfrg4tVLU55mncsz/qgbpd1v/uzSJe+bi4VY
UNFs6yU4kiEhAgjcnXn9zet3bMtvIazTYp97fTmYXl9zJzlHavXd7sMR/E5+
5HzpTfdnX9S36iVeyi8Oz5jpRP/B2f37u1tlZygUwgL1g8rcSysNJi5nRbSo
KmrdOXU6BH702gKwaocWX1+8esUSXt+8eF3x+obDej+fsE154rdbhULMrRTV
0jC3HuZEx959yyZR2i6mwCKeL6GrwPZpsdJRE+mqFPLdibdcxoshevnPO71b
B/1i5/xmFjQ7Pvvss8Hx3mH68vvLoRTeR1dW3n5F+5fHD7ejP742+tOnk0Zo
6r2fXygc79X9zVasOSDnD/YN6p7ZZlQlL7DxazP4zla/mZOikO+Nu/PzECNr
Jw2OZou9Djp9ZdYCIkBRwpds+EL1Xx/X9LwQmHnr3aDqDncc2j+pb7xMZePW
cDH/uCi4Oc6xRPB8q6qYlUyUTTWFNMPhTtfGw0+MiCvBOy5SHrvV4stlRFlV
tDQnEonysNJoCbgo/P91fQV7HGeW7o+4e5+7u7PPzM7cyWSSTGCS2E5sx2xZ
tmwLbTE3MzMzVjMzo7pbrVaLmcGSLTtmx0wxMya5pWR29z4XTldXdRd9X3/v
e857Tktd5dPY7cZsLuFy+sMgQag12/ZW7qxBAS6ZgCrk80Vis0GmtGSMJBwL
RuDLXVYB3aGXurQ4bLcKBcEo6VQmrbHaoCRqQg4mXmi0K0UciUyu1wFKLh/f
DCZkLFZLp0WsFQmMeo9doBbha7/4cHsJxLx289oxfX7auq1GIgUQMrZbJ2lu
h7U4CoXEoMueFh/cWsbtvzA63JdLjDKcCx6OeG5yaqrXzebJOQxWJ7yMq26B
ag0+gMzkAmYXlaRh1EPx9TytBotR8dxIGBqy7+s9u1uRMJeIYtRQibojJCKR
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
ubfsfwE0m+cK
             "], {{0, 256.}, {512., 0}}, {0, 255}, ColorFunction -> 
             GrayLevel], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "Grayscale", Interleaving -> None, 
             MetaInformation -> <|
              "Exif" -> <|
                "Software" -> 
                 "Created by Wolfram|Alpha. Subject to Pro License. \
www.wolframalpha.com"|>, 
               "Comments" -> <|
                "Software" -> 
                 "Created by Wolfram|Alpha. Subject to Pro License. \
www.wolframalpha.com", "Creation Time" -> 
                 DateObject[{2017, 10, 30, 13, 42, 58.}, "Instant", 
                   "Gregorian", -6.]|>|>], Selectable -> False], 
           DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {512., 256.}, 
           PlotRange -> {{0, 512.}, {0, 256.}}]], EdgeForm[None], 
         GraphicsGroup3DBox[
          TagBox[Polygon3DBox[CompressedData["
1:eJxNnHf8j9X7x9/3fbf33koobaRERBSSZCRRiIRkFtIgIskomRmVpkppT1Ha
S7u0tZTWt720/M7zd57ncffH+V7OfY1zrud1v9+f8Pra87TBHQbllUrlng0q
lSLY8eF/2FcNq35YO4e1S1g1wlo/rBBW2bMSY4jfy2cbhlUzrI3C2jis/cLa
NKzNwtpbP7599G8S1r5a4qpZb72wJoc1IKyBYVX3GWcfENbmYW0RVt2wtgtr
+7AODmtb97XC2iqsrcM6RP8OYR0W1k72Uy+sHd0faL0twzpIS/6h5hG3v31w
dgN57BpWw7B2C6tKWG3M5/zD9eM7Ul70Nz00eGlYE8Jq6jP6O0q+sGwhRzg1
04/vaP2wbK4lrnFYezivJlrOa2kNGB+jZSbHe8faYbWWKQyO09JDW/11tLDc
Jqx2PoN3B2cA41bWhtOxWuq2N5a4E4w91BrbOLOOPmMmJ2qZVTd7o6euYR3h
vrMzgHF3/TDuKS9Y9qhEvuyHeA/u20uO8DvVPOK6WI95nqxtFNZp1iPndPOY
Tz/7hF8fWcO4rxYeZ+qH61meD4P+PuN9Geg84D1Yvty1t+dQd4CxxA0ylrgp
5vPsbGvDcpx3pcYIedHfSZX4eYbdOe7xnR/WKTIeJVPYjHQG7Ds5E/LPtR6c
LjCPuKGezwyHackbruW8C63NfC6R1xlhjZcj+7HOiR4m6If3xfZE3CQ5wuZS
/fAebW3ehTFaZniRlroTje1v7VbO8jJZMod3wno4rCVhTbc3eppaie8T87xC
C/ubvQe1ZxhL37NkzRxma+E3J6zzZD9XC8tp1uO8mdYgf55+ZnKVc4LldfJi
5tfYP30v0NL39frhd4MW3gvly72vth75N+pnPjdpiZvv+Zz9lD5q3GLfzGRR
JX53827eIS843eYzGN+uvTysW80j505jYXC33GF5jxYe92rhep8Wroutx3kP
hHWljB/Uwvgh7TznOl+Wj2hhsFQLy2VaWF4rS1g/+p9nT8gUZg9bm7rLnQ3s
H9cS95h5+J40D45Py5L36J0s1AprSVgfWYsaL8gRfs/KHX4v+gwGL8kdlq/K
EX4r9ON7Wf9dYb2iJe456zHD57Wc95o1YP+6FvbvyhF+K2UN47e18HhPP1yf
sT/u/b7PYPyhTGHzZlj3O8O3tNT9wFjiVhm73JnzeeUz+bGcmMkv5nOvT3wG
7y9kR6+fVeJ7DPs1PqPvr2QN129lCrMv9eP7Wj9cv9ESt9p69Pq5lvP+Zw14
f6dlPr96R5j9FNYbMvhZSw+/6ec76VP74N6/+4w5rJU1XL+3NnP7Qcvc/jCW
uD+NhSvz5zPH5+0vnzGTf2TNO7hjFvM5J88iO3pdJ3cYF1l8Rt/rZ5E1XDfK
IlOYrZdFP74NsuiH64ZZtMRVsliPXs8Mv24d1nFhZVl8xtmbZJE789kmi7yY
+dZZ5Mh+8yyyhse2WfTDe4cssqOf7bPIl/2mWazHrDbLoiV/uyzmEbdxFvvg
7J2yyAOWu2SR3d9h7Z/FfM7fOYt+fLtnkRf97ZrFWBjvkcVn9LdnFvnCskYW
OcKpqn581fTDsrqWuN2yWO/fsKpk0XLeXtaA8d5aZnKAd9wirH2zyBQG+2np
4aCwtgxrK+O+952q5TN418niDGBc09pw2kdL3drGEnewsdtZ40ff/bo+YyaH
aJlVQ3ujp8Nlx/6wLM4Axo30w7iJvGDZOIt82bf1Hty3qRzhd4R5xNW3HvNs
oOW8I61HTjPzmE9L+4Tf0VlkDePmWngcox+u7TwfBq18xvvC+32gvI/PIl/u
epTnUPdYY5lbG2NrOeeP/By2tzYse3pXanSSF/3Vy+LnGXYnusfX2Z5hfIpM
YXOyM2B/qDMh/yTrkdPFPOI6eD4zPEFLXkct53W1NvM5XV4twuolR/Y9nBM9
9NYP79Psibgz5AibPvrh3c3avAvdtczwVC11+xpL/t9+5/F91995wPj+sGaH
dWVY4z2DvLPsk/4GZfHdYrZn+4xeh8kX9iPkC6eh+vEN1w/Lc7TEDbYe8xzg
XXgvhviMs89zNsxqjPOGzWjZsR8pCxhcpB/GF8uUfsY5A/bnW4/5XKAlf6x5
xJ1rH5x9iTyYw8Qsfl/Db575nH9pWP30XSYv+ptkLP1d7jP6u0K+sJwhRzhN
1Y9vmn5YTtcSN9l6A8OaouW8mdaA8SwtM5nvHUeFNUemMJirpYer9F+ohSXv
0dU+g/cCZwDj2daG05Va6l5jLHHXGjvWGqc6s+t8xkyu1zKrRfZGT7fKjv3C
sCbI+Db9ML5DXrBcLF/2y7wH971LjvC73TzibrYe87xFy3l3Wo+cu81jPg/Y
J/zulTWM79PC40H9cH3U82HwkM94X5Y4D3gvlS93vcdzqPuwscQ9YuzVzpnP
B5/Dx6wNy1e9KzWelhf93ZjFzzPv71Nh3aTvWXuG8Qsyhc3zzoD9Dc6E/Ges
R85z5hG33POZ4eNa8p7Qcv6L1mY+b8iL75vX5cj+FedED2/qh/dr9kTc23KE
zVv64b3C2rwLL2mZ4cta6q40lvwZReAa1qSw3nUeMH7fefDu/OIZ5H1kn/T3
gX5m+7HP6PUz+cL+C/nC6dOwntS3Wj8sP9cS96H1mGfLPPycDWvfsFb5jLO/
dDbM6nvnDZvvZMf+G1nA4Af9MP5ZpvTzkzNg/5X1mM/XWvJ/NI+4NfbB2b/K
gzn8nsXfv8Fv4zzmc/5v+vH9JS/6+8PY98L622f09698YZnnkSOc/tGPjz+A
/USWWR4tcWutx9z+1HJekccaMF4vj5aZbJLHO34b1oZ5ZAqDjfJo6WHTPPr/
ZxwseY82y+MzeG+RxxnAeP081obTBnm01N08j7HEbZnH2B+t+7Iz2yqPz5jJ
1nm0zGqnPPZGTzvmkR377fI4AxjvnEc/jHfLIy9Y7ppHvuwPyOM9uO8eeeQI
v13ymEfc9nmsxzx3yKPlvN3Dr9fJvqp5zGevPPYJv2p5ZA3j6lp47K0frgd6
Pgxq+mxj32/mAe/988iXu+7pOYWfg42N289Y4o4xn2cHWRuWTbwrNermkRf9
bZvHzzPsDnaP79A89gzj+nlkCpvD8jgD9tvkcSbkH2I9cuqZR1wtz2eGtbXk
1dFyXgNrM59m8qoRVlM5sm/snOjhKP3wPtKeiGshR9gcrR/eh1ubd6FRWFXy
OMMjtNRtbmxNa6/vLFvJkjnMCGtYWMPDOt7e6Kl1Ht8n5nmcFva9vAe12xpL
3+3zyJo5dNDC7wQt7DtqYdnGepzXzhrkn6ifmZzknGDZTV7M/OSwGtr3KVr6
7q4ffqdq4X2afLl3Z+vBr4d+5tNTS1wnz+fsMfqocbp9M5M+efzu5t08U15w
6uszGJ+hPTas3uaR099YGAyUOywHaeExWAvXIVq49rMe553lMxifrYXxUO2J
zrWTLM/RwuDcsLrI8jwtLLvKEtbn/+fZhTKF2TBrU3eks4H9KC1xF5iHb7R5
cLxIlrxHfJfzc5ifwfOtRY1L5Ai/cXKH3wSfwWCi3GE5RY7wu1Q/vkn6B4Q1
WUvcxdZjhuO1nHeZNWB/uRb2M+UIv2myhvF0LTxmhzVCrmPtj3tf6TMYz5Up
bKZamxleoaXuHGOJm2fsSGfO55XP5FVyYiZ3ms+9rvYZvK+XHb0uyON7DPsb
fEbfN8karrfIFGY36se3UD9cb9YSd6316PU6Lefdag14L9Iyn7u8I8wWyxcG
d2jp4W79fCddYx/c+x6fMYf7ZQ3X26zN3G7XUve+sGYZ94CxcH1Qyxwe0sL4
YS3v4KPyor9HZA3XpVru9YZncJfHjIXB43KH8RNaWD6phfdTWrgusx7nLbcG
+U/rh/ezzgauK2QHs+flC4MXtDB4ST/vxcta2L8e1r3e+znrkf+Kfti/qoX3
M57P2XuF/27eIKwNw3rTvuG6UqawfE9ecHrbZ3B9R7skrLfMI+d9Y2Hwodxh
uUoLj4+0cP1YC9d3rcd5n/gMxp9qYfyZFpaf2w8sv9DCYI0Wll9qYfmiLGH9
1X+e/U+mMFttbep+42xg/62WuK/Nw/edeTD+IazXnMmPWt6p32QHs5/zyBpm
v2jh/bt+GPyhhf1fYX0gy3/kCL+1+uH9p5a4X63HeX+bR86/5sF74yL2QH8I
GD6RcVZEC+O8iBYeRREtvDcpYh481iviM9hvVESm1F3nOdTl/VrjHHjPvpT9
+kXMW+O9l/mubFrE2sxk9yLW4o4/yRJ2W7uH5Rbh19/LfpsiPoPrdkVkAfsd
i8gUZtsW0Y9v+yL6Yb9DES1xWxaxHjPcqoiW83YqYg1471xEy3z2KOId4bdb
EecE7ypFtPRQVT9cNytif7w7e/oMxtWLyBQ2uxSxNjPctYiWutWMJa6GsTDm
c8P3HN9re/uZZib7FHHezK1pEfM558AisqPXffXD/iCf0XftIrKGa90iMoVZ
Lf346uiH68Fa4vazHr0eENbmnneINeB9qJb5NJQdzOoXkS8MGmhh0Eg/70VN
+6O3I3zGHJoUkTVc61mbuR2mpW5jY4k70li4HO453KOZnGDcyXzudZTP+O48
Rnb02ryI3LnXsWHtb9/HyRqubWUKs9b68bXRD9fjtcS1sB4zbKnlvHbWgHd7
LfM5yTvCrKN8YXCilh4666fXo+2De3fxGXM4RdZw7WBt5naClronG0tcV2Ph
yp9583cI/B1DN58xk1NlzTt4urzor6es4Xqalnv11k/ffbTwPlN2cB0gO5hN
lPsZYfXz18T1sh7n9TePnIHmMZNz7Z+eBssXrkO0MDhLC4OztTA+zzyYDfUZ
vEfImrqDPIe6w4v4PjGrc7TEDTMPX3eZwet8a8MYLRr6KXRUPWQJu9FF3MNy
ZBG5U2OMz+A6Vhawv6SImjk0WBfpxzdOP+yvCGuy7EdZjxleqOU8vpr3rET9
Vtj+vzaMPVq5fbwrOjs0YOjBNvTu7JOWjrgL7I97o6vbTx/aNTRZaLPQ01X3
jPWtx34z/eSgiTvQnKSNY482rpZ7dGG13SftF3oadHNoutB7ofFCA4bmCy1d
PX3o8NAToStCJ4fmCg3WTj4jDp1dA+N21c8enV9d66JbQbOBhmN7z8THPNCL
HVEpNXNJQ4c9yv6bVqIODL4tjNvPPpJuDtuyUmrsGjubI93vo598tH30UkV2
reUCL3Rcx5mHDqp7pdTetbYf9F/tZHq8OfTTQR/s0FmdIBd0VZ3s+wTjkpau
oyw7uWdWba1bx3PayrSztWDcxT1senhXekbn1dWeu7tvVok6K+Kqu28q39P0
wRQ9V69KqbHr4myod4oz6WUOHHubU8NazWTcR1/S2/WxB7RbSU+HHSBTtF79
7HWwcXBCZ5V0edghnj+2ErU+Scc2VO5DzGdW/a3bxnP6y3qodZPubZj9od06
X6ZowM6x/3Pdw3GkcfQ8znvAeJQ++KLPurBSatrGOLNzPO9U/aMqpQaOnKRp
4O/1YXexZ5CDnmqG/aDjQg92rMyS9o5nE+wVrdYkWaC/Sbo5LBqvVub1lcsk
6w7UP9mZjfcexF3i/gzPuUTeUz0DrRw6risrpZZulny5+/RKqaWbI49Z9gYL
vhvmy3eecUnDN9WZTXM/1HrT5D7fnFM84zyZog3jewdNENqVNcahe3rIftB3
3eAsr6tE7VfS1d0oVzRRC+WC5upWGSw0Dna3GDdJ/y3O73rrMucF3inp/K6v
lHq72yqlfi7p6bB32zN6sDsqpa7u3kqpmUsaOuwDzmOxdaeat9jZ4L/fOd9m
P/BbIpeksXvEPDRTKyqlDm+J/SyvRI1X0uEtrZRauuWye7ISdV1wQWf1tH0/
YRzsnjJuof6n5PSoda/1nEdl+qy1YPyce9i87F3pGd3XC/a8wn3S0hE3zf2d
8n1VX9LPvVYpNXbPyekF9/fof1WOaMDQhE231l2VUhv3pjNZ6Z4e0DAkrRz2
fZmi+3rHXlcZB6dPKqVuDvtRpdSNfS+vzypRd7Vc/ypn9Z51l3rOe7L+1Lrw
Xm0+/aHt+lKm6L8+t/817uH4tXH0jCbox0qpsftavnyXfSsj7vhdpdTbrXZO
35qT9HbkXOS8F1RKjd1P5qCnQltFP+jC0IM9LLOkvePZb/aKpmutLNBcJf0I
Fq1X0kGulMta636g/09n9ov3IO5X9297zq/y/tcz4ISOK2nrsGi/4Mvd0Ycl
LR1x8MBPb7BAh4UeC75otIhj5us8g5mhQ1vnDKnHHu7kkQNXfoZQC67ox/i5
8oJ/Z8jf8dED+i60XswPjRcaMlijAdvKWvy+Bo0UfaL7IgfG6IvQfsELnRF7
+KFXYg87NFrsYcc51IUZedSCMdot4mCHXmxXZ4yOq6p9ovuqYp/ov3aXVzXj
ksauWlbq59BiJY3dbs6jhnEb6GfPu8CZ3ANNDXqS87JSG1czK/V2+8oFPddB
Mt1fH4wPcL+JsfvYc21zYIfuq47913WftHR15Xio+y0950CZ1tMH08Pcw66+
e/pA39XAnhu6h0Ej97A7wn0m4z1cjfXBCD1X06zU2NWXNbqsJrJu6r6qzxrL
9CjzYXy0+6S3O1pGaMFayQg9WAuZHeOentF3tZZBG/ewQ3PVVl5orNrL93jj
aus/3tm0su7BxrbLSt1bh6zUn3WTKZqvjjLt5J7+T3IPj87uk16tu6y76Gts
va5Zqas7Qe68ZyfLuqv7hj4jfxv7rC3jHp5BDTRUaKpqyixp8tCFnS5r9GM9
5dhHHwzQf/WVEfqr/nLpaxys0X/1k3V/98ysl3Wbe04v+Q60FrwHuYfXMO8K
X7RgQ+z/bPdwHG5cM+/bIys1dsNlgS5rhDMb7BntrTdY1iPMgd955vAzBy3s
5lmpkzvfOaEPG2keuqdZ9obWa4ysk46MPsfqgyOaonEyQn81QR7jjIPjeOPg
eol7ehtt3Z6eM1q+E60F70nuYYSOa6o9o/uaYs+Xu4flNOO62dMFWam3myZH
NFkznNNkz0jau8nOYIY5SXs3U8ZTPS/p5Gabh8Zqkbzn6KM3dF5XeQ80YHPt
8xp9cET3tUBG6Kyul8cC4+B4nXFJY3ed/c237ijPmS/fG63FPNCI3SSj270r
PaP7usWeF7mnt8XGJU3hHPu+Qx8c0WHd6Zxu9oykvbvZGdxpDhzvNifpk76S
8T36kvbuXvtBF/aQHNGG3e89HnRPn0uMo+9H3MMM/dUyGaG3ekzWS427Rv9S
+3vIutca+2hWauCWZ6UWbYUc0X89ac9Pu6fnZ9zD4Fn3Sbv2knyf07fYei9m
pcbucWfDf5c87wxedL/IZ+TPlNM9Mn3FM7gTeir0VbNllvR5aMTeMAct2aty
fEsfDNB6rZQRf3//rlxWGgfrd4xbov8d7/K6de/znNfl+7614P2Be3h95l3h
iy5slf1/7B6Oq4272/u+kpV6u9WyQKP1hTP70DMes96Hsv7CHPh9aQ56ATQa
6DOYA1oy3stf/Psh/j6DHtB0/WANNDbool7z2feyQ1P0k1zQXyVtHRatEVoT
tBloKt4w9keZ/mI+80s6taQ/4zx6/k4frH/3jKSfS3o67DrZoR37Jys1c0lD
h026PCz5zPAP6zKnte6TDm+t7L/3HkljhyYMP7qqpHHDoqMiDv0X+i54E0s/
9MAztF/wQ+uFnoz+0VYl3RwWDRZans6y43xiqQs7/OQzM3Rl3IkZoi9jD0fO
YQ9jdFucgU4ObVXSzWHpgZ65O3ow2KG9Io736S9ZwAs91x6yRouFNos5o0Hj
DGaDrox90uFt75zII4f38m/rrnJWfzuTPT2Du6PjSto6bNLQYWvKDu1W0gZi
k/5uf/M5E71P0o5hG8kXfdZBzgbtWQ3nurf7jTxnb1kf5HlwQseVNHfYQ+wf
nVcd34nDjKOfJt4Dpoc7W7jXNy7p7WrJlDs2zEvtXW1n1sAcfOiauuhHT9XW
fD7Tbbw7uqzm9oNGDA3Y+vZaXUbouJIOEZt0uy3N53NTzdkkfWQ1uTS3bg1r
NzPuSHsmrqn76vqb5qV+LunpsEln195+4MJ3xon239be6vmsozOh1+Oc+bH2
w7vQ2n3S+bXOS60eZ2/n2Qfnpd4OpmiI0Ldcn5eas7PzUnuHDoz3qKs59NND
HwzQgPWUHVqs0/NSh9dDXr2Ma66fPe9HN+sm7dRUOXbXx3zQc/XJS11d0tlh
B9gnGrF+eam3G5SXWrqkrcMOyUs9X1959XOf9Hnkt/TM3rIfJpekvRtuHhqq
Cc5tuHH0g9YL3RfvK5qxEfYzUh/s0HeNkgv6qzF5qb0bKbvRxvXUPzovdX7n
Oo/z3cN0rLVgPM49bCZ6V3pGCzbenie4R1s3ybjj3J+Zl3q7STJFlzVFLhd7
RtLeXexMppiTtHfktLFWfxlP1cd8pjl7ekDTdaU10EEtsk+ezZYd+q65ckHH
lTR02Pl5qeebJpu51h2pf55zmmEcc5vpfoTnzJL1NZ4BJ3RcSWeHvdH++dxc
l5e6uoV5qWO7LS/1c7fK9xbjmOcCz2Bm17pPOrxr5X6rOeM984a81NstNg6d
1aPeG13YvfJd7D3oDS3Y3bJEu3V/XmrmkoYOi6aLf/ci/bsas429Ly+1dw84
szu9B6zvcj/dc+6S9xLPSFq6pK3DLrdn7r4sLzV2T8hgub3BC33W03mpvXvS
mT/iGUnb94hMl7lfaB45/Gzmu7iuTJ+1Loyfc580Z5/mpfbuJTmiAXvB3l7R
B2t0X6/JBX3Xm3mpw3tFdm8Yd7/+N5zPCuuiW0GzgdbiDs9c4UzQdq3MS11d
0tlhP7BntGHv5qXeblVeaumStg77cV7q+d6W3bvukz7vI+e80n7gt1ouSXv3
eV5q136X4+fG0Q+6sK/yUp/3hf18ow92aKK+zUv93A95qb37RnbfGfeafrRf
See3xnl85R6mP1kLxj+7h81a70rPaMB+teff3SddHXFL3b8n37/0wRRN1t95
qef7WU6/uv9Q/19y/NecZdZ6X8br9DETxBTr8lIzlzR0WPReSZOHboxe0UER
Byc0V0mjh0UflTRk6KjghQ4LPRbc8ZPPrNCUUZfZcA57WKPhoi680YaRT3/o
vPj9EkzRgqEJo39+/8Qejmi9iKNndFXcI+nt8MEXXRbvO4y4IxqtpL3jPOaE
n5ykvSMnaWSfz0u93W7moKc60H7QdqHxSrrGpMPjWVWZoumqLgs0V0lDh0Uj
lfSRFblUt+4G+ms4M3RoVYxDY7a751V1D+99PANO6LiSzg5bS77c/YCi1NXV
kW8te0v6uUPkW9c4Zr6vZzCz/dxvbr395X6IOUkbV68o9XZoyNAEoQ0a473R
cR1hDjqo9vbGs0ayRK/URBbouJKGDtvUudb3vKrGNpZjU/N5Pw73Hsyyofsq
ntNQ3kd7BizQcyWdHba1PaMXa1mUuro2Ralj61CU+rl2sm9rHDNv7hnMqYX7
pMNr4TzamQNT9GatilJv19E4tFSne290Yl2cW0fvcbjPOssSHdQpskBnlbRg
WPRRi3zf+R5tZOzJcuxmPnw7eQ94n+S+geecJO8ensHd0cyhneP/U8n/n3Ki
PXP3XjI907ikyestL7R0A2Tf3zhm3tMzkravp0x7uW9jHjkv+ecf/D7+AM87
VsZo8gYVpWYuaeiww4pSk3eW/Y0wDjbo55JGD4vWDz0Pmif+vSyYoZm7wDmc
az7zGWrdEz1nqHwvsC4zGWU+PaGxu8ie0eRdaM9j3MNynHGcf6l3mOxzeKIB
Q5tXNdjLjUOXlbR3nDctrMuKGDfLPZq+tnIaKDtmyDuJlm9mEc9hTfG8pGsc
on+K/tlF/HffOH+u9fljpjnGUS/pIwd7D+7Dj64ri/gOTXVxhzO0k7xPH8/p
7b2nWWO6Z+9eic9mee5Ua07UckbfsK7yPhebO0+mPJvj83n6dpfndJnOt1Zf
z59rDzOtC4v/AzyQknI=
            "]],
           
           Annotation[#, 
            "Charting`Private`Tag$5744233#1"]& ]]}, {}, {}, {}, {}},
       VertexNormals->CompressedData["
1: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
BvMTT/cVs+l+w4rjbL/BONtvnKf7DeZ/LLffYP616Tyn0/0G47l0XYvofoPx
09x+g/nn9xvMnu03aJyRs/1GGd1vCPKInMs7cn6/Me3HukLO6RD98PsNxvnv
wfbSvhpC6D48lX4PMu5K9+196Pcg47Hc9yDj/Pcg+uG+B9tRzn8PMnv+e5DZ
89+DHSh/Q7+DOtHvQeaH/x5knP8eZJz/HmSc/x5knP8eZJz/HmSc/x5knP8e
ZJz/HmRx4L8HmT3/Pcjss2ncVPR7kNnz34PMnv8ebPfjPCLnvwcFOgGBrkCg
Q+T89yDjb+i5h4Ke17lK5x6whZ6TuNLzul2U8+d1zJ4/r2P2O+i5TUt6Xsfs
Dek5zzx6Xsc4f17H/PDndS6U59NzJy16XsfsQ+k5VTQ9r2P++fM6Zs+f1zHO
n9cxbs2d1zHOzuX+pOd1jL+jfA89r2PzmUX9aNHzOsYd6Lie9LyOcf68jvnn
z+sY58/r0J47r2PxZOd1Cnpex+z587pdP84jzpPLOwh0AgJdgUCHaM/pVsHs
+fuUDdK5NLBzbF16n8I4O/d+Tu9TGJ/E3adspPwId5/COH+fwvyw+5S29D6F
2U+Rn/MTe8p/5u5TNlHux92nMD+LufsUxmfTe4pgep/C5sPuU0bR+xQ2LrsH
iaP3KYzz9ymbOD6S3qcw+zLuPoWNy9+nMPs5dJ736X0K43bcfQrzw9+nsPX2
5O5TmB92n6JF71PofQfslecF7fn7lA0/zjuOy+kEOacrEOgQOX+fwrjgvhv4
+256/wj8fXcY5fx9N+P8fTfzw993M3v+vptxU3oPW0fvuxnn77sZ5++7Gefv
uxnn77sZ5++7GWf33SH0vputa8uP77uBv+9m9vx9Nz8uu+9mnL/vZn74+27G
j9A49Kb33Yzz993Mv4E8zsgF9918HkGQdxyXv+8O+7GukPP33cyP4L4bWF2H
Sl6PBKwOxIPWI32knNWNNKH1SIwL6pFAUI8ErI5lsLweCabQupcu8nokuEfr
ZPJoPRLjbvK6GuSsHklB65EYr6F1O/byeiRg9UgHaT0SWxerC4qS1yPBK1pH
pJLXI0ENV4/E/NRS7kPrkZg9q0cqkdcjwbIf1yPBfTrP/fJ6JBDUI4GuPA7I
PeV1XMDm6SmPM9pPoHnpJq9H4vMIgrwjF9Qj8brC+XA6/D5PuW4VGAdad+dO
60Vjpbo74OtFGa+ldX3zaL0o4/25elFa7wcbaN3gRlovGkP5XVpnOJHWizL7
27QucSWtF2X+b9I6Rid5vShY0LpHpbxeFFi96ElaL8o4qxctofWijFvTOswQ
Wi/KxmV1m2dpvSizH0nrPA1ovSizZ3WhbWm9KOMPKf9K60WZn1HUj468XhR8
uHpR5mcOnec9Wi/KOKsXLaT1oowbyetmkdvI44b8tDzOOM8b8rwg5/IIgrxD
zI91gvacrkCgQ+ScbhWM9+Lq+WkdNWTTOupkWs/POF/PT+uoIZjWaUfQen5m
b0frupfJ6/lhH60DnyCv5we+np/xNVw9P+MfflzPDy1/XM8PrJ7fntbzM96J
1sm7yuv5gdXVr6L1/Myer+dn9qxufwCt52f2fSnvLq/nhxDq57K8nh/603Ht
aD0/s2f1/M60np9xU/k7BeStuXp+5r8FreePoPX8zJ7V89vTen7Gw39cz8/n
Ef1zeQeBTkCgK7TndIj2nG4VjAveW4HgvRUI3luB4L0VCN5bgeC9FQjeW4Hg
vRUI3luB4L0VCN5bgeC9FQjeW4HgvRUI3luB4L0VCN5bgeC9FQjeW4HgvRUI
3luB4L0VCN5bgeC9FZ9HEOQdBDoBga6QC95b8bpl761A8B4WBO9hQfAeFgTv
YUHwHhYE72FB8B4WBO9hQfAeFgTvYUHwHhYE72FB8B4WBO9hQfAeFgTvYUHw
HhYE72FB8B4WBO9hQfAeFgTvYUHwHhYE72H5PLL3sHzeQaATEOgKueA9LK9b
9h4WBP0KQNCvAAT9CkDQrwAE/QpA0K8ABP0KQNCvAAT9CkDQrwAE/QpA0K8A
BP0KQNCvAAT9CkDQrwAE/QpA0K8ABP0KQNCvAAT9CkDQrwAE/QpA0K+AzyMI
8g4CnYBAVyDQIXJBvwIQ9JMBQT8ZEPSTAUE/GRD0kwFBPxkQ9JMBQT8ZEPST
AUE/GRD0kwFBPxkQ9JMBQT8ZEPSTAUE/GRD0kwFBPxkQ9JMBQT8ZEPSTAUE/
GRD0kwFBPxk+jyDIOwh0AgJdgUCHyAX9ZEDQ7wsE/b5A0O8LBP2+QNDvCwT9
vkDQ7wsE/b5A0O8LBP2+QNDvCwT9vkDQ7wsE/b5A0O8LBP2+QNDvCwT9vkDQ
7wsE/b5A0O8LBP2+QNDvCwT9vvg8giDvINAJCHQFAh0iF/T7AkE/RhD0YwRB
P0YQ9GMEQT9GEPRjBEE/RhD0YwRBP0YQ9GMEQT9GEPRjBEE/RhD0YwRBP0YQ
9GMEQT9GEPRjBEE/RhD0YwRBP0YQ9GMEQT9GEPRj5POoEORdIdCJQqArhUCH
yAX9GMFz7arBzQ76EadmZ/evbvxdHnmUqmz2ro541wxfeSLAjwR3cPznSb/J
SsY5exDYKwT2zD8I/PPzYf5hvHmkXaMelKPLqt9Y/n964Dj28xTY8xz1Jpg/
aGzYlBHt40n+dow2ufNlDrnuG5io9qWOcBwEnNnzfpg92C6Z/6rvPU9in+Dx
UH+AsZL5GR7xWuO/v9vVG+pXxPUzxvlzHOfP+VEw/wJ7IrDnuVLgB+P/fwJH
ZB0=
        "],
       VertexTextureCoordinates->CompressedData["
1:eJx1mzGoJtUZhi9JY7ttumBrabrIdrYBK1vFFKkEW20EW0GbxSKEWGnpKTdV
rkWKCMJww7AEGRwnMeMkGW9nK/dfnm94nzO/zeHZvf8/Z/Zx5nzfe8799Ztv
v/b7X9zc3Pzxlzc3D+Pz/z76LeMn7/7qjaefffo4uRW/9fSzR0/e/Uvxk8vf
3xa/94CP/lb85uXn/1786uv7Hz7499f6/FD8wlevfPjFN3f6vrH44dN/evVZ
8RuX7/9n8d3zL9D1puJvLj/wra4/F//uxZd+evnL7zSfpfjLdx5+4l/Fl48/
+r74N5cf+I/muxZ//ujhij9o/lvx5eue/Lf4H5cJ/K/44R/nha/+r/vbi5+P
9+LD6/nYivEL4xfGL4xfGL/5+aEYv/l9YzF+YfzC+M3rTcX4zevPxfjN+SzF
+IXxC+M357sW4zfnvxXjF8YvjN+8v/1xPpf34uM5Pfd6jOm3yW+T3ya/TX6b
/Db5bfLb5LfJb5PfJr9Nfpv8Nvlt8tvkt8lvk98mv01+m/w2+W3y2+S3yW+T
3/69e/6cHl494hfGL4xfGL/5+aEYv/l9YzF+YfzC+M3rTcX4zevPxfjN+SzF
+IXxC+M357sW4zfnvxXjF8YvjN+8v/1xrpv34mMdPX/vts4j7BG/MH5h/Obn
hmL85veNxfiF8QvjN683FeM3rz8X4zfnsxTjF8YvjN+c71qM35z/VoxfGL8w
fvP+9mL8XquLztfR1j2X9gh7xC+M3/z8UIzf/J6xGL8wfmH85vWmYvzm9edi
/OZ8lmL8wviF8ZvzXYvxm/PfivEL4xfGb97fXozfa3XueV3Uuvesn0t7hD3i
Nz8/FOM3v28sxi+MXxi/eb2pGL95/bkYvzmfpRi/MH5h/OZ812L85vy3YvzC
+IXxm/e3F+P3Wt9yXue2bt30e9bPpT3CHvEL4ze/byzGL4xfGL95nakYv3n9
uRi/OZ+lGL8wfmH85nzXYvzm/Ldi/ML4hfGb97cX4/daH3retxx1rusir6N+
7/o5tVePuf4O5RfO9XfQ+jto/R3KL5zr71B+4Vx/B62/g9bfQevvoPV30Po7
aP0dtP4OWn8Hrb+D1t+h/GaOcC8+coXzPrR1da3rIK+bfs/6ubRH2CN+YfzC
+IXxm9ebivGb15+L8ZvzWIrxC+MXxm/Ody3Gb85/K8YvjF8Yv3l/ezF+r+VE
57nC0Ye6b3Gd67rI66jfu35O7dVj1lej6qtR9dVYfuGsr8byC2d9NZZfOOur
UfXVqPpqVH01qr4aVV+Nqq9G1Vej6qux/GbOdy8+cr/znKh1faf7FNe1roO8
bvo96+fSHmGP+IXxm9ebivGb15+L8ZvzWYrxC+MXxm/Ocy3Gb85/K8YvjF8Y
v3l/ezF+r+W457lf63KEXPduuz4Fdp3rusjrqN+7fk7t1SN+83pTMX7z+nMx
fnM+SzF+YfzC+M35rsX4zXlvxfiF8QvjN+9vL8Zv8pHLn+e4rcuFnCO473Sf
4rrWdZDXTb9n/VzaI+wRvzB+8/pzMX5zPksxfmH8wvjN+a7F+M35b8X4hfEL
4zfvby/G77V9lvNc/shxnfs5J3Ku4D7UfYvrXNdFXkf93vVzaq8esz+ayi+c
/dFUfuHsjyb1R5P6o6n8wtkfTeUXzv5oUn80qT+aym/uk92Lj32z832W1uW2
zvmcCzlHcN/pPsV1resgr5t+z/q5tEfYI35h/OZ8lmL8wviF8ZvzXYvxm/Pf
ivEL4xfGb97fXozfa/ug5/tmxz6Lc3nnuM79nBM5V3Af6r7Fda7rIq+jfu/6
ObVXj9n/zuUXzv53Vv87q/+dyy+c/e9cfmH8wtn/zup/5/ILZ//b72uf74O2
bl/FObxzW+d8zoWcI7jvdJ/iutZ1kNdNv2f9XNoj7BG/MH5h/ML4zfmuxfjN
+W/F+IXxC+M3728vxu+1cwrn+9rHPqj3zbzP4lzeOa5zP+dEzhXch7pvcZ3r
usjrqN+7fk7t1WPmG4vyjUX5xlJ+4cw3lvIL4xfOfGNRvrGUXzjzjf7cyfk5
hdbte3qfzPsqzuGd2zrncy7kHMF9p/sU17Wug7xu+j3r59IeYY/4hfGb812L
8Zvz34rxC+MXxm/e316M32vniM7PnbRuHzvXndtunwz2Potzeee4+HUu5BzB
faf7FNe1roO8bvo96+fSHmGP+M35rsX4zflvxfiF8QvjN+9vL8Zv8nEu7Pwc
UevOJXgf2/ue3ifzvopzeOe2zvmcCzlHcN/pPsV1resgr5t+z/q5tEfYI35h
/Ob8t2L8wviF8Zv3txfj99o5v/NzYcc5Ip87yXxyVT65dvug3jfzPgt+nds6
53Mu5BzBfaf7FNe1roO8bvo96+fSHnO+x5j55Fp+YfzCmU+uyifX8gtnPtmf
2zw/59e6c0M+Z+JzCd7H9r6n98m8r+Ic3rmtcz7nQs4R3He6T3Fd6zrI66bf
s34u7RH2iF8YvzB+Yfzm/e3F+L12Dvf83OZxzs/nwjJ/3pQ/b905Be9rex8U
v/l9o/4/P3J5/MLO/ZwTOVdwH+q+xXWu6yKvo37v+jm1V4/4hTN/3pQ/b+UX
zvy5P1d9fg63def6sg+/7c4NwT534nMK+M2+4K7bJ8v31rMuh4ed4zr3c07k
XMF9qPsW17mui7yO+r3r59RePeIXxm/e316M3+TjnPz5uerWndP0uT6fA/O5
IZ8z8bkE72N739P7ZN5XcQ7v3NY5n3Mh5wjuO92nuK51HeR10+9ZP5f2CHvE
b97fXozfa7/3cH5OvnXnbjMnu+3O9cE+F+ZzRPjNvv2u28fOuuJZt0/mfRXn
8M5tnfM5F3KO4L7TfYrrWtdBXjf9nvVzaY+wR/zC+E0+fo/l/PcejnPyPled
+0e79o/27pyfz4Xl/tFxzsTnEryP7X1P75N5X8U5vHNb53zOhZwjuO90n+K6
1nWQ102/Z/1c2mPe3zHm/lH/e0nnv8dy/N6Dz8njF/Y5XJ/b9Dk//Gaudqfv
G1X3P1Mdcexrex/U+2beZ3Eu7xzXuZ9zIucK7kPdt7jOdV3kddTvXT+n9urx
z5cJflwjvuHL7b7zo/6+/xw/x+fha6O/x5/zPDxvfu6vl79/v8bLP9/T63/u
kev45/znvr6vw8/z9/7z8+veP/4ZRBSGZg==
        "]], {}},
     AxesStyle->Directive[
       AbsoluteThickness[0.2]],
     BaseStyle->Automatic,
     Boxed->False,
     DisplayFunction->Identity,
     FaceGridsStyle->Automatic,
     ImagePadding->Automatic,
     Lighting->"Neutral",
     Method->{
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}},
     PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}, {
       Automatic, Automatic}},
     PlotRangePadding->{{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     SphericalRegion->True,
     Ticks->{Automatic, Automatic, Automatic},
     ViewAngle->NCache[Rational[1, 10] Pi, 0.3141592653589793]]}], ",", 
   RowBox[{
    TemplateBox[{"\"next transit time\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"TransitTime\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"TransitTime\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      RowBox[{
        StyleBox["\"Minute: \"", "DateObjectLabel"], 
        "\"Mon 2 Jan 2023 21:29\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2023", ",", "1", ",", "2", ",", "21", ",", "29"}], "}"}],
           ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{
    TemplateBox[{"\"true anomaly\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"TrueAnomaly\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"TrueAnomaly\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"122", "34.48868579520695`", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], "degrees,arcminutes", 
      RowBox[{"{", 
        RowBox[{"\"AngularDegrees\"", ",", "\"Arcminutes\""}], "}"}]},
     "QuantityMixedUnit2"]}], ",", 
   RowBox[{
    TemplateBox[{"\"volume\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"Volume\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Volume\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"2.1967406197026067819`3.9582126810282485*^19", 
      RowBox[{
        SuperscriptBox["\"m\"", "3"]}], "meters cubed", 
      SuperscriptBox["\"Meters\"", "3"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"zenith angle\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PlanetaryMoon\"", ",", "\"ZenithAngle\""}], "]"}], 
      "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"ZenithAngle\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"120", "40", "18.143717374096745033`2.215685830460215", 
      RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
      RowBox[{"\[ThinSpace]", "\"'\""}], 
      RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arcminutes,arcseconds", 
      RowBox[{"{", 
        RowBox[{
         "\"AngularDegrees\"", ",", "\"Arcminutes\"", ",", "\"Arcseconds\""}],
         "}"}]},
     "QuantityMixedUnit3"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.881660811561936*^9, 3.8816609458483*^9},
 CellLabel->"Out[228]=",
 CellID->156943399,ExpressionUUID->"5e208bca-cb0d-4521-960f-fd87b8dfd064"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 615.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> 
  "13.2 for Microsoft Windows (64-bit) (November 18, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 226, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 226, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[809, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1063, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1063, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1232, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1364, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[1497, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1651, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[1893, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 1379986, 25740},
 {"Your Essay Title", 1380172, 25744},
 {"AuthorName", 1380352, 25748},
 {"Abstract", 1380511, 25752},
 {"TemplateCell", 1380693, 25756},
 {"SectionHeader", 1380876, 25760},
 {"ExampleTopicSentence", 1381052, 25764},
 {"ExampleCodeText", 1381227, 25768},
 {"ExampleInput", 1381397, 25772},
 {"ExampleOutput", 1381563, 25776}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[809, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1063, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1232, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1364, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1497, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1651, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[1893, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[2150, 69, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2248, 72, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Closed]],
Cell[CellGroupData[{
Cell[2380, 78, 225, 3, 55, "Section",ExpressionUUID->"9efd37b7-cd99-4e6b-b973-3b2277098ece",
 CellID->352246167],
Cell[CellGroupData[{
Cell[2630, 85, 837, 23, 111, "Subsection",ExpressionUUID->"eec9b955-6fc8-46c0-a5d7-62eea6df38c3",
 CellID->419785375],
Cell[3470, 110, 241, 3, 36, "Text",ExpressionUUID->"19f5c568-5339-4c81-8c48-4f290debef71",
 CellID->48786411],
Cell[CellGroupData[{
Cell[3736, 117, 375, 8, 32, "Input",ExpressionUUID->"59f61926-5b2d-429c-a6e7-0f27a365dd94",
 CellID->13339840],
Cell[4114, 127, 15593, 390, 323, "Output",ExpressionUUID->"54216b74-ecad-432b-814e-a8c5184e1d52",
 CellID->17273215]
}, Open  ]],
Cell[19722, 520, 263, 5, 36, "Text",ExpressionUUID->"31758bf6-655f-4fc7-b77b-b6b6ef764d19",
 CellID->21875308],
Cell[19988, 527, 215, 3, 36, "Text",ExpressionUUID->"87f143a2-d0d7-4873-8774-406fdd577eba",
 CellID->135913308],
Cell[CellGroupData[{
Cell[20228, 534, 369, 9, 32, "Input",ExpressionUUID->"c3429413-a9c5-404c-9ce5-9936c24403e6",
 CellID->57211722],
Cell[20600, 545, 1114, 26, 53, "Output",ExpressionUUID->"2884c406-331a-4d95-b11f-a21ad661320b",
 CellID->67539503]
}, Open  ]],
Cell[21729, 574, 230, 3, 36, "Text",ExpressionUUID->"c001e019-c79c-4812-87ca-0a5a5f8651bd",
 CellID->124390632],
Cell[CellGroupData[{
Cell[21984, 581, 425, 10, 32, "Input",ExpressionUUID->"eabb2ec0-ea13-4104-bba2-055b379060e9",
 CellID->144791410],
Cell[22412, 593, 1424, 36, 73, "Output",ExpressionUUID->"9fd02551-ca68-4f29-acb1-69659c7b75ea",
 CellID->815537168]
}, Open  ]],
Cell[CellGroupData[{
Cell[23873, 634, 216, 3, 46, "Subsubsection",ExpressionUUID->"a7ea8008-32a5-48d7-bff4-46b229692fbf",
 CellID->142185041],
Cell[24092, 639, 231, 3, 35, "Text",ExpressionUUID->"777dbff7-63d1-4ad0-be22-6116d989c5c4",
 CellID->253076874],
Cell[CellGroupData[{
Cell[24348, 646, 413, 10, 28, "Input",ExpressionUUID->"e5b58bd3-5f23-4c3a-a6c5-5cb0650ce595",
 CellID->639453072],
Cell[24764, 658, 343, 9, 32, "Output",ExpressionUUID->"61a441a9-479c-4dd6-acf4-94d2fe11ea01",
 CellID->119887387]
}, Open  ]],
Cell[25122, 670, 288, 4, 35, "Text",ExpressionUUID->"16bcf0d7-7e13-4de9-8df7-90d0a33d9573",
 CellID->75015327],
Cell[25413, 676, 278, 4, 35, "Text",ExpressionUUID->"4b395f63-fffd-425e-8944-3f993567b6c0",
 CellID->433974508],
Cell[CellGroupData[{
Cell[25716, 684, 342, 7, 28, "Input",ExpressionUUID->"6befaeb9-cd87-43f5-83e2-cc2366f21456",
 CellID->664121034],
Cell[26061, 693, 21980, 432, 96, "Output",ExpressionUUID->"ff4a7b84-5a15-40cf-8b78-42570646b4e8",
 CellID->80828597]
}, Open  ]],
Cell[CellGroupData[{
Cell[48078, 1130, 516, 13, 28, "Input",ExpressionUUID->"3f596d90-64ce-40c6-b3ec-7e542a855f2f",
 CellID->2302898],
Cell[48597, 1145, 24434, 572, 374, "Output",ExpressionUUID->"bfd419a2-876e-4075-9763-884f24ce36e9",
 CellID->291924530]
}, Open  ]],
Cell[CellGroupData[{
Cell[73068, 1722, 590, 15, 28, "Input",ExpressionUUID->"097d8013-d26f-4716-b7ab-372b237ae5c3",
 CellID->292630481],
Cell[73661, 1739, 24361, 572, 374, "Output",ExpressionUUID->"cb1fbc09-63fa-4450-975b-658d18ab29f9",
 CellID->134461410]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98071, 2317, 275, 4, 38, "Subsubsection",ExpressionUUID->"0f705a4a-be4c-4498-81cc-eaf3cb50749b",
 CellID->242507578],
Cell[98349, 2323, 661, 20, 35, "Text",ExpressionUUID->"fbd067d2-76ca-4e4b-85f0-1a4db4147fce",
 CellID->709184363],
Cell[CellGroupData[{
Cell[99035, 2347, 420, 10, 28, "Input",ExpressionUUID->"3bb69e95-49fa-4ba7-8795-7af9fa609d31",
 CellID->369582274],
Cell[99458, 2359, 1065, 24, 32, "Output",ExpressionUUID->"d13a7deb-7e2a-48f2-88ae-dfb90aaf7ffd",
 CellID->501691413]
}, Open  ]],
Cell[100538, 2386, 233, 3, 35, "Text",ExpressionUUID->"042f8523-a784-4e0e-82aa-9807794e7d9d",
 CellID->613806891],
Cell[CellGroupData[{
Cell[100796, 2393, 457, 11, 28, "Input",ExpressionUUID->"bfcd9fd9-510a-4330-9b1a-629d1ff3bd30",
 CellID->741795267],
Cell[101256, 2406, 775, 18, 32, "Output",ExpressionUUID->"1c6f21eb-58fe-4573-b959-303c14debe01",
 CellID->4656641]
}, Open  ]],
Cell[CellGroupData[{
Cell[102068, 2429, 950, 25, 52, "Input",ExpressionUUID->"b2daba0b-7b51-4959-af16-9e47fb64acb2",
 CellID->565534198],
Cell[103021, 2456, 1185, 30, 39, "Output",ExpressionUUID->"657a42c4-00d4-4147-97c8-a7f9d02e4543",
 CellID->21771389]
}, Open  ]],
Cell[CellGroupData[{
Cell[104243, 2491, 406, 9, 28, "Input",ExpressionUUID->"32adedaf-37bd-4f71-bdaf-90e100735f23",
 CellID->433127764],
Cell[104652, 2502, 769, 17, 40, "Output",ExpressionUUID->"0c1a3e16-ab55-44ee-839f-ac890ab0dc47",
 CellID->461947678]
}, Open  ]],
Cell[105436, 2522, 240, 3, 35, "Text",ExpressionUUID->"e3b26515-40fd-48e9-a983-5916594f4ac0",
 CellID->150525525],
Cell[CellGroupData[{
Cell[105701, 2529, 453, 11, 28, "Input",ExpressionUUID->"a5f165a8-ec62-4805-a00a-0db9b0e00399",
 CellID->5034601],
Cell[106157, 2542, 802, 18, 56, "Output",ExpressionUUID->"b0bb4c1b-b8f5-40e4-99c0-cdbfc7d4926d",
 CellID->109518477]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[107008, 2566, 204, 3, 38, "Subsubsection",ExpressionUUID->"07b0694d-6cdc-4927-b34c-7b13b72b3e2f",
 CellID->44848217],
Cell[107215, 2571, 304, 6, 28, "Input",ExpressionUUID->"c1f6d47f-d661-4654-b515-f15032ad79f8",
 CellID->174387449],
Cell[CellGroupData[{
Cell[107544, 2581, 286, 5, 28, "Input",ExpressionUUID->"55e44e02-29e0-4eff-b5a1-40d972136480",
 CellID->62994514],
Cell[107833, 2588, 442, 12, 32, "Output",ExpressionUUID->"cc798171-e676-4b84-8dd0-0c266011ed8c",
 CellID->310697778]
}, Open  ]],
Cell[CellGroupData[{
Cell[108312, 2605, 357, 8, 28, "Input",ExpressionUUID->"392dcc64-5da3-4309-8b75-1600b04effff",
 CellID->407071865],
Cell[108672, 2615, 1387, 34, 50, "Output",ExpressionUUID->"579adf49-fc71-4228-b413-87c43c067ec5",
 CellID->703730860]
}, Open  ]],
Cell[CellGroupData[{
Cell[110096, 2654, 443, 10, 28, "Input",ExpressionUUID->"1088decc-6cfb-4349-a7a5-bdd5c2fe9942",
 CellID->119357657],
Cell[110542, 2666, 1047, 24, 32, "Output",ExpressionUUID->"5a1acd96-9c9b-447d-a8ac-df80e51205f9",
 CellID->3756744]
}, Open  ]],
Cell[CellGroupData[{
Cell[111626, 2695, 802, 20, 76, "Input",ExpressionUUID->"c8023f26-cd8c-461a-953f-0fe430ecb5c0",
 CellID->122096255],
Cell[112431, 2717, 1583, 40, 39, "Output",ExpressionUUID->"4c2efaf4-6ae9-470b-bd32-1566d17dfa5b",
 CellID->54023871]
}, Open  ]],
Cell[CellGroupData[{
Cell[114051, 2762, 400, 9, 28, "Input",ExpressionUUID->"e9598d64-46b6-4bba-a353-9752bd1ff16d",
 CellID->608897127],
Cell[114454, 2773, 839, 20, 42, "Output",ExpressionUUID->"441b377b-d027-42ef-8f8e-7e69b9816612",
 CellID->274016423]
}, Open  ]],
Cell[CellGroupData[{
Cell[115330, 2798, 438, 10, 28, "Input",ExpressionUUID->"b6df3e09-995e-45f3-9610-1716daa6fac8",
 CellID->183316085],
Cell[115771, 2810, 849, 21, 56, "Output",ExpressionUUID->"a82ea720-ca30-4567-a192-2d2813772d6d",
 CellID->593612404]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116669, 2837, 170, 2, 37, "Subsubsection",ExpressionUUID->"7a4ab481-66ed-4066-95dd-a5e872941caa",
 CellID->50388709],
Cell[116842, 2841, 180, 2, 35, "Text",ExpressionUUID->"73c9475a-b672-465d-8ad0-40b2279d4acb",
 CellID->384396788],
Cell[117025, 2845, 181, 2, 35, "Text",ExpressionUUID->"9969d60e-5d53-4ef7-acda-bf8625ab1eb2",
 CellID->11232486],
Cell[117209, 2849, 666, 17, 58, "Text",ExpressionUUID->"8f389563-2840-485c-844b-c3e51028aaf9",
 CellID->153587460],
Cell[117878, 2868, 1446, 37, 104, "Text",ExpressionUUID->"f485437c-5902-445e-a4a6-bf02163bae55",
 CellID->835482792],
Cell[119327, 2907, 818, 22, 35, "Text",ExpressionUUID->"d65acbcd-4804-494a-ad1a-7c4247f002bb",
 CellID->42215326],
Cell[120148, 2931, 459, 11, 35, "Text",ExpressionUUID->"888b5d55-ddec-4f1e-8d6c-065eeee47d1b",
 CellID->85804393],
Cell[CellGroupData[{
Cell[120632, 2946, 220, 4, 28, "Input",ExpressionUUID->"2b36520e-1b2d-469f-8338-24e7d413144b",
 CellID->206400298],
Cell[120855, 2952, 184, 3, 32, "Output",ExpressionUUID->"ed27e3a9-30a5-4bd1-8033-90164a51fb5a",
 CellID->762686721]
}, Open  ]],
Cell[CellGroupData[{
Cell[121076, 2960, 265, 6, 32, "Input",ExpressionUUID->"78329cc4-0def-439c-92e3-75b18037fc25",
 CellID->191719285],
Cell[121344, 2968, 173, 3, 32, "Output",ExpressionUUID->"ccd44e02-ce01-406a-8dcf-9033f1d9b64e",
 CellID->831696361]
}, Open  ]],
Cell[CellGroupData[{
Cell[121554, 2976, 288, 7, 34, "Input",ExpressionUUID->"361b8743-f842-4558-8671-fe3cf149ae28",
 CellID->236749731],
Cell[121845, 2985, 173, 3, 32, "Output",ExpressionUUID->"7edfc533-eea9-4ba0-8882-0722d7715505",
 CellID->216377726]
}, Open  ]],
Cell[CellGroupData[{
Cell[122055, 2993, 261, 6, 31, "Input",ExpressionUUID->"b61f2d21-8349-4a39-b8b9-f34e1845a24b",
 CellID->393667113],
Cell[122319, 3001, 238, 6, 35, "Output",ExpressionUUID->"68bec4d5-431d-4fd8-93fe-51aeccd9ff07",
 CellID->182047581]
}, Open  ]],
Cell[CellGroupData[{
Cell[122594, 3012, 381, 11, 31, "Input",ExpressionUUID->"d657d60c-c009-495c-9b24-e18e78e3ff4f",
 CellID->234940268],
Cell[122978, 3025, 174, 3, 32, "Output",ExpressionUUID->"8b63af43-eb3b-4e33-be95-44d3fd502952",
 CellID->42800650]
}, Open  ]],
Cell[CellGroupData[{
Cell[123189, 3033, 508, 16, 48, "Input",ExpressionUUID->"23656e62-76b6-44d9-af7c-1949b62338c0",
 CellID->54959966],
Cell[123700, 3051, 173, 3, 32, "Output",ExpressionUUID->"91d028ac-d244-4315-971d-0279d4b9df91",
 CellID->578357756]
}, Open  ]],
Cell[123888, 3057, 357, 6, 35, "Text",ExpressionUUID->"1f9c0120-0759-4e64-bdd9-b88089e9cac4",
 CellID->86429511],
Cell[124248, 3065, 381, 7, 58, "Text",ExpressionUUID->"73d05e85-c943-4059-92b3-7d7232c569cf",
 CellID->739541637],
Cell[124632, 3074, 400, 10, 35, "Text",ExpressionUUID->"63f126fe-6686-4a35-a862-b39bcf8878b9",
 CellID->83226331],
Cell[125035, 3086, 83567, 1373, 265, "Input",ExpressionUUID->"28bc09d8-521b-4cf9-b534-6fd286a3fa99",
 CellID->755622316]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208651, 4465, 437, 8, 111, "Subsection",ExpressionUUID->"ca64d37d-ad96-4bd0-8a41-b6b2a3ad0f43",
 CellID->469011730],
Cell[CellGroupData[{
Cell[209113, 4477, 180, 2, 45, "Subsubsection",ExpressionUUID->"104e8ce4-3a09-44f0-8ef1-c69ef38aafd7",
 CellID->302402564],
Cell[CellGroupData[{
Cell[209318, 4483, 323, 7, 28, "Input",ExpressionUUID->"b2a33f2b-ead6-43bc-8219-59aacfd15663",
 CellID->616551503],
Cell[209644, 4492, 1359, 33, 50, "Output",ExpressionUUID->"ff658528-25cc-4f76-ace9-32f5ec4703cb",
 CellID->242244555]
}, Open  ]],
Cell[CellGroupData[{
Cell[211040, 4530, 377, 8, 28, "Input",ExpressionUUID->"5df4d1b5-989a-41a0-a770-7c373dada49f",
 CellID->513164712],
Cell[211420, 4540, 1589, 40, 88, "Output",ExpressionUUID->"d2b900cc-9f85-4812-9e72-b5838a3b3709",
 CellID->7889767]
}, Open  ]],
Cell[CellGroupData[{
Cell[213046, 4585, 693, 16, 28, "Input",ExpressionUUID->"e3f6cf70-f7db-46ba-952c-79a289a45e36",
 CellID->22094146],
Cell[213742, 4603, 3049, 82, 55, "Output",ExpressionUUID->"1978f978-ba50-494a-ae60-b75ee2f71e4c",
 CellID->138865763]
}, Open  ]],
Cell[CellGroupData[{
Cell[216828, 4690, 739, 18, 28, "Input",ExpressionUUID->"8f9ccfa3-71d2-4a23-92e5-ab12117f6877",
 CellID->421867238],
Cell[217570, 4710, 2779, 69, 65, "Output",ExpressionUUID->"4631825d-f5f3-4930-b9bb-581ada1aaa68",
 CellID->455042421]
}, Open  ]],
Cell[CellGroupData[{
Cell[220386, 4784, 447, 11, 28, "Input",ExpressionUUID->"98919788-1c3e-44b3-b139-b7e0c6fc6f12",
 CellID->88506436],
Cell[220836, 4797, 1473, 37, 32, "Output",ExpressionUUID->"f8624951-ab3c-4cfe-aa56-b4e73a912a8e",
 CellID->694431784]
}, Open  ]],
Cell[CellGroupData[{
Cell[222346, 4839, 556, 15, 28, "Input",ExpressionUUID->"9c6b5e4b-416b-4777-821b-f125e5542017",
 CellID->58868773],
Cell[222905, 4856, 1093, 25, 32, "Output",ExpressionUUID->"bc3d4e2d-036b-4bd0-a4fa-c8b976b2244b",
 CellID->553381406]
}, Open  ]],
Cell[CellGroupData[{
Cell[224035, 4886, 1228, 32, 48, "Input",ExpressionUUID->"fd317f80-43d8-481d-81ec-b5a632acf172",
 CellID->282328],
Cell[225266, 4920, 1504, 39, 55, "Output",ExpressionUUID->"10affd17-fe34-476f-8d9b-32f5eec27ed3",
 CellID->488494368]
}, Open  ]],
Cell[CellGroupData[{
Cell[226807, 4964, 1549, 37, 35, "Input",ExpressionUUID->"c9e88a5c-2acd-46e5-8eaa-7bf9e82497f7",
 CellID->408595476],
Cell[228359, 5003, 1425, 35, 39, "Output",ExpressionUUID->"e3074817-589a-4f8e-a56e-9eb066ac7c1c",
 CellID->386394247]
}, Open  ]],
Cell[CellGroupData[{
Cell[229821, 5043, 1258, 33, 67, "Input",ExpressionUUID->"da51eefa-93d0-468c-a684-9b25fc49db49",
 CellID->395192145],
Cell[231082, 5078, 1018, 26, 43, "Output",ExpressionUUID->"0caa504d-c33a-4daf-8873-57f706e0e74a",
 CellID->148514775]
}, Open  ]],
Cell[CellGroupData[{
Cell[232137, 5109, 1335, 35, 67, "Input",ExpressionUUID->"96852588-378b-4819-bcf9-cfe0841d6c96",
 CellID->263206040],
Cell[233475, 5146, 750, 19, 37, "Output",ExpressionUUID->"54351f27-2de7-4c2d-bbb9-da192b88252e",
 CellID->798619011]
}, Open  ]],
Cell[CellGroupData[{
Cell[234262, 5170, 1406, 36, 86, "Input",ExpressionUUID->"efb94e13-70b4-4360-bcb7-3cbafdbf4c30",
 CellID->8222612],
Cell[235671, 5208, 750, 19, 37, "Output",ExpressionUUID->"89ebb7a5-791b-43a5-b74e-4d95cbda2561",
 CellID->590391408]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[236470, 5233, 186, 2, 37, "Subsubsection",ExpressionUUID->"8d569d15-b59e-4390-a978-96ab32f28c17",
 CellID->310200589],
Cell[236659, 5237, 1094, 23, 58, "Text",ExpressionUUID->"377bdd96-6756-49ec-8bb3-5a99d48586b8",
 CellID->15397758],
Cell[237756, 5262, 359, 6, 35, "Text",ExpressionUUID->"bcfc1c5f-934b-4a63-8e31-715a72b5e53c",
 CellID->111000613],
Cell[238118, 5270, 751, 11, 104, "Text",ExpressionUUID->"9b0e4ef4-468f-4068-8393-6a8226a065f1",
 CellID->48370094],
Cell[238872, 5283, 783, 16, 58, "Text",ExpressionUUID->"6a0c8b42-638d-4c25-bb38-f13dfab0ca15",
 CellID->532950141],
Cell[239658, 5301, 228, 4, 35, "Text",ExpressionUUID->"43d3eac3-87b5-4169-9644-0e7b6aaf4084",
 CellID->952788274],
Cell[239889, 5307, 367, 6, 58, "Text",ExpressionUUID->"b626bd0b-4fa0-4ed6-8c51-656408e336d2",
 CellID->425974014]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240305, 5319, 478, 8, 81, "Subsection",ExpressionUUID->"bd6fc047-8784-494d-a329-a1f479e29b38",
 CellID->481610273],
Cell[240786, 5329, 181, 2, 35, "Text",ExpressionUUID->"504c3028-6cf7-41e5-9585-d7610613ac7e",
 CellID->733354051],
Cell[240970, 5333, 420, 7, 58, "Text",ExpressionUUID->"5fc1aa5c-613b-4242-a66e-404235047e47",
 CellID->222683407],
Cell[CellGroupData[{
Cell[241415, 5344, 1532, 37, 35, "Input",ExpressionUUID->"3d34ce51-4887-4ce9-a1bd-cba24cacd04f",
 CellID->27925776],
Cell[242950, 5383, 1405, 35, 39, "Output",ExpressionUUID->"f00f1c90-e439-44fd-b2ae-cd5a11f218ea",
 CellID->488700563]
}, Open  ]],
Cell[CellGroupData[{
Cell[244392, 5423, 462, 11, 28, "Input",ExpressionUUID->"4c48732d-b271-4396-93de-18596d5da1db",
 CellID->178732759],
Cell[244857, 5436, 843, 22, 39, "Output",ExpressionUUID->"89ddc45c-600e-47c8-af5e-002dea4b15f7",
 CellID->186462973]
}, Open  ]],
Cell[CellGroupData[{
Cell[245737, 5463, 791, 20, 28, "Input",ExpressionUUID->"b6b246b6-cf0f-491a-948a-0cbae82bfe71",
 CellID->356690338],
Cell[246531, 5485, 751, 19, 37, "Output",ExpressionUUID->"36fbd680-028f-44a6-af73-d19c638d5645",
 CellID->53938758]
}, Open  ]],
Cell[CellGroupData[{
Cell[247319, 5509, 1644, 42, 31, "Input",ExpressionUUID->"65ff9407-95cf-465c-a7de-f208d025b531",
 CellID->486450643],
Cell[248966, 5553, 754, 18, 57, "Output",ExpressionUUID->"795429b4-a2e7-4927-8eb8-d5d51cbd177b",
 CellID->1039887709]
}, Open  ]],
Cell[CellGroupData[{
Cell[249757, 5576, 1665, 43, 31, "Input",ExpressionUUID->"d7988c34-551a-4e19-9823-fd3de0bc3d72",
 CellID->68925169],
Cell[251425, 5621, 709, 17, 37, "Output",ExpressionUUID->"fb977762-7423-4d51-a433-dd223c9d2a54",
 CellID->34731986]
}, Open  ]],
Cell[CellGroupData[{
Cell[252171, 5643, 1644, 42, 31, "Input",ExpressionUUID->"08a5148d-58fc-4f7c-b996-5e20f06428fb",
 CellID->223044631],
Cell[253818, 5687, 735, 18, 57, "Output",ExpressionUUID->"b5171f39-7575-44b8-ab68-9e7ac1e0a3ef",
 CellID->404274715]
}, Open  ]],
Cell[CellGroupData[{
Cell[254590, 5710, 1666, 43, 31, "Input",ExpressionUUID->"538b3f24-388d-46d9-a539-2f8db9a31458",
 CellID->225575827],
Cell[256259, 5755, 714, 17, 37, "Output",ExpressionUUID->"cf0b4e03-b513-4bf4-9693-1fd018ab564f",
 CellID->150481278]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[257022, 5778, 436, 8, 65, "Subsection",ExpressionUUID->"3dd02d54-e846-4637-bff2-0d4121de84da",
 CellID->35064338],
Cell[257461, 5788, 180, 2, 35, "Text",ExpressionUUID->"975216cc-3411-4371-972e-24f56e91c6bc",
 CellID->89811106],
Cell[257644, 5792, 396, 7, 35, "Text",ExpressionUUID->"8b23e39a-59a6-4751-b415-f6704a2def32",
 CellID->186926570],
Cell[CellGroupData[{
Cell[258065, 5803, 250, 4, 28, "Input",ExpressionUUID->"49ace90c-d57d-4562-bb33-095fe806dbb8",
 CellID->700969104],
Cell[258318, 5809, 1705, 41, 109, "Output",ExpressionUUID->"5e29555c-51ad-4e60-b23a-7a7f4b375aa0",
 CellID->47966404]
}, Open  ]],
Cell[CellGroupData[{
Cell[260060, 5855, 299, 6, 28, "Input",ExpressionUUID->"73c44ea1-9458-4bc5-a628-1a549fed1a9c",
 CellID->865863297],
Cell[260362, 5863, 340, 8, 32, "Output",ExpressionUUID->"b6ccb670-64e0-4b87-9721-3397bfad6246",
 CellID->3439827]
}, Open  ]],
Cell[CellGroupData[{
Cell[260739, 5876, 294, 6, 28, "Input",ExpressionUUID->"29598cb2-94b6-4c0b-af12-1e149597a013",
 CellID->74842701],
Cell[261036, 5884, 307, 8, 32, "Output",ExpressionUUID->"e11e6e63-a3c8-4987-a7c5-4e92f50fc9b5",
 CellID->4835052]
}, Open  ]],
Cell[CellGroupData[{
Cell[261380, 5897, 246, 4, 28, "Input",ExpressionUUID->"293ed9fe-f2d9-4ac5-8177-03c23f010097",
 CellID->426838715],
Cell[261629, 5903, 6184, 146, 356, "Output",ExpressionUUID->"bc4fee39-3299-4d3b-855b-adddfd8b92a5",
 CellID->390124170]
}, Closed]],
Cell[267828, 6052, 200, 3, 24, "Input",ExpressionUUID->"1c69ee69-1292-4909-ad6c-e95a3f75aaaa",
 CellID->18310671],
Cell[CellGroupData[{
Cell[268053, 6059, 438, 9, 39, "Input",ExpressionUUID->"53c24add-256d-4056-8192-93355740ab3b",
 CellID->62237398],
Cell[268494, 6070, 293, 7, 42, "Output",ExpressionUUID->"6b2a5705-48e6-494b-94d3-2c8f2774537c",
 CellID->301186560]
}, Open  ]],
Cell[268802, 6080, 3870, 96, 77, "Input",ExpressionUUID->"b27d810a-ead4-408a-b156-7963ec3bdfe9",
 CellID->50671645],
Cell[CellGroupData[{
Cell[272697, 6180, 1533, 37, 35, "Input",ExpressionUUID->"bde72998-e77a-40e4-bb9b-6fa1bbd7c549",
 CellID->563812493],
Cell[274233, 6219, 1405, 35, 39, "Output",ExpressionUUID->"f95aa01b-712a-4e48-8163-7e48787c3043",
 CellID->567321252]
}, Open  ]],
Cell[CellGroupData[{
Cell[275675, 6259, 461, 11, 28, "Input",ExpressionUUID->"20e42f27-18e0-4f8e-b8b4-d3e22a746b0b",
 CellID->24885021],
Cell[276139, 6272, 842, 22, 39, "Output",ExpressionUUID->"fd450ca1-cceb-4d11-a5ef-b2ab97229c1d",
 CellID->74900162]
}, Open  ]],
Cell[CellGroupData[{
Cell[277018, 6299, 791, 20, 28, "Input",ExpressionUUID->"fd38d878-1892-4924-8eeb-e5e130f02c2c",
 CellID->332312475],
Cell[277812, 6321, 752, 19, 37, "Output",ExpressionUUID->"7e66b80d-39f0-4d56-b58c-84816b2fa915",
 CellID->411423240]
}, Open  ]],
Cell[CellGroupData[{
Cell[278601, 6345, 1644, 42, 31, "Input",ExpressionUUID->"bc9412af-e468-43f9-a61e-0102bd6d43a2",
 CellID->529367812],
Cell[280248, 6389, 753, 18, 57, "Output",ExpressionUUID->"9e17fba3-1180-4156-8af4-7a9697589ae4",
 CellID->489978164]
}, Open  ]],
Cell[CellGroupData[{
Cell[281038, 6412, 1666, 43, 31, "Input",ExpressionUUID->"65e6dfa7-29bb-43ab-89cd-a7e92de23fcf",
 CellID->213558705],
Cell[282707, 6457, 710, 17, 37, "Output",ExpressionUUID->"a96fce06-ceb4-4d65-b535-2b09805d930f",
 CellID->412668264]
}, Open  ]],
Cell[CellGroupData[{
Cell[283454, 6479, 1644, 42, 31, "Input",ExpressionUUID->"81ac258c-bf97-4bdc-9820-40552834411c",
 CellID->814167080],
Cell[285101, 6523, 735, 18, 57, "Output",ExpressionUUID->"8a7195cb-c055-44eb-acdd-5bef280063b6",
 CellID->910236428]
}, Open  ]],
Cell[CellGroupData[{
Cell[285873, 6546, 1666, 43, 31, "Input",ExpressionUUID->"af675fba-dd5f-4795-aa41-2cf0f3ceaf1e",
 CellID->461084166],
Cell[287542, 6591, 714, 17, 37, "Output",ExpressionUUID->"aaa59a96-4e2b-454a-be82-f14430108929",
 CellID->327260190]
}, Open  ]],
Cell[288271, 6611, 188, 2, 35, "Text",ExpressionUUID->"34f34fce-71be-45bc-9b56-d8c25e7b8c91",
 CellID->322552742],
Cell[CellGroupData[{
Cell[288484, 6617, 615, 12, 39, "Input",ExpressionUUID->"47781a27-9db0-4d8f-84e2-2c3282e4cc64",
 CellID->260442654],
Cell[289102, 6631, 63946, 1408, 2039, "Output",ExpressionUUID->"9744b98d-3075-4324-a7be-9fde3ab5fe2c",
 CellID->55259246]
}, Open  ]],
Cell[CellGroupData[{
Cell[353085, 8044, 709, 15, 39, "Input",ExpressionUUID->"4cf4b933-2fba-4570-b544-25a600410c7f",
 CellID->56600893],
Cell[353797, 8061, 668, 14, 42, "Output",ExpressionUUID->"be13447c-7aff-42da-901b-38610de5481d",
 CellID->186052966]
}, Open  ]],
Cell[354480, 8078, 2595, 63, 48, "Input",ExpressionUUID->"157d8aca-2c50-4f2c-90c8-aa277d4fe15d",
 CellID->518806962],
Cell[CellGroupData[{
Cell[357100, 8145, 2716, 66, 58, "Input",ExpressionUUID->"76897b35-49a2-41fd-b82b-d43b757b0bca",
 CellID->228297112],
Cell[359819, 8213, 537, 10, 81, "Output",ExpressionUUID->"bfe6ab5f-f54f-4c46-9430-fcbb9f528946",
 CellID->85063671]
}, Open  ]],
Cell[CellGroupData[{
Cell[360393, 8228, 2697, 66, 48, "Input",ExpressionUUID->"4d51a4c9-ecc5-4511-8742-222bbe5aaf6d",
 CellID->496783543],
Cell[363093, 8296, 2588, 64, 60, "Output",ExpressionUUID->"ea58da3e-89de-4821-a9df-d413c88df174",
 CellID->362337088]
}, Open  ]],
Cell[365696, 8363, 1197, 29, 39, "Input",ExpressionUUID->"6282a1df-0fb5-402d-99a1-ef680cf240bb",
 CellID->262033553],
Cell[366896, 8394, 168, 2, 35, "Text",ExpressionUUID->"ab72ed89-d738-4674-b92d-ffac74ccadf3",
 CellID->235015138],
Cell[CellGroupData[{
Cell[367089, 8400, 605, 13, 39, "Input",ExpressionUUID->"24301fcd-9c2d-41f8-9d6b-0807432f4aa5",
 CellID->481528808],
Cell[367697, 8415, 900702, 15203, 1350, "Output",ExpressionUUID->"5e208bca-cb0d-4521-960f-fd87b8dfd064",
 CellID->156943399]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

